[
    {
        "title": "Do it! 자바 프로그래밍 입문 (개발 10년, 강의 10년! 명강사의 기초 튼튼 코딩 밥상!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13797129",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/971/13797129.jpg?type=m1&udate=20180810",
        "author": "박은종",
        "price": "25000",
        "discount": "22500",
        "publisher": "이지스퍼블리싱",
        "pubdate": "20180806",
        "isbn": "1163030198 9791163030195",
        "description": "왕초보 학생들과 부대끼며 깨달은 눈높이로 자바 학습 노하우 대공개!\n개발 실무 10년, 강의 10년! 명강사의 기초 튼튼 코딩 밥상! \n왕초보 학생들과 부대끼며 깨달은 눈높이로 자바 학습 노하우 대공개!\n비전공자, 문과생도 무릎을 ‘탁!’ 치며 이해하는 20년 경력 명강사의 자바 강의! 프로그래머를 꿈꾸는... ",
        "authorIntroContent": "\n박은종\n저자 : 박은종저자 : 박은종저자 박은종동국대학교에서 컴퓨터 공학을 전공하고 서울대학교 대학원에서 컴퓨터 공학 석사 학위를 받았습니다. 회사를 다닐 때는 자바, C, C++ 등 언어로 다수의 개발 프로젝트를 진행하였고, 비트 컴퓨터, T 아카데미에서 자바, 웹, 자료구조와 알고리즘, 모바일, 디자인 패턴 분야 등의 강의를 진행하였습니다. 국민대와 경희대에서 비전공자를 대상으로 하는 프로그래밍 강의를 하였으며, 최근에는 NHN NEXT에서 겸직 교수로 자바 프로그래밍과 프로그래밍 연습 강의를 진행했습니다.10년은 개발자로 일했기에 실무에서 필요한 내용을 잘 알고, 또 다른 10년은 강의를 하며 초보자의 마음까지 잘 알게 되었습니다. 요즘 최대 관심사는 초등학생부터 어른까지 각계각층의 사람들이 멋진 프로그래밍 세계에 관심을 가지고 공부할 수 있도록 도와주는 것입니다.\n",
        "bookIntroContent": "개발 실무 10년, 강의 10년! 명강사의 기초 튼튼 코딩 밥상! 왕초보 학생들과 부대끼며 깨달은 눈높이로 자바 학습 노하우 대공개!개발 실무 10년, 강의 10년! 명강사의 기초 튼튼 코딩 밥상! 왕초보 학생들과 부대끼며 깨달은 눈높이로 자바 학습 노하우 대공개!비전공자, 문과생도 무릎을 ‘탁!’ 치며 이해하는 20년 경력 명강사의 자바 강의! 프로그래머를 꿈꾸는 사람의 인생 과제인 자바를 135개 그림과 240개 예제로 더욱 쉽게 배웁니다. 프로그래밍 입문서 최강자 Do it! 시리즈답게 중학생도 이해할 수 있는 친절한 설명, 직접 만들면서 배우는 실전형 실습 예제, 배운 개념을 되새기는 복습 퀴즈, 장을 마무리하는 연습 문제와 총정리 최종 프로젝트까지! 자고 일어나도 자바 문법이 기억날 만큼 체계적으로 구성했습니다. 또한 저자의 자바 학습 노하우를 담은 무료 동영상 강의를 제공하며, 저자 블로그에서 질문할 수 있으니 혼자 공부하는 사람도 안심하고 자바에 입문할 수 있습니다. 왕초보도 공부할 맛 나는 《Do it! 자바 프로그래밍 입문》과 함께 자바의 기본을 완성해 보세요!",
        "tableOfContentsContent": "\n첫째마당 \r자바 기본 익히기\r 01 자바 프로그래밍 시작하기\r01-1 프로그래밍과 자바\r01-2 자바 개발 환경 설치하기\r01-3 이클립스로 첫 프로그램 만들기\r 02 변수와 자료형 \r02-1 컴퓨터는 데이터를 어떻게 표현할까? \r02-2 변수란 무엇일까? \r02-3 변수가 저장되는 공간의 특성, 자료형 \r02-4 상수와 리터럴\r02-5 형 변환 \r 03 자바의 여러 가지 연산자 \r03-1 기본 연산자 \r03-2 비트 연산자 \r 04 제어 흐름 이해하기 \r04-1 조건문 \r04-2 반복문 \r 둘째마당 \r자바의 핵심, 객체 지향 프로그래밍\r 05 클래스와 객체 1 \r05-1 객체 지향 프로그래밍과 클래스 \r05-2 클래스 살펴보기 \r05-3 메서드 \r05-4 클래스와 인스턴스 \r05-5 생성자 \r05-6 참조 자료형 \r05-7 정보 은닉 \r 06 클래스와 객체 2 \r06-1 this 예약어 \r06-2 객체 간 협력 \r06-3 static 변수 \r06-4 변수 유효 범위 \r06-5 static 응용 ? 싱글톤 패턴 \r 07 배열과 ArrayList \r07-1 배열이란? \r07-2 다차원 배열 \r07-3 ArrayList 클래스 사용하기 \r07-4 배열 응용 프로그램 \r 08 상속과 다형성 \r08-1 상속이란? \r08-2 상속에서 클래스 생성과 형 변환\r08-3 메서드 오버라이딩 \r08-4 다형성 \r08-5 다형성 활용하기 \r08-6 다운 캐스팅과 instanceof \r 09 추상 클래스 \r09-1 추상 클래스 \r09-2 템플릿 메서드 \r09-3 템플릿 메서드 응용하기 \r09-4 final 예약어 \r 10 인터페이스 \r10-1 인터페이스란? \r10-2 인터페이스와 다형성 \r10-3 인터페이스 요소 살펴보기\r10-4 인터페이스 활용하기 \r 셋째마당 \r자바 JDK로 프로그래밍 날개 달기\r 11 기본 클래스 \r11-1 Object 클래스 \r11-2 String 클래스 \r11-3 Wrapper 클래스 \r11-4 Class 클래스 \r 12 컬렉션 프레임워크 \r12-1 제네릭 \r12-2 컬렉션 프레임워크 \r12-3 List 인터페이스 \r12-4 Set 인터페이스\r12-5 Map 인터페이스 \r 13 내부 클래스, 람다식, 스트림 \r13-1 내부 클래스 \r13-2 람다식 \r13-3 스트림 \r 14 예외 처리 \r14-1 예외 클래스 \r14-2 예외 처리하기 \r14-3 예외 처리 미루기 \r14-4 사용자 정의 예외 \r 15 자바 입출력 \r15-1 자바 입출력과 스트림 \r15-2 표준 입출력 \r15-3 바이트 단위 스트림 \r15-4 문자 단위 스트림 \r15-5 보조 스트림\r15-6 직렬화 \r15-7 그 외 입출력 클래스 \r 최종 프로젝트-학점 산출 프로그램 만들기 \rStep1. 문제 정의하기\rStep2. 클래스 정의하고 관계도 그리기 \rStep3. 학점 평가 정책 설계하고 구현하기 \rStep4. 프로그램 테스트하기 \rStep5. 프로그램 업그레이드하기\n",
        "isbn10": "1163030198",
        "isbn13": "9791163030195"
    },
    {
        "title": "Do it! 자바스크립트 + 제이쿼리 입문 (155개 예제로 기본 잡고, 반응형 웹부터 실무 활용 플러그인까지!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13457579",
        "image": "https://bookthumb-phinf.pstatic.net/cover/134/575/13457579.jpg?type=m1&udate=20191029",
        "author": "정인용",
        "price": "20000",
        "discount": "18000",
        "publisher": "이지스퍼블리싱",
        "pubdate": "20180406",
        "isbn": "1163030031 9791163030034",
        "description": "자바스크립트, 제이쿼리의 기본부터 실전에 필요한 핵심까지 모두 담았다!\n‘두잇 시리즈 최고 작품’이라 평가받은 책! 전면 개정판으로 더욱 알차게... 자바스크립트를 1도 모르겠다면? 프런트엔드 실무 교육 경력 10년 강사가 엄선한 155개의 예제로 기본부터 실무 활용까지 완벽하게 대비하세요. 실제... ",
        "authorIntroContent": "\n정인용\n저자 : 정인용저자 : 정인용저자 정인용현대자동차 및 현대로템 사이트 등 여러 웹사이트를 개발해 온 저자는 삼성인재개발원과 한국녹색디자인개발협회의 기술연구원으로 웹 표준 인재를 양성해 왔다. 또한 한국직업전문학교와 한국디지털기업협회에서 HTML5와 CSS3, 자바스크립트, 제이쿼리 등 프런트엔드 개발에 관련된 강의를 했으며 네이버 ‘웹 표준 스쿨(http://cafe.naver.com/xhtmlschool)’ 카페에서 온·오프라인 모임을 통해 기부형 강좌를 제공하는 등 웹 개발에 몸담고 있는 사람들에게 도움이 되고자 노력하고 있다. 현재는 프리랜서로 활동하며 프런트엔드 및 백엔드 개발을 수행하고 있다.이러한 온·오프라인의 경험을 바탕으로 웹 입문자, 실무자 모두에게 도움이 될 《Do it! 자바스크립트 + 제이쿼리 입문》을 집필하였다. 웹 퍼블리셔, 웹 디자이너, 기획자 및 개발자들은 이 책을 통해 현장에서 꼭 필요한 지식을 빠르게 익힐 수 있을 것이다.주요 저서 《Do it! 자바스크립트 + 제이쿼리 입문》《실전 프로젝트 반응형 웹 퍼블리싱》\n",
        "bookIntroContent": "4년 연속 베스트셀러! 전면 개정판으로 출간!자바스크립트, 제이쿼리의 기본부터 실전에 필요한 핵심까지 모두 담았다!‘두잇 시리즈 최고 작품’이라 평가받은 책! 전면 개정판으로 더욱 알차게 만들었습니다! 이제는 웹 개발자뿐만 아니라 웹 퍼블리셔와 디자이너에게도 코딩 능력이 필요한 시대! 자바스크립트를 1도 모르겠다면? 프런트엔드 실무 교육 경력 10년 강사가 엄선한 155개의 예제로 기본부터 실무 활용까지 완벽하게 대비하세요. 실제 사이트에 적용하는 ‘반응형 웹 UI 만들기’까지 실습하고 나면 실무가 두렵지 않은 자신을 발견할 수 있을 것입니다!",
        "tableOfContentsContent": "\n머리말 4이 책을 추천합니다! 5첫째마당01 자바스크립트 시작하기 1401-1 처음 만나는 자바스크립트 15프런트엔드 개발 이해하기 15자바스크립트의 이해 1701-2 개발 환경 준비하기 20크롬 브라우저 설치하고 개발자 도구 살펴보기 20자바스크립트 편집기 설치와 사용법 22비주얼 스튜디오 코드 설치하기 23확장 기능 이용해 HTML 문서를 크롬 브라우저에서 바로 열기 2501-3 자바스크립트 맛보기 예제 29자바스크립트로 간단한 실행문 작성하기 2902 자바스크립트 기초 문법 3202-1 자바스크립트 기초 문법 33자바스크립트 선언문 33자바스크립트 주석 처리 34내부 스크립트 외부로 분리하기 34코드 입력 시 주의 사항 3602-2 변수 37변수란? 37변수에 저장할 수 있는 자료형 38변수 선언 시 주의사항 4202-3 연산자 43연산자란? 43산술 연산자 43문자 결합 연산자 44대입 연산자 46증감 연산자 48비교 연산자 49논리 연산자 52연산자 우선순위 52삼항 조건 연산자 5403 제어문 5903-1 제어문이란? 6003-2 조건문 61IF 문 61ELSE 문 65ELSE IF 문 68중첩 IF 문 7003-3 선택문 72SWITCH 문 7203-4 반복문 74WHILE 문 74DO WHILE 문 77FOR 문 78BREAK 문 80CONTINUE 문 81중첩 FOR 문 8204 객체 8604-1 객체 87객체란? 87객체의 종류 8804-2 내장 객체 90내장 객체 생성하기 90날짜 정보 객체 91수학 객체 95배열 객체 98문자열 객체 10404-3 브라우저 객체 모델 112브라우저 객체란? 112WINDOW 객체 112일정한 시간 간격으로 코드 실행하기 118SCREEN 객체 122LOCATION 객체 123HISTORY 객체 124NAVIGATOR 객체 12505 함수 13005-1 함수 131함수란? 131기본 함수 정의문 132매개변수가 있는 함수 정의문 135매개변수 없이 함수에 전달된 값 받아오기 13705-2 함수에서 RETURN 문의 역할 139데이터를 반환하고 강제 종료하는 RETURN 문 139재귀 함수 호출 14205-3 함수 스코프 개념 이해 144함수 스코프란? 144전역 변수와 지역 변수의 개념과 차이 144전역 함수와 지역 함수의 차이 145전역과 지역을 나누는 이유 14605-4 객체 생성자 함수의 활용 149객체 생성자 함수 149메모리 절약을 위한 프로토타입 사용하기 15105-5 자바스크립트 내장 함수 154내장 함수 154둘째마당06 제이쿼리 문서 객체 선택자와 조작법 16006-1 제이쿼리 기본 다지기 161제이쿼리란? 161제이쿼리 라이브러리 연동하기 16206-2 선택자 167선택자 167기본 선택자 170직접 선택자 171인접 관계 선택자 17706-3 제이쿼리 탐색 선택자 190탐색 선택자 190위치 탐색 선택자 190제이쿼리 배열 관련 메서드 198속성 탐색 선택자 205그 외의 선택자 - 콘텐츠 탐색 선택자 210선택자와 함께 알아두면 유용한 메서드 21406-4 객체 조작 217객체 조작 메서드 217속성 조작 메서드 218수치 조작 메서드 227객체 편집 메서드 23307 제이쿼리 이벤트 24407-1 이벤트 등록 메서드 245이벤트 등록 메서드란? 245이벤트 등록 방식 알아보기 247마우스 이벤트 255이벤트 객체와 종류 263포커스 이벤트 265키보드로 마우스 이벤트 대응하기 268키보드 이벤트 272이벤트가 발생한 요소 추적하기 27407-2 그룹 이벤트 등록 및 삭제하기 278그룹 이벤트 등록 메서드 278이벤트 제거 메서드 28208 다양한 효과와 애니메이션 28908-1 효과 및 애니메이션 메서드 290효과 메서드 290동작을 불어넣는 애니메이션 메서드 29308-2 애니메이션 효과 제어 메서드 296애니메이션 효과 제어 메서드란? 29609 제이쿼리 비동기 방식 연동 30609-1 AJAX 307AJAX란? 307웹 서버 설치하기 308웹 호스팅 등록하여 서버 이용하기 31309-2 AJAX 관련 메서드 317AJAX 관련 메서드들 317AJAX로 JSON 데이터 바인딩하기 322AJAX로 XML 데이터 바인딩하기 325자바스크립트의 보안 정책과 외부 데이터 바인딩하기 328RSS 연동하기 33010 제이쿼리 플러그인 34110-1 제이쿼리 플러그인이란? 342제이쿼리 플러그인이란? 34210-2 제이쿼리 UI 플러그인 활용하기 345제이쿼리 UI 플러그인 345UI 플러그인으로 드래그 레이어 창 만들기 348UI 플러그인으로 날짜 설정 달력 만들기 34910-3 BXSLIDER 플러그인 활용하기 352BXSLIDER 플러그인 352자동 슬라이드 갤러리 만들기 35610-4 JQUERY-COOKIE 플러그인 활용하기 358JQUERY-COOKIE 플러그인 35810-5 플러그인 직접 제작하기 362플러그인 제작을 위한 $.FN.EXTEND( ) 메서드 362간단한 플러그인 제작하기 362자주 묻는 질문 플러그인 제작하기 363셋째마당11 반응형 웹 UI 만들기 37011-1 프로젝트 구성과 HTML 문서 설계하기 371프로젝트 구성 요소 알아보기 371HTML 레이아웃과 콘텐츠 구성 372문서 기본 구조 37311-2 공통 UI 만들기 375브라우저의 너비 설정하기 375GNB 만들기 37711-3 메인 콘텐츠 영역 UI 만들기 382메인 비주얼 슬라이드 배너 만들기 382최근 게시물 탭 메뉴 만들기 384BEST BOOK 만들기 385스페셜 크롬 브라우저로 디버깅하기 387콘솔 패널을 이용한 디버깅 388소스 패널을 이용한 디버깅 389소스 패널의 중단점을 이용한 디버깅 390소스 패널의 중단점과 WATCH를 이용한 변수 체크 391\n",
        "isbn10": "1163030031",
        "isbn13": "9791163030034"
    },
    {
        "title": "이펙티브 자바 (Effective Java)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14097515",
        "image": "https://bookthumb-phinf.pstatic.net/cover/140/975/14097515.jpg?type=m1&udate=20181023",
        "author": "조슈아 블로크",
        "price": "36000",
        "discount": "32400",
        "publisher": "인사이트",
        "pubdate": "20181101",
        "isbn": "8966262287 9788966262281",
        "description": "자바 플랫폼 모범 사례 완벽 가이드 - JAVA 7, 8, 9 대응자바 6 출시 직후 출간된 『이펙티브 자바 2판』 이후로 자바는 커다란 변화를 겪었다. 그래서 졸트상에 빛나는 이 책도 자바 언어와 라이브러리의 최신 기능을 십분 활용하도록 내용 전반을 철저히 다시 썼다. 모던 자바가 여러 패러다임을... ",
        "authorIntroContent": null,
        "bookIntroContent": "자바 플랫폼 모범 사례 완벽 가이드 - JAVA 7, 8, 9 대응자바 6 출시 직후 출간된 『이펙티브 자바 2판』 이후로 자바는 커다란 변화를 겪었다. 그래서 졸트상에 빛나는 이 책도 자바 언어와 라이브러리의 최신 기능을 십분 활용하도록 내용 전반을 철저히 다시 썼다. 모던 자바가 여러 패러다임을 지원하기 시작하면서 자바 개발자들에게는 구체적인 모범 사례가 더욱 절실해졌고, 관련 조언을 이 책에 담아낸 것이다.3판에는 자바 7, 8, 9에서 자바 언어와 라이브러리에 추가된 특성들을 녹여냈다. 특히 그동안 객체 지향에 치중하던 자바에 새로 도입된 함수형 프로그래밍 요소도 자세히 알아본다. 람다(LAMBDA)와 스트림(STREAM)만을 다룬 장을 포함하여 새로운 아이템도 많이 추가되었다.새롭게 다루는 주제들-\t함수형 인터페이스, 람다식, 메서드 참조, 스트림-\t인터페이스의 디폴트 메서드와 정적 메서드-\t제네릭 타입에서의 다이아몬드 연산자를 포함한 타입 추론-\t@SAFEVARARGS 애너테이션-\tTRY-WITH-RESOURCES 문-\tOPTIONAL T 인터페이스, JAVA.TIME, 컬렉션의 편의 팩터리 메서드 등의 새로운 라이브러리 기능",
        "tableOfContentsContent": "\n1장 들어가기2장 객체 생성과 파괴 아이템 1. 생성자 대신 정적 팩터리 메서드를 고려하라 아이템 2. 생성자에 매개변수가 많다면 빌더를 고려하라 아이템 3. PRIVATE 생성자나 열거 타입으로 싱글턴임을 보증하라 아이템 4. 인스턴스화를 막으려거든 PRIVATE 생성자를 사용하라 아이템 5. 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라 아이템 6. 불필요한 객체 생성을 피하라 아이템 7. 다 쓴 객체 참조를 해제하라 아이템 8. FINALIZER와 CLEANER 사용을 피하라 아이템 9. TRY-FINALLY보다는 TRY-WITH-RESOURCES를 사용하라 3장 모든 객체의 공통 메서드 아이템 10. EQUALS는 일반 규약을 지켜 재정의하라 아이템 11. EQUALS를 재정의하려거든 HASHCODE도 재정의하라 아이템 12. TOSTRING을 항상 재정의하라 아이템 13. CLONE 재정의는 주의해서 진행하라 아이템 14. COMPARABLE을 구현할지 고려하라 4장 클래스와 인터페이스 아이템 15. 클래스와 멤버의 접근 권한을 최소화하라 아이템 16. PUBLIC 클래스에서는 PUBLIC 필드가 아닌 접근자 메서드를 사용하라 아이템 17. 변경 가능성을 최소화하라 아이템 18. 상속보다는 컴포지션을 사용하라 아이템 19. 상속을 고려해 설계하고 문서화하라. 그러지 않았다면 상속을 금지하라 아이템 20. 추상 클래스보다는 인터페이스를 우선하라 아이템 21. 인터페이스는 구현하는 쪽을 생각해 설계하라 아이템 22. 인터페이스는 타입을 정의하는 용도로만 사용하라 아이템 23. 태그 달린 클래스보다는 클래스 계층구조를 활용하라 아이템 24. 멤버 클래스는 되도록 STATIC으로 만들라 아이템 25. 톱레벨 클래스는 한 파일에 하나만 담으라 5장 제네릭 아이템 26. 로 타입은 사용하지 말라 아이템 27. 비검사 경고를 제거하라 아이템 28. 배열보다는 리스트를 사용하라 아이템 29. 이왕이면 제네릭 타입으로 만들라 아이템 30. 이왕이면 제네릭 메서드로 만들라 아이템 31. 한정적 와일드카드를 사용해 API 유연성을 높이라 아이템 32. 제네릭과 가변인수를 함께 쓸 때는 신중하라 아이템 33. 타입 안전 이종 컨테이너를 고려하라 6장 열거 타입과 애너테이션 아이템 34. INT 상수 대신 열거 타입을 사용하라 아이템 35. ORDINAL 메서드 대신 인스턴스 필드를 사용하라 아이템 36. 비트 필드 대신 ENUMSET을 사용하라 아이템 37. ORDINAL 인덱싱 대신 ENUMMAP을 사용하라 아이템 38. 확장할 수 있는 열거 타입이 필요하면 인터페이스를 사용하라 아이템 39. 명명 패턴보다 애너테이션을 사용하라 아이템 40. @OVERRIDE 애너테이션을 일관되게 사용하라 아이템 41. 정의하려는 것이 타입이라면 마커 인터페이스를 사용하라 7장 람다와 스트림 아이템 42. 익명 클래스보다는 람다를 사용하라 아이템 43. 람다보다는 메서드 참조를 사용하라 아이템 44. 표준 함수형 인터페이스를 사용하라 아이템 45. 스트림은 주의해서 사용하라 아이템 46. 스트림에서는 부작용 없는 함수를 사용하라 아이템 47. 반환 타입으로는 스트림보다 컬렉션이 낫다 아이템 48. 스트림 병렬화는 주의해서 적용하라 8장 메서드 아이템 49. 매개변수가 유효한지 검사하라 아이템 50. 적시에 방어적 복사본을 만들라 아이템 51. 메서드 시그니처를 신중히 설계하라 아이템 52. 다중정의는 신중히 사용하라 아이템 53. 가변인수는 신중히 사용하라 아이템 54. NULL이 아닌, 빈 컬렉션이나 배열을 반환하라 아이템 55. 옵셔널 반환은 신중히 하라 아이템 56. 공개된 API 요소에는 항상 문서화 주석을 작성하라 9장 일반적인 프로그래밍 원칙 아이템 57. 지역변수의 범위를 최소화하라 아이템 58. 전통적인 FOR 문보다는 FOR-EACH 문을 사용하라 아이템 59. 라이브러리를 익히고 사용하라 아이템 60. 정확한 답이 필요하다면 FLOAT와 DOUBLE은 피하라 아이템 61. 박싱된 기본 타입보다는 기본 타입을 사용하라 아이템 62. 다른 타입이 적절하다면 문자열 사용을 피하라 아이템 63. 문자열 연결은 느리니 주의하라 아이템 64. 객체는 인터페이스를 사용해 참조하라 아이템 65. 리플렉션보다는 인터페이스를 사용하라 아이템 66. 네이티브 메서드는 신중히 사용하라 아이템 67. 최적화는 신중히 하라 아이템 68. 일반적으로 통용되는 명명 규칙을 따르라 10장 예외 아이템 69. 예외는 진짜 예외 상황에만 사용하라 아이템 70. 복구할 수 있는 상황에는 검사 예외를, 프로그래밍 오류에는 런타임 예외를 사용하라 아이템 71. 필요 없는 검사 예외 사용은 피하라 아이템 72. 표준 예외를 사용하라 아이템 73. 추상화 수준에 맞는 예외를 던지라 아이템 74. 메서드가 던지는 모든 예외를 문서화하라 아이템 75. 예외의 상세 메시지에 실패 관련 정보를 담으라 아이템 76. 가능한 한 실패 원자적으로 만들라 아이템 77. 예외를 무시하지 말라 11장 동시성 아이템 78. 공유 중인 가변 데이터는 동기화해 사용하라 아이템 79. 과도한 동기화는 피하라 아이템 80. 스레드보다는 실행자, 태스크, 스트림을 애용하라 아이템 81. WAIT와 NOTIFY보다는 동시성 유틸리티를 애용하라 아이템 82. 스레드 안전성 수준을 문서화하라 아이템 83. 지연 초기화는 신중히 사용하라 아이템 84. 프로그램의 동작을 스레드 스케줄러에 기대지 말라 12장 직렬화 아이템 85. 자바 직렬화의 대안을 찾으라 아이템 86. SERIALIZABLE을 구현할지는 신중히 결정하라 아이템 87. 커스텀 직렬화 형태를 고려해보라 아이템 88. READOBJECT 메서드는 방어적으로 작성하라 아이템 89. 인스턴스 수를 통제해야 한다면 READRESOLVE보다는 열거 타입을 사용하라 아이템 90. 직렬화된 인스턴스 대신 직렬화 프록시 사용을 검토하라\n",
        "isbn10": "8966262287",
        "isbn13": "9788966262281"
    },
    {
        "title": "혼자 공부하는 자바",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15028693",
        "image": "https://bookthumb-phinf.pstatic.net/cover/150/286/15028693.jpg?type=m1&udate=20190614",
        "author": "신용권",
        "price": "24000",
        "discount": "21600",
        "publisher": "한빛미디어",
        "pubdate": "20190610",
        "isbn": "116224187X 9791162241875",
        "description": "1:1 과외하듯 배우는 자바 프로그래밍 자습서 (JAVA 8 &11 지원)\n이 책은 독학으로 자바를 배우는 입문자가 ‘꼭 필요한 내용을 제대로’ 학습할 수... 책의 첫 페이지를 펼쳐서 마지막 페이지를 덮을 때까지, 혼자서도 충분히 자바를 배울 수 있다는 자신감과 확신이 계속될 것이다!\n \n20명의 베타리더 검증으로... ",
        "authorIntroContent": "\n신용권\n저자 : 신용권소속: 한국소프트웨어산업협회 교수.20년 동안 시스템 제어 및 애플리케이션 개발자로 활동한 베테랑 개발자이자, IT 전문 교육자이기도 하다. 메카트로닉스를 전공했으며, 삼성항공 시스템 설계 파트에서 하드웨어 제어용 소프트웨어 개발을 담당했다. 1998년부터 지금까지 자바 개발자로, 그리고 자바 강사로 활동하고 있다. 삼성멀티캠퍼스(SDS)에서 자바 전임교수로 근무했고, 유수한 교육기관에서 재직자 및 전문가 위탁교육을 진행해 왔다. 또한 국내 최초로 재직자를 위한 ‘HTML5 모바일 웹앱 & 하이브리드앱’ 교육과정을 개설하여 많은 전문 개발자를 양성했다. 최근에는 오픈 소스 프레임워크, 안드로이드, HTML5 하이브리드앱 등의 분야에서 대학전산망 및 현업 재직자를 위한 소프트웨어 역량 강화 사업의 전임강사로 활동했다. 현재는 SK PLANET에서 운영하는 T아카데미에서 자바, 웹, 안드로이드 앱 개발 강사로 활동하고 있다. 『이것이 자바다』(2015, 한빛미디어)를 집필했다.--\n",
        "bookIntroContent": "혼자 해도 충분하다! 1:1 과외하듯 배우는 자바 프로그래밍 자습서 (JAVA 8 &11 지원)이 책은 독학으로 자바를 배우는 입문자가 ‘꼭 필요한 내용을 제대로’ 학습할 수 있도록 구성했다. ‘무엇을’ ‘어떻게’ 학습해야 할지 조차 모르는 입문자의 막연한 마음을 살펴, 과외 선생님이 알려주듯 친절하게, 그러나 핵심적인 내용만 콕콕 집어준다. 책의 첫 페이지를 펼쳐서 마지막 페이지를 덮을 때까지, 혼자서도 충분히 자바를 배울 수 있다는 자신감과 확신이 계속될 것이다!20명의 베타리더 검증으로, ‘함께 만든’ 입문자 맞춤형 도서20명의 베타리더와 함께 구성하여 입문자에게 맞는 난이도, 분량, 학습 요소 등을 적극 반영했다. 어려운 용어와 개념은 한번 더 풀어 쓰고, 복잡한 설명은 눈에 잘 들어오는 그림으로 풀어 냈다. ‘혼자 공부해본’ 여러 입문자의 초심과 눈높이가 책 곳곳에 반영된 것이 이 책의 가장 큰 장점이다.",
        "tableOfContentsContent": "\nCHAPTER 1 자바 시작하기 \r01-1 프로그래밍 언어와 자바\r01-2 이클립스 개발 환경 구축\r01-3 자바 프로그램 개발 과정 \r CHAPTER 2 변수와 타입\r02-1 변수\r02-2 기본 타입\r02-3 타입 변환\r02-4 변수와 시스템 입출력\r CHAPTER 3 연산자\r03-1 연산자와 연산식\r03-2 연산자의 종류\r CHAPTER 4 조건문과 반복문\r04-1 조건문: if문, switch문\r04-2 반복문: for문, while문, do-while문\r CHAPTER 5 참조 타입\r05-1 참조 타입과 참조 변수\r05-2 배열\r05-3 열거 타입\r CHAPTER 6 클래스\r06-1 객체 지향 프로그래밍\r06-2 필드\r06-3 생성자\r06-4 메소드\r06-5 인스턴스 멤버와 정적 멤버\r06-6 패키지와 접근 제한자\r CHAPTER 7 상속\r07-1 상속\r07-2 타입 변환과 다형성\r07-3 추상 클래스\r CHAPTER 8 인터페이스\r08-1 인터페이스\r08-2 타입 변환과 다형성\r CHAPTER 9 중첩 클래스와 중첩 인터페이스\r09-1 중첩 클래스와 중첩 인터페이스 소개\r09-2 익명 객체\r CHAPTER 10 예외 처리\r10-1 예외 클래스\r10-2 예외 처리\r CHAPTER 11 기본 API 클래스\r11-1 java.lang 패키지\r11-2 java.util 패키지\r CHAPTER 12 스레드\r12-1 멀티 스레드\r12-2 스레드 제어\r CHAPTER 13 컬렉션 프레임워크\r13-1 컬렉션 프레임워크\r13-2 LIFO와 FIFO 컬렉션\r CHAPTER 14 입출력 스트림\r14-1 입출력 스트림\r14-2 보조 스트림\r14-3 입출력 관련 API\n",
        "isbn10": "116224187X",
        "isbn13": "9791162241875"
    },
    {
        "title": "생활코딩! HTML+CSS+자바스크립트",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14427514",
        "image": "https://bookthumb-phinf.pstatic.net/cover/144/275/14427514.jpg?type=m1&udate=20190420",
        "author": "이고잉",
        "price": "27000",
        "discount": "24300",
        "publisher": "위키북스",
        "pubdate": "20190115",
        "isbn": "1158391331 9791158391331",
        "description": "이고잉 님의 HTML/CSS/자바스크립트 강의는 이미 많은 분들에 의해 검증받은 독창적인 강의로 손꼽히고 있습니다. 단순히 HTML/CSS/자바스크립트 기술을 알려주는 데서 그치는 것이 아니라 무엇을... HTML/CSS/자바스크립트를 배운다면 기본은 물론 응용력까지도 금세 키울 수 있을 것입니다.\n\n★ 이 책에서... ",
        "authorIntroContent": "\n이고잉\n저자 : 프랑소와 숄레생활코딩 운영자오픈튜토리얼스(HTTPS://OPENTUTORIALS.ORG/) 운영진\n",
        "bookIntroContent": "난생 처음으로 프로그래밍을 시작하는 분들이라면 생활코딩 강의로 시작하세요!이고잉 님의 HTML/CSS/자바스크립트 강의는 이미 많은 분들에 의해 검증받은 독창적인 강의로 손꼽히고 있습니다. 단순히 HTML/CSS/자바스크립트 기술을 알려주는 데서 그치는 것이 아니라 무엇을 모르는지 모르는 상태에서조차 무언가를 배울 수 있는 학습 방법까지도 습득할 수 있습니다. 초심자를 배려하는 상세한 설명과 통계를 기반으로 하는 실용적인 학습 내용 구성까지, 이 책을 통해 HTML/CSS/자바스크립트를 배운다면 기본은 물론 응용력까지도 금세 키울 수 있을 것입니다.★ 이 책에서 다루는 내용 ★◎ 코딩이란 무엇인가?◎ HTML, CSS, 자바스크립트 기초◎ HTML, CSS, 자바스크립트를 이용한 웹페이지 제작◎ 웹과 웹 서버의 동작 원리◎ 자바스크립트를 통해 배우는 프로그래밍의 원리",
        "tableOfContentsContent": "\n[1부] HTML 편\r1. 수업 소개\r2. 프로젝트의 동기 \r3. 기획 \r4. 코딩과 HTML \r5. HTML 코딩과 실습 환경 준비 \r6. 기본 문법과 태그 \r7. 혁명적인 변화 \r8. 통계에 기반한 학습 \r9. 줄바꿈: [br] vs. [p] \r10. HTML이 중요한 이유 \r11. 최후의 문법 속성과 [img] 태그\r12. 부모 자식과 목록 \r13. 문서의 구조와 슈퍼스타들 \r14. HTML 태그의 제왕 \r15. 웹 사이트 완성 \r16. 원시 웹\r17. 인터넷을 여는 열쇠: 서버와 클라이언트 \r18. 웹 호스팅: 깃허브 페이지 \r19. 웹 서버 운영하기 \r__19.1 웹 호스팅: 웹 서버 설치(윈도우) \r__19.2 웹 호스팅: 웹 서버와 HTTP(윈도우) \r__19.3 웹 서버와 웹 브라우저의 통신(윈도우) \r__19.4 웹 서버 설치(macOS) \r__19.5 웹 서버와 HTTP(macOS) \r__19.6 웹 브라우저와 웹 서버의 통신(macOS) \r__19.7 웹 브라우저와 웹 서버의 통신(리눅스) \r20. 수업을 마치며 1/3 \r21. 수업을 마치며 2/3 \r22. 수업을 마치며 3/3 \r [2부] CSS 편\r1. 수업 소개 \r2. CSS가 등장하기 전의 상황 \r3. CSS의 등장 \r4. CSS의 기본 문법 \r5. 혁명적 변화 \r6. CSS 속성을 스스로 알아내기 \r7. CSS 선택자의 기본 \r8. 박스 모델 \r9. 박스 모델 써먹기 \r10. 그리드 소개 \r11. 그리드 써먹기 \r12. 미디어 쿼리 소개 \r13. 미디어 쿼리 써먹기 \r14. CSS 코드의 재사용 \r15. 수업을 마치며 \r [3부] 자바스크립트 편\r1. 수업 소개\r2. 수업의 목적 \r3. HTML과 JS의 만남: [script] 태그 \r4. HTML과 JS의 만남: 이벤트 \r5. HTML과 JS의 만남: 콘솔 \r6. 데이터 타입 - 문자열과 숫자 \r7. 변수와 대입 연산자 \r8. 웹 브라우저 제어 \r9. CSS 기초: style 속성 \r10. CSS 기초: [style] 태그 \r11. CSS 기초: 선택자 \r12. 제어할 태그 선택하기 \r13. 프로그램, 프로그래밍, 프로그래머 \r14. 조건문 예고 \r15. 비교 연산자와 불리언 \r16. 조건문 \r17. 조건문의 활용 \r18. 중복의 제거를 위한 리팩터링 \r19. 반복문 예고 \r20. 배열 \r21. 반복문\r22. 배열과 반복문\r23. 배열과 반복문의 활용\r24. 함수 예고\r25. 함수\r26. 매개변수와 인자\r27. 함수(return 문)\r28. 함수의 활용\r29. 객체 예고\r30. 객체 쓰기와 읽기\r31. 객체와 반복문\r32. 객체 프로퍼티와 메서드\r33. 객체의 활용 \r34. 파일로 쪼개서 정리 정돈하기 \r35. 라이브러리와 프레임워크\r36. UI vs. API\r37. 수업을 마치며\n",
        "isbn10": "1158391331",
        "isbn13": "9791158391331"
    },
    {
        "title": "코어 자바스크립트 (핵심 개념과 동작 원리로 이해하는 자바스크립트 프로그래밍)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15433261",
        "image": "https://bookthumb-phinf.pstatic.net/cover/154/332/15433261.jpg?type=m1&udate=20190910",
        "author": "정재남",
        "price": "22000",
        "discount": "19800",
        "publisher": "위키북스",
        "pubdate": "20190910",
        "isbn": "1158391722 9791158391720",
        "description": "자바스크립트의 근간을 이루는 핵심 이론들을 정확하게 이해하는 것을 목표로 합니다!최근 웹 개발 진영은 빠르게 발전하고 있으며, 그 중심에는 자바스크립트가 있다고 해도 결코 과언이 아닙니다. ECMASCRIPT2015 시대인 현재에 이르러서도 ES5에서 통용되던 자바스크립트의 핵심 이론은 여전히 유효하며... ",
        "authorIntroContent": "\n정재남\n저자 : 정재남성균관대학교에서 물리학을 전공했다. 자바스크립트, JQUERY, REACTJS 등을 주제로 다수의 오프라인 강의를 했으며, 온라인 동영상 강의(HTTPS://WWW.INFLEARN.COM/INSTRUCTORS/46840/COURSES)도 진행 중이다. 현재 엔씨소프트의 프런트엔드 개발자로 채팅 기반 협업 툴을 개발하고 있다.\n",
        "bookIntroContent": "자바스크립트의 근간을 이루는 핵심 이론들을 정확하게 이해하는 것을 목표로 합니다!최근 웹 개발 진영은 빠르게 발전하고 있으며, 그 중심에는 자바스크립트가 있다고 해도 결코 과언이 아닙니다. ECMASCRIPT2015 시대인 현재에 이르러서도 ES5에서 통용되던 자바스크립트의 핵심 이론은 여전히 유효하며 매우 중요합니다.《코어 자바스크립트》는 자바스크립트의 근간을 이루는 핵심 이론들을 정확하게 이해하는 것을 목표로 합니다. 기본 이론들 중 ES6에서도 중요성이 높은 핵심 개념을 위주로 다루며, 테크닉이나 요령보다는 원리를 이해하는 데 목적을 두고 있습니다.",
        "tableOfContentsContent": "\n▣ 01장: 데이터 타입1-1 데이터 타입의 종류1-2 데이터 타입에 관한 배경지식___1-2-1 메모리와 데이터___1-2-2 식별자와 변수1-3 변수 선언과 데이터 할당___1-3-1 변수 선언___1-3-2 데이터 할당1-4 기본형 데이터와 참조형 데이터___1-4-1 불변값___1-4-2 가변값___1-4-3 변수 복사 비교1-5 불변 객체(immutable object)___1-5-1 불변 객체를 만드는 간단한 방법___1-5-2 얕은 복사와 깊은 복사1-6 undefined와 null1-7 정리▣ 02장: 실행 컨텍스트2-1 실행 컨텍스트란?2-2 VariableEnvironment2-3 LexicalEnvironment___2-3-1 environmentRecord와 호이스팅(hoisting)___2-3-2 스코프, 스코프 체인, outerEnvironmentReference2-4 this2-5 정리▣ 03장: this3-1 상황에 따라 달라지는 this___3-1-1 전역 공간에서의 this___3-1-2 메서드로서 호출할 때 그 메서드 내부에서의 this___3-1-3 함수로서 호출할 때 그 함수 내부에서의 this___3-1-4 콜백 함수 호출 시 그 함수 내부에서의 this___3-1-5 생성자 함수 내부에서의 this3-2 명시적으로 this를 바인딩하는 방법___3-2-1 call 메서드___3-2-2 apply 메서드___3-2-3 call / apply 메서드의 활용___3-2-4 bind 메서드___3-2-5 화살표 함수의 예외사항___3-2-6 별도의 인자로 this를 받는 경우(콜백 함수 내에서의 this)3-3 정리▣ 04장: 콜백 함수4-1 콜백 함수란?4-2 제어권___4-2-1 호출 시점___4-2-2 인자___4-2-3 this4-3 콜백 함수는 함수다 4-4 콜백 함수 내부의 this에 다른 값 바인딩하기 4-5 콜백 지옥과 비동기 제어 4-6 정리▣ 05장: 클로저5-1 클로저의 의미 및 원리 이해 5-2 클로저와 메모리 관리 5-3 클로저 활용 사례 ___5-3-1 콜백 함수 내부에서 외부 데이터를 사용하고자 할 때 ___5-3-2 접근 권한 제어(정보 은닉) ___5-3-3 부분 적용 함수 ___5-3-4 커링 함수 5-4 정리▣ 06장: 프로토타입6-1 프로토타입의 개념 이해 ___6-1-1 constructor, prototype, instance ___6-1-2 constructor 프로퍼티 6-2 프로토타입 체인 ___6-2-1 메서드 오버라이드___6-2-2 프로토타입 체인 ___6-2-3 객체 전용 메서드의 예외사항 ___6-2-4 다중 프로토타입 체인 6-3 정리▣ 07장: 클래스7-1 클래스와 인스턴스의 개념 이해 7-2 자바스크립트의 클래스 7-3 클래스 상속 ___7-3-1 기본 구현 ___7-3-2 클래스가 구체적인 데이터를 지니지 않게 하는 방법 ___7-3-3 constructor 복구하기 ___7-3-4 상위 클래스에의 접근 수단 제공 7-4 ES6의 클래스 및 클래스 상속 7-5 정리 7-6 마치며\n",
        "isbn10": "1158391722",
        "isbn13": "9791158391720"
    },
    {
        "title": "모던 자바 인 액션 (람다, 스트림, 함수형, 리액티브 프로그래밍으로 새로워진 자바 마스터하기)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15261103",
        "image": "https://bookthumb-phinf.pstatic.net/cover/152/611/15261103.jpg?type=m1&udate=20190929",
        "author": "라울-게이브리얼 우르마|마리오 푸스코|앨런 마이크로프트",
        "price": "34000",
        "discount": "30600",
        "publisher": "한빛미디어",
        "pubdate": "20190801",
        "isbn": "1162242027 9791162242025",
        "description": "자바 1.0이 나온 이후 18년을 통틀어 가장 큰 변화가 자바 8 이후 이어지고 있다. 자바 8 이후 모던 자바를 이용하면 기존의 자바 코드 모두 그대로 쓸 수 있으며, 새로운 기능과 문법, 디자인 패턴으로 더 명확하고 간결한 코드를 구현할 수도 있다. 이 책은 함수형 언어의 영감을 받아 자바 8, 9, 10에 추가된... ",
        "authorIntroContent": "\n라울-게이브리얼 우르마\n저자 : 라울-게이브리얼 우르마UK의 데이터 과학자와 개발자를 선도하는 교육 커뮤니티인 케임브리지 스파크의 공동 창업자다. 2017년에 자바 챔피언으로 임명되었다. 다수의 스타트업 프로젝트를 포함해 구글, 이베이, 오라클, 골드만삭스 등의 회사와 함께 일했다. 케임브리지 대학교에서 컴퓨터 과학 박사 학위를 마쳤다. 임페리얼 칼리지 런던의 석사 학위를 보유하고 있으며 우등생으로 졸업했고 다수의 기술 혁신 수상 경력이 있다. 국제 컨퍼런스에서 100회 이상의 기술 강연을 했다.저자 : 마리오 푸스코레드햇에서 Drools 코어 개발, 제이보스(JBoss) 룰 엔진 관련 작업을 담당하는 선임 개발 엔지니어다. 미디어에서 금융에 이르는 다수의 기업 프로젝트에 자바 개발자로(또는 리더로) 참여했다. 함수형 프로그래밍과 도메인 전용 언어에 관심이 많다. 자신의 관심 분야를 활용해서 오픈소스 라이브러리인 lambdaj를 만들었다. lambdaj는 컬렉션을 제어할 수 있는 국제적 자바 DSL을 제공하며, 자바에 함수형 프로그래밍을 제공하는 것을 목표로 한다.저자 : 앨런 마이크로프트케임브리지 대학교 컴퓨터 실험실의 컴퓨팅 교수로 1984년부터 교수회의 멤버를 역임했다. 프로그래밍 언어와 시스템 유럽 연합의 공동창업자인 로빈슨 대학교 회원이며, 라즈베리 파이 재단의 이사 겸 회원이다. 수학(케임브리지), 컴퓨터과학(에든버러) 학위를 갖고 있다. 100여 편의 연구 저서를 집필했으며 20명이 넘는 박사 과정 학생을 지도했다. 프로그래밍 언어와 의미해석규칙, 최적화, 구현 등이 주요 연구 분야다. AT&T 실험실, 인텔 연구소에서 일했던 적이 있으며 노르크로프트(Norcroft)라는 이름의 ARM C 컴파일러를 만들었던 코드미스트(Codemist) 유한회사에서도 일한 경험이 있다.역자 : 우정은한국에서는 LG전자, 썬마이크로시스템즈, 오라클 등의 대기업에서 임베디드 소프트웨어를 개발했고 2016년부터 뉴질랜드에서 새로운 삶을 즐기고 있다. 현재는 뉴질랜드의 수도 웰링턴에 거주하면서 Flux Federation 사 안드로이드 앱 개발자로 일한다. 아이폰, 안드로이드, 자바 스크립트 등 다양한 분야의 서적을 번역했다.\n",
        "bookIntroContent": "자바 1.0이 나온 이후 18년을 통틀어 가장 큰 변화가 자바 8 이후 이어지고 있다. 자바 8 이후 모던 자바를 이용하면 기존의 자바 코드 모두 그대로 쓸 수 있으며, 새로운 기능과 문법, 디자인 패턴으로 더 명확하고 간결한 코드를 구현할 수도 있다. 이 책은 함수형 언어의 영감을 받아 자바 8, 9, 10에 추가된 람다, 스트림, 함수형 프로그래밍, 자바 모듈 시스템, 병렬화와 공유 가변 데이터, 동작 파라미터화 등의 주요 기능을 자바 개발자에게 알려준다. 수정처럼 투명한 예제와 꼼꼼한 정보 제공으로 여러분의 노력에 보답할 것이다. 이 책은 『자바 8 인 액션』의 개정판으로서 1, 8, 10, 4, 17, 21장은 신규 추가되거나, 그에 준하는 큰 수정이 있었다. 부록을 뺀 나머지 모든 장도 수정 보강되었다.",
        "tableOfContentsContent": "\n옮긴이·지은이 소개\r옮긴이의 말\r지은이의 말\r이 책에 대하여\r표지 그림 소개\r [ PART I 기초 ]  CHAPTER 1 자바 8, 9, 10, 11 : 무슨 일이 일어나고 있는가?\r1.1 역사의 흐름은 무엇인가?\r1.2 왜 아직도 자바는 변화하는가? \r1.3 자바 함수\r1.4 스트림\r1.5 디폴트 메서드와 자바 모듈\r1.6 함수형 프로그래밍에서 가져온 다른 유용한 아이디어\r1.7 마치며\r CHAPTER 2 동작 파라미터화 코드 전달하기\r2.1 변화하는 요구사항에 대응하기\r2.2 동작 파라미터화\r2.3 복잡한 과정 간소화\r2.4 실전 예제\r2.5 마치며\r CHAPTER 3 람다 표현식\r3.1 람다란 무엇인가?\r3.2 어디에, 어떻게 람다를 사용할까?\r3.3 람다 활용 : 실행 어라운드 패턴\r3.4 함수형 인터페이스 사용\r3.5 형식 검사, 형식 추론, 제약\r3.6 메서드 참조\r3.7 람다, 메서드 참조 활용하기\r3.8 람다 표현식을 조합할 수 있는 유용한 메서드\r3.9 비슷한 수학적 개념\r3.10 마치며\r [ PART II 함수형 데이터 처리 ]  CHAPTER 4 스트림 소개\r4.1 스트림이란 무엇인가?\r4.2 스트림 시작하기\r4.3 스트림과 컬렉션\r4.4 스트림 연산\r4.5 로드맵\r4.6 마치며\r CHAPTER 5 스트림 활용\r5.1 필터링\r5.2 스트림 슬라이싱\r5.3 매핑\r5.4 검색과 매칭\r5.5 리듀싱\r5.6 실전 연습\r5.7 숫자형 스트림\r5.8 스트림 만들기\r5.9 마치며\r CHAPTER 6 스트림으로 데이터 수집\r6.1 컬렉터란 무엇인가?\r6.2 리듀싱과 요약\r6.3 그룹화\r6.4 분할\r6.5 Collector 인터페이스\r6.6 커스텀 컬렉터를 구현해서 성능 개선하기\r6.7 마치며\r CHAPTER 7 병렬 데이터 처리와 성능\r7.1 병렬 스트림\r7.2 포크/조인 프레임워크\r7.3 Spliterator 인터페이스\r7.4 마치며\r [ PART III 스트림과 람다를 이용한 효과적 프로그래밍 ]  CHAPTER 8 컬렉션 API 개선\r8.1 컬렉션 팩토리\r8.2 리스트와 집합 처리\r8.3 맵 처리\r8.4 개선된 ConcurrentHashMap\r8.5 마치며\r CHAPTER 9 리팩터링, 테스팅, 디버깅\r9.1 가독성과 유연성을 개선하는 리팩터링\r9.2 람다로 객체지향 디자인 패턴 리팩터링하기\r9.3 람다 테스팅\r9.4 디버깅\r9.5 마치며\r CHAPTER 10 람다를 이용한 도메인 전용 언어\r10.1 도메인 전용 언어\r10.2 최신 자바 API의 작은 DSL\r10.3 자바로 DSL을 만드는 패턴과 기법\r10.4 실생활의 자바 8 DSL\r10.5 마치며\r [ PART IV 매일 자바와 함께 ]  CHAPTER 11 null 대신 Optional 클래스\r11.1 값이 없는 상황을 어떻게 처리할까?\r11.2 Optional 클래스 소개\r11.3 Optional 적용 패턴\r11.4 Optional을 사용한 실용 예제\r11.5 마치며\r CHAPTER 12 새로운 날짜와 시간 API\r12.1 LocalDate, LocalTime, Instant, Duration, Period 클래스\r12.2 날짜 조정, 파싱, 포매팅\r12.3 다양한 시간대와 캘린더 활용 방법\r12.4 마치며\r CHAPTER 13 디폴트 메서드\r13.1 변화하는 API\r13.2 디폴트 메서드란 무엇인가?\r13.3 디폴트 메서드 활용 패턴\r13.4 해석 규칙\r13.5 마치며\r CHAPTER 14 자바 모듈 시스템\r14.1 압력 : 소프트웨어 유추\r14.2 자바 모듈 시스템을 설계한 이유\r14.3 자바 모듈 : 큰 그림 \r14.4 자바 모듈 시스템으로 애플리케이션 개발하기\r14.5 여러 모듈 활용하기\r14.6 컴파일과 패키징\r14.7 자동 모듈\r14.8 모듈 정의와 구문들\r14.9 더 큰 예제 그리고 더 배울 수 있는 방법\r14.10 마치며\r [ PART V 개선된 자바 동시성 ]  CHAPTER 15 CompletableFuture와 리액티브 프로그래밍 컨셉의 기초\r15.1 동시성을 구현하는 자바 지원의 진화\r15.2 동기 API와 비동기 API\r15.3 박스와 채널 모델\r15.4 CompletableFuture와 콤비네이터를 이용한 동시성\r15.5 발행-구독 그리고 리액티브 프로그래밍\r15.6 리액티브 시스템 vs 리액티브 프로그래밍\r15.7 마치며\r CHAPTER 16 CompletableFuture : 안정적 비동기 프로그래밍\r16.1 Future의 단순 활용\r16.2 비동기 API 구현\r16.3 비블록 코드 만들기\r16.4 비동기 작업 파이프라인 만들기\r16.5 CompletableFuture의 종료에 대응하는 방법\r16.6 로드맵\r16.7 마치며\r CHAPTER 17 리액티브 프로그래밍\r17.1 리액티브 매니패스토 \r17.2 리액티브 스트림과 플로 API\r17.3 리액티브 라이브러리 RxJava 사용하기\r17.4 마치며\r PART VI 함수형 프로그래밍과 자바 진화의 미래  CHAPTER 18 함수형 관점으로 생각하기\r18.1 시스템 구현과 유지보수\r18.2 함수형 프로그래밍이란 무엇인가?\r18.3 재귀와 반복\r18.4 마치며\r CHAPTER 19 함수형 프로그래밍 기법\r19.1 함수는 모든 곳에 존재한다\r19.2 영속 자료구조\r19.3 스트림과 게으른 평가\r19.4 패턴 매칭\r19.5 기타 정보\r19.6 마치며\r CHAPTER 20 OOP와 FP의 조화 : 자바와 스칼라 비교\r20.1 스칼라 소개\r20.2 함수\r20.3 클래스와 트레이트\r20.4 마치며\r CHAPTER 21 결론 그리고 자바의 미래\r21.1 자바 8의 기능 리뷰\r21.2 자바 9 모듈 시스템\r21.3 자바 10 지역 변수형 추론\r21.4 자바의 미래\r21.5 더 빠르게 발전하는 자바\r21.6 결론\r 부록\r_APPENDIX A 기타 언어 업데이트 \r_APPENDIX B 기타 라이브러리 업데이트 \r_APPENDIX C 스트림에 여러 연산 병렬로 실행하기 \r_APPENDIX D 람다와 JVM 바이트코드\n",
        "isbn10": "1162242027",
        "isbn13": "9791162242025"
    },
    {
        "title": "Do it! 웹 프로그래밍을 위한 자바스크립트 기본 편",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14650274",
        "image": "https://bookthumb-phinf.pstatic.net/cover/146/502/14650274.jpg?type=m1&udate=20191221",
        "author": "고경희",
        "price": "18800",
        "discount": "16920",
        "publisher": "이지스퍼블리싱",
        "pubdate": "20190326",
        "isbn": "1163030643 9791163030645",
        "description": "웹 프로그래밍을 위한 자바스크립트 기본 편》은 자바스크립트를 통해 웹 프로그래밍에 입문하는 사람들이 가장 먼저 배워야 할 기본 문법을 웹 분야 베스트셀러 저자인 고경희 선생이 모아 엮은 책이다. 137개 예제를 통해 직접 프로그램을 만들면서 기본 문법을 흥미롭게 배운 뒤 ‘1분 복습’, ‘마무리... ",
        "authorIntroContent": "\n고경희\nHTML5와 CSS3의 모든 태그를 집대성하여 베스트셀러에 오른 『Do it! HTML5+CSS3 웹 표준의 정석』 등 지금까지 40여 종의 책을 집필했다. 이번에는 생활코딩에 올라와 있는 이고잉 님의 깃(Git)과 깃허브(GitHub) 강의 영상을 학습서 형태로 처음부터 끝까지 새롭게 쓰고, 더 필요한 부분을 추가로 집필했다.\r홍익대학교 컴퓨터공학과를 졸업하고 동 대학원에서 인공지능을 공부했다. 한국디지털대학교에서 웹 기초(HTML) 분야를 강의했고, 한국 전자정보통신산업진흥회 등에서 웹 기술에 관한 강의를 진행해 왔다. Developer Technologies 분야의 마이크로소프트 공인 최고기술전문가(Most Valuable Professional)로 현재 활동 중이다.\n",
        "bookIntroContent": "키보드만 잡아라! 하루 2시간씩 10일에 끝난다!웹 개발자를 향한 첫걸음! 기본 문법부터 빠르게 정복하자!무엇이든 처음 공부할 때는 기본기부터 빠르게 정복해야 한다. 그래야 그 분야에 재미를 느끼며 빠르게 적응할 수 있다. 《DO IT! 웹 프로그래밍을 위한 자바스크립트 기본 편》은 자바스크립트를 통해 웹 프로그래밍에 입문하는 사람들이 가장 먼저 배워야 할 기본 문법을 웹 분야 베스트셀러 저자인 고경희 선생이 모아 엮은 책이다. 137개 예제를 통해 직접 프로그램을 만들면서 기본 문법을 흥미롭게 배운 뒤 ‘1분 복습’, ‘마무리 실습’, ‘연습 문제’ 등을 통해 다시 사용해 보면서 기본기를 탄탄하게 다진다. 궁금한 내용은 저자의 동영상 강의나 온라인 카페를 통해 쉽게 해결할 수 있다. 이 책을 통해 웹 개발자를 향한 첫걸음을 가볍게 떼어보자!",
        "tableOfContentsContent": "\n----------------------------------\r01장 안녕? 자바스크립트!\r----------------------------------\r01-1 웹 프로그래밍이란? 14\r01-2 자바스크립트로 무엇을 할 수 있을까? 17\r01-3 자바스크립트의 특징은 무엇일까? 20\r ----------------------------------------\r02장 자바스크립트와 친해지기\r----------------------------------------\r02-1 개발 환경 준비하기 24\r02-2 비주얼 스튜디오 코드와 인사하기 28\r02-3 자바스크립트 소스 작성하고 실행하기 3\r02-4 나의 첫 번째 자바스크립트 프로그램 42\r02-5 자바스크립트의 입력과 출력 46\r02-6 자바스크립트 소스를 작성할 때 지켜야 할 규칙\r ---------------------------------------------\r03장 변수와 자료형 그리고 연산자\r---------------------------------------------\r03-1 변수란 무엇일까? 59\r03-2 자료형 이해하기 66\r03-3 연산자 이해하기 75\r03-4 연산자 깊게 알아보기 82\r ---------------------------------------\r04장 흐름을 제어한다! 제어문\r---------------------------------------\r04-1 조건에 따라 흐름 조절하기 ― if문, if…else문과 조건 연산자\r04-2 조건이 많을 때 흐름 조절하기 ― switch문\r04-3 명령 반복 실행하기 ― for문\r04-4 for문 반복하기 ― 중첩 for문 108\r04-5 특정 조건에 따라 반복하기 ― while문, do…while문 114\r04-6 반복을 건너뛰거나 멈추기 ― break문, continue문 118\r --------------------------\r05장 함수와 이벤트\r--------------------------\r05-1 여러 동작을 묶은 덩어리, 함수 125\r05-2 여러 번 사용할 수 있는 함수 만들기 130\r05-3 이벤트 다루기 142\r  ----------------------------------------------\r06 여러 자료를 한꺼번에 담는 객체\r----------------------------------------------\r06-1 객체란? 155\r06-2 사용자 정의 객체 만들기 165\r06-3 Date 객체를 활용해 기념일 계산기 만들기 174\r ------------------------------------------------\r07장 배열을 쉽게 다루자! Array 객체\r------------------------------------------------\r07-1 Array 객체란? 195\r07-2 Array 객체의 함수 알아보기 197\r07-3 여행 준비물 점검 프로그램 만들기 206\r ------------------------------------------------------------------\r08장 웹 문서를 다루는 방법, 문서 객체 모델(DOM)\r------------------------------------------------------------------\r08-1 문서 객체 모델이란? 225\r08-2 DOM 요소에 접근하기 233\r08-3 웹 요소의 태그 속성 가져와서 수정하기 241\r08-4 DOM에서 이벤트 처리하기 248\r08-5 웹 요소의 스타일 가져와서 수정하기 252\r08-6 DOM에 요소 추가하기 262\r08-7 추가한 노드 순서 바꾸거나 삭제하기 275\r -------------------------------\r09장 폼과 자바스크립트\r-------------------------------\r09-1 폼 요소에 접근하는 여러 가지 방법 291\r09-2 폼 요소에서 입력값 검증하기 300\r09-3 다양한 폼 요소 다루기 306\r -----------------------------------------------------------------------------\r10장 웹 브라우저를 다루는 방법, 브라우저 객체 모델(BOM)\r-----------------------------------------------------------------------------\r10-1 브라우저 객체 모델이란? 317\r10-2 웹 브라우저를 제어하는 Window 객체 319\r10-3 브라우저 정보가 담긴 Navigator 객체 332\r10-4 그 밖의 브라우저 객체들 340\n",
        "isbn10": "1163030643",
        "isbn13": "9791163030645"
    },
    {
        "title": "자바 웹을 다루는 기술 (실무에서 알아야 할 기술은 따로 있다!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14439459",
        "image": "https://bookthumb-phinf.pstatic.net/cover/144/394/14439459.jpg?type=m1&udate=20191011",
        "author": "이병승",
        "price": "45000",
        "discount": "40500",
        "publisher": "길벗",
        "pubdate": "20190107",
        "isbn": "1160506825 9791160506822",
        "description": "최근 효율적으로 개발할 수 있는 웹 프레임워크가 많이 나왔지만, JSP와 서블릿은 자바 웹 개발에서 가장 중요하고도 기본이 되는 내용이다.... 웹 개발이 처음인 사람부터 기초를 다지고 싶은 초급 개발자까지 이 책 한 권이면 자바 웹 개발의 전체적인 흐름을 잡을 수 있을 것이다.\n저자 유튜브... ",
        "authorIntroContent": "\n이병승\n오랜 기간 실무에서 습득한 경험과 다양한 분야에 대한 관심을 바탕으로 이 책을 집필했습니다. ?소프트웨어를 하나 개발하려면 오랜 시간이 걸린다”는 생각을 깨고, 다른 분들이 제가 목표에 도달하는 데 걸린 시간의 절반만에 해낼 수 있기를 바라는 마음을 책에 담았습니다.\r* 경북대학교 전자공학과 졸업\r* 벤처 기업에서 다양한 소프트웨어 개발 참여\r* 대기업 시스템 통합 작업 관련 소프트웨어 개발 참여\r* IT 프로그래밍 학원에서 강의\r* 네이버 카페: https://cafe.naver.com/spring4shoppingmall\n",
        "bookIntroContent": "기초부터 실무까지 한 권으로!최근 효율적으로 개발할 수 있는 웹 프레임워크가 많이 나왔지만, JSP와 서블릿은 자바 웹 개발에서 가장 중요하고도 기본이 되는 내용이다. 기초가 튼튼해야 웹 프로그램이 어떻게 동작하는지 쉽게 이해할 수 있다. 이 책은 JSP와 서블릿의 동작 원리부터 모델2 아키텍처, 데이터베이스 연동, 스프링 및 마이바티스 프레임워크 사용법, 메이븐 등 실무에 필요한 기술까지 총망라해서 설명한다. 또한 책의 후반부에서는 스프링 & 마이바티스 기반 도서 쇼핑몰을 직접 만들어 봄으로써 중고급 개발자로 발돋움할 수 있게 안내한다. 웹 개발이 처음인 사람부터 기초를 다지고 싶은 초급 개발자까지 이 책 한 권이면 자바 웹 개발의 전체적인 흐름을 잡을 수 있을 것이다.저자 유튜브 동영상 강의 구독 신청 클릭! https://www.youtube.com/playlist?list=PLuvImYntyp-s76lJiia8YfskDRAypeoyh",
        "tableOfContentsContent": "\n1장 프로그램의 발전 과정 \r1.1 클라이언트 PC 기반 프로그램 \r1.2 클라이언트-서버 기반 프로그램 동작 방식 \r1.3 웹 기반 프로그램 동작 방식 \r 2장 웹 프로그래밍과 JSP \r2.1 웹 프로그래밍의 기본 \r2.2 정적 웹 프로그래밍 \r2.3 동적 웹 프로그래밍 \r2.4 JSP 프로그램의 특징 \r 3장 개발 환경 설정하기 \r3.1 JDK 설치하기\r3.2 JDK 환경 변수 설정하기 \r3.3 톰캣 컨테이너 설치하기 \r3.4 이클립스 IDE 설치하기 \r3.5 Java EE API 문서 즐겨찾기에 추가하기 \r3.6 비주얼 스튜디오 코드 설치하기\r3.7 Oracle DBMS 설치하기 \r3.8 SQL Developer 설치하기 \r3.9 exERD 설치하기\r 4장 웹 애플리케이션 이해하기 \r4.1 웹 애플리케이션\r4.2 웹 애플리케이션의 기본 구조 \r4.3 컨테이너에서 웹 애플리케이션 실행하기 \r4.4 이클립스에서 웹 애플리케이션 실습하기 \r4.5 웹 애플리케이션 서비스하기 \r 5장 서블릿 이해하기 \r5.1 서블릿이란? \r5.2 서블릿 API 계층 구조와 기능 \r5.3 서블릿의 생명주기 메서드 \r5.4 FirstServlet을 이용한 실습 \r5.5 서블릿 동작 과정 \r5.6 애너테이션을 이용한 서블릿 매핑\r 6장 서블릿 기초 \r6.1 서블릿의 세 가지 기본 기능 \r6.1.1 서블릿 기본 기능 수행 과정 \r6.2 [form] 태그 이용해 서블릿에 요청하기 \r6.3 서블릿에서 클라이언트의 요청을 얻는 방법 \r6.4 서블릿의 응답 처리 방법 \r6.5 웹 브라우저에서 서블릿으로 데이터 전송하기 \r6.6 GET 방식과 POST 방식 요청 동시에 처리하기\r6.7 자바스크립트로 서블릿에 요청하기 \r6.8 서블릿을 이용한 여러 가지 실습 예제 \r 7장 서블릿 비즈니스 로직 처리 \r7.1 서블릿의 비즈니스 로직 처리 방법 \r7.2 서블릿의 데이터베이스 연동하기 \r7.3 DataSource 이용해 데이터베이스 연동하기\r7.4 DataSource 이용해 회원 정보 등록하기 \r7.5 회원 정보 삭제하기 \r 8장 서블릿 확장 API 사용하기 \r8.1 서블릿 포워드 기능 사용하기 \r8.2 서블릿의 여러 가지 포워드 방법\r8.3 dispatch를 이용한 포워드 방법\r8.4 바인딩 \r8.5 ServletContext와 ServletConfig 사용법 \r8.6 load-on-startup 기능 사용하기\r 9장 쿠키와 세션 알아보기 \r9.1 웹 페이지 연결 기능\r9.2 [hidden] 태그와 URL Rewriting 이용해 웹 페이지 연동하기 \r9.3 쿠키를 이용한 웹 페이지 연동 기능 \r9.4 세션을 이용한 웹 페이지 연동 기능 \r9.5 encodeURL( ) 사용법 \r9.6 세션을 이용한 로그인 예제\r 10장 서블릿의 필터와 리스너 기능 \r10.1 서블릿 속성과 스코프\r10.2 서블릿의 여러 가지 URL 패턴\r10.3 Filter API \r10.4 여러 가지 서블릿 관련 Listener API \r 11장 JSP 정의와 구성 요소 \r11.1 JSP 등장 배경\r11.2 JSP의 3단계 작업 과정 \r11.3 JSP 페이지 구성 요소 \r11.4 디렉티브 태그\r 12장 JSP 스크립트 요소 기능\r12.1 JSP 스크립트 요소\r12.2 선언문 사용하기\r12.3 스크립트릿 사용하기 \r12.4 표현식 사용하기\r12.5 JSP 주석문 사용하기 \r12.6 스크립트 요소 이용해 실습하기\r12.7 내장 객체(내장 변수) 기능 \r12.8 JSP 페이지 예외 처리하기\r12.9 JSP welcome 파일 지정하기\r12.10 스크립트 요소 이용해 회원 정보 조회하기 \r 13장 자바 코드를 없애는 액션 태그 \r13.1 인클루드 액션 태그 사용하기 \r13.2 포워드 액션 태그 사용하기\r13.3 useBean, setProperty, getProperty 액션 태그 사용하기 \r 14장 표현 언어와 JSTL \r14.1 표현 언어란?\r14.2 표현 언어 내장 객체(내장 변수) \r14.3 표현 언어로 바인딩 속성 출력하기 \r14.4 커스텀 태그 \r14.5 JSTL 표준 태그 라이브러리(JSTL) \r14.6 Core 태그 라이브러리 사용하기 \r14.7 Core 태그 라이브러리 실습 예제 \r14.8 다국어 태그 라이브러리 사용하기 \r14.9 한글을 아스키 코드로 변환하기 \r14.10 포매팅 태그 라이브러리 사용하기 \r14.11 문자열 처리 함수 사용하기 \r14.12 표현 언어와 JSTL을 이용한 회원 관리 실습 \r 15장 JSP 페이지를 풍부하게 하는 오픈 소스 기능\r15.1 JSP에서 파일 업로드 \r15.2 JSP에서 파일 다운로드\r 16장 HTML5와 제이쿼리 \r16.1 HTML5 주요 개념 \r16.2 HTML5 시맨틱 웹을 위한 구성 요소\r16.3 제이쿼리 주요 개념 \r16.4 제이쿼리의 여러 가지 기능 \r16.5 제이쿼리 Ajax 기능 \r16.6 제이쿼리에서 JSON 사용하기 \r 17장 모델2 방식으로 효율적으로 개발하기\r17.1 웹 애플리케이션 모델 \r17.2 MVC 디자인 패턴 \r17.3 MVC를 이용한 회원 관리 \r17.4 모델2로 답변형 게시판 구현하기\r 18장 스프링 프레임워크 시작하기 \r18.1 프레임워크란? \r18.2 스프링 프레임워크 환경 설정하기\r 19장 스프링 의존성 주입과 제어 역전 기능\r19.1 의존성 주입하기 \r19.2 의존성 주입 실습하기 \r19.3 회원 기능 이용해 DI 실습하기\r 20장 스프링 AOP 기능 \r20.1 관점 지향 프로그래밍의 등장 \r20.2 스프링에서 AOP 기능 사용하기 \r 21장 스프링 MVC 기능\r21.1 스프링 프레임워크 MVC의 특징 \r21.2 SimpleUrlController 이용해 스프링 MVC 실습하기 \r21.3 MultiActionController 이용해 스프링 MVC 실습하기 \r21.4 MultiActionController 이용해 회원 정보 표시하기 \r21.5 요청명과 동일한 JSP 이름 표시하기 \r 22장 스프링 JDBC 기능 \r22.1 스프링 JDBC로 데이터베이스와의 연동 설정하기\r22.2 JdbcTemplate 클래스 이용해 회원 정보 조회하기\r 23장 마이바티스 프레임워크 사용하기\r23.1 마이바티스란? \r23.2 마이바티스 설치하기 \r23.3 마이바티스 이용해 회원 기능 실습하기 \r23.4 마이바티스 이용해 회원 정보 CRUD 실습하기 \r23.5 마이바티스의 동적 SQL문 사용하기 \r 24장 스프링과 마이바티스 연동하기 \r24.1 스프링-마이바티스 연동 관련 XML 파일 설정하기 \r24.2 마이바티스 관련 XML 파일 설정하기 \r24.3 자바 클래스와 JSP 파일 구현하기 \r 25장 스프링 트랜잭션 기능 사용하기\r25.1 트랜잭션 기능 \r25.2 은행 계좌 이체를 통한 트랜잭션 기능 \r25.3 스프링의 트랜잭션 속성 알아보기\r25.4 스프링 트랜잭션 기능 적용해 계좌 이체 실습하기 \r 26장 스프링 애너테이션 기능 \r26.1 스프링 애너테이션이란? \r26.2 스프링 애너테이션 이용해 URL 요청 실습하기\r26.3 스프링 애너테이션 이용해 로그인 기능 구현하기 \r26.4 @Autowired 애너테이션 이용해 빈 주입하기 \r 27장 메이븐과 스프링 STS 사용법 \r27.1 메이븐 설치하기 \r27.2 메이븐 환경 변수 설정하기 \r27.3 STS 설치하기 \r27.4 메이븐 프로젝트의 구조 및 구성 요소 살펴보기 \r27.5 스프링 프로젝트 만들기\r27.6 STS 프로젝트 실행하기\r27.7 STS 환경에서 마이바티스 실습하기 \r27.8 log4j 알아보기 9\r27.9 타일즈 기능 살펴보기\r27.10 JSP 페이지에 타일즈 적용하기\r27.11 페이지 본문에 회원 목록창 나타내기 \r27.12 로그인 기능 구현하기 \r 28장 스프링에서 지원하는 여러 가지 기능\r28.1 다중 파일 업로드하기 \r28.2 썸네일 이미지 사용하기 \r28.3 스프링 이메일 사용하기 \r28.4 HTML 형식 메일 보내기 \r28.5 스프링 인터셉터 사용하기\r 28.6 인터셉터 사용해 요청명에서 뷰이름 가져오기 \r 29장 스프링 REST API 사용하기 \r29.1 REST란? \r29.2 @RestController 사용하기\r29.3 @PathVariable 사용하기 \r29.4 @RequestBody와 @ResponseBody 사용하기\r29.5 REST 방식으로 URI 표현하기 \r 30장 스프링으로 답변형 게시판 만들기 \r30.1 기존 소스 코드 변경하기 \r30.2 마이바티스 관련 XML 파일 설정하기 \r30.3 타일즈 설정하기\r30.4 게시판 목록 표시하기 \r30.5 새 글 추가하기 \r30.6 글상세창 구현하기 \r30.7 글 수정하기 \r30.8 글 삭제하기 \r30.9 새 글 추가 시 여러 이미지 파일 첨부하기 \r30.10 글상세창에 여러 이미지 표시하기\r 31장 도서 쇼핑몰 만들기 \r31.1 쇼핑몰 애플리케이션 설치하기 \r31.2 도서 쇼핑몰 기능 알아보기\r31.3 메인 페이지 구현하기\r31.4 상품 상세 구현하기 \r31.5 Ajax 이용해 검색 자동 완성 기능 구현하기 \r31.6 로그인과 회원 가입하기 \r31.7 장바구니 기능 구현하기 \r31.8 주문 기능 구현하기 \r31.9 마이페이지 기능 구현하기\r31.10 상품 관리 기능 구현하기 \r31.11 주문 관리 기능 구현하기\r 32장 스프링 부트 사용하기 \r32.1 스프링 부트란?\r32.2 스프링 부트 전용 STS 설치하기 \r32.3 스프링 부트 프로젝트 생성하기 \r32.4 스프링 부트 프로젝트 실행하기 \r32.5 스프링 부트 웹 페이지 만들기 \r32.6 그레이들 이용해 스프링 부트 실습하기 \r32.7 마이바티스 사용하기 \r32.8 타일즈 사용하기 \r32.9 인터셉터 사용하기\n",
        "isbn10": "1160506825",
        "isbn13": "9791160506822"
    },
    {
        "title": "모던 자바스크립트 입문 (프런트엔드부터 백엔드까지, 핵심은 자바스크립트다!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13447219",
        "image": "https://bookthumb-phinf.pstatic.net/cover/134/472/13447219.jpg?type=m1&udate=20180608",
        "author": "이소 히로시",
        "price": "32000",
        "discount": "28800",
        "publisher": "길벗",
        "pubdate": "20180330",
        "isbn": "1160504431 9791160504439",
        "description": "ES6로 배우는 모던 자바스크립트 입문\n자바스크립트는 HTML, CSS와는 달리 변수, 함수처럼 프로그래밍 기초 개념부터 짚어가며 익혀야 한다. 기초... 프런트엔드부터 백엔드까지 핵심이 되는 자바스크립트를 다양한 예제를 직접 실행해보며 확실하게 이해할 수 있다.",
        "authorIntroContent": "\n이소 히로시\n저자 : 이소 히로시저자 : 이소 히로시저자 이소 히로시토키와 대학 사회환경학부 부교수다. 쓰쿠바 연구 학원 전문 학교 강사, 후지 단기 대학 부교수와 후지 토키와 대학 조교수를 거쳤으며, CAD와 프로그래밍, 수학, 과학 교육 분야에서 활동하고 있다. 1988년에 미국 페르미 국립 가속기 연구소 연구원으로 양자 반양성자 충돌 실험에 참여했으며, 1987년에 쓰쿠바 대학 대학원 박사 물리학 대학원에서 단위 취득 후 만기 퇴학했으며, 이학 박사다. ＜연습을 통해 실력을 쌓는 HTML /CSS 코딩 교과서＞를 집필했다.역자 : 서재원역자 서재원은 웹 프런트엔드 개발자와 번역가로 활동 중이다. 최근에는 함수형 자바스크립트 프로그래밍과 블록체인 기술에 관심이 많다. 역서로는 ＜그림으로 배우는 알고리즘＞, ＜그림으로 배우는 클라우드＞, ＜그림으로 배우는 C+ Programming＞, ＜구글에서 배우는 딥러닝＞ 등이 있다.\n",
        "bookIntroContent": "ES6로 배우는 모던 자바스크립트 입문자바스크립트는 HTML, CSS와는 달리 변수, 함수처럼 프로그래밍 기초 개념부터 짚어가며 익혀야 한다. 기초 문법부터 ES6, 정규 표현식, 객체 지향 및 함수형 프로그래밍, HTTP, MVC, API 활용까지 다룬다. 또한, 기초 예제 외에도 Canvas를 활용한 망델브로 집합 그리기, 생명 게임을 만들며 MVC 프레임워크 구현하기, 그림판 만들기 등 컴퓨터 그래픽스가 적용된 알찬 예제도 수록했다. 프런트엔드부터 백엔드까지 핵심이 되는 자바스크립트를 다양한 예제를 직접 실행해보며 확실하게 이해할 수 있다.",
        "tableOfContentsContent": "\n 1장 자바스크립트의 개요 \r1.1 프로그래밍 언어로서의 자바스크립트\r1.2 자바스크립트의 역사 \r 2장 프로그램의 작성법과 실행법\r2.1 실습 준비하기\r2.2 간단한 예제\r2.3 프로그램 실행법\r2.4 프로그램 작성법 \r 3장 변수와 값 \r3.1 변수\r3.2 데이터 타입 \r3.3 ECMAScript 6부터 추가된 데이터 타입\r 4장 객체와 배열, 함수의 기초 \r4.1 객체의 기초 ① 객체 리터럴\r4.2 함수의 기초\r4.3 객체의 기초 ② 생성자\r4.4 객체의 기초 ③ 내장 객체 \r4.5 배열의 기초\r 5장 표현식과 연산자\r5.1 연산자 \r5.2 산술 연산 \r5.3 문자열 제어하기\r5.4 논리 연산자와 관계 연산자\r5.5 비트 연산 \r5.6 기타 연산\r5.7 명시적 타입 변환\r 6장 웹 브라우저에서의 입출력\r6.1 대화상자 표시하기\r6.2 console\r6.3 이벤트 처리기 등록하기와 타이머 알아보기\r6.4 HTML 요소를 동적으로 읽고 쓰기\r6.5 Canvas를 활용한 컴퓨터 그래픽스 \r 7장 제어 구문 \r7.1 제어 구문\r7.2 조건문\r7.3 반복문\r7.4 점프문 \r7.5 응용 예제\r 8장 함수 \r8.1 함수 정의하기\r8.2 함수 호출하기 \r8.3 함수의 인수 \r8.4 재귀 함수\r8.5 프로그램의 평가와 실행 과정\r8.6 클로저 \r8.7 이름 공간 \r8.8 객체로서의 함수\r8.9 고차 함수 \r8.10 콜백 함수\r8.11 ECMAScript 6부터 추가된 함수의 기능\r 9장 객체 \r9.1 객체 생성하기 \r9.2 프로토타입 상속\r9.3 접근자 프로퍼티\r9.4 프로퍼티의 속성 \r9.5 프로퍼티가 있는지 확인하기\r9.6 프로퍼티의 열거 \r9.7 객체 잠그기 \r9.8 Mixin\r9.9 JSON\r9.10 ECMAScript 6부터 추가된 객체의 기능 \r 10장 배열의 다양한 기능\r10.1 배열의 메서드\r10.2 다차원 배열\r10.3 유사 배열 객체\r10.4 ECMAScript 6의 배열과 새롭게 추가된 기능\r 11장 버그와 오류에 대처하는 방법\r11.1 버그에 대처하기\r11.2 예외 처리\r 12장 정규 표현식\r12.1 정규 표현식의 기본\r12.2 기본적인 정규 표현식 패턴 작성하기\r12.3 패턴 매칭을 하는 문자열 메서드\r12.4 RegExp 객체 \r12.5 ECMAScript 6부터 추가된 정규 표현식의 새로운 기능\r 13장 웹 브라우저의 객체\r13.1 클라이언트 측 자바스크립트\r13.2 Location 객체\r13.3 History 객체\r13.4 Navigator 객체\r13.5 Screen 객체\r13.6 Document 객체\r13.7 창 제어하기\r 14장 문서 제어\r14.1 DOM 트리\r14.2 노드 객체 가져오기\r14.3 속성 값의 읽기와 쓰기\r14.4 HTML 요소의 내용을 읽고 쓰기\r14.5 노드 생성/삽입/삭제하기\r14.6 HTML 요소의 위치\r14.7 HTML 폼\r14.8 CSS 제어하기\r 15장 이벤트 처리\r15.1 이벤트 처리기를 등록하는 방법\r15.2 이벤트 리스너를 등록하고 삭제하는 방법\r15.3 이벤트 객체\r15.4 이벤트의 전파\r15.5 이벤트 리스너 안의 this\r15.6 이벤트 리스너에 추가적인 정보를 넘기는 방법\r15.7 커스텀 이벤트\r15.8 비동기 처리를 간결하게 작성하는 Promise\r15.9 그림판 프로그램 만들기\r 16장 HTTP 제어(Ajax)\r16.1 HTTP 통신\r16.2 Ajax\r16.3 XMLHttpRequest\r16.4 응답 받기\r16.5 크로스 오리진 통신\r 17장 MVC 모델에 기반을 둔 프로그램 설계\r17.1 MVC 모델\r17.2 생명 게임 시뮬레이터\r 18장 생성자와 클래스 구문\r18.1 생성자\r18.2 생성자 상속\r18.3 ECMAScript 6의 클래스 구문\r 19장 API 활용\r19.1 드래그 앤 드롭 API\r19.2 Blob \r19.3 Web Workers\r A 부록\rA.1 크롬에서 디버깅하기\rA.2 자바스크립트 학습용 도서와 웹 사이트\r \n",
        "isbn10": "1160504431",
        "isbn13": "9791160504439"
    },
    {
        "title": "자바와 JUnit을 활용한 실용주의 단위 테스트",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15064709",
        "image": "https://bookthumb-phinf.pstatic.net/cover/150/647/15064709.jpg?type=m1&udate=20190725",
        "author": "제프 랭어|앤디 헌트|데이브 토마스",
        "price": "26000",
        "discount": "23400",
        "publisher": "길벗",
        "pubdate": "20190630",
        "isbn": "1160508380 9791160508383",
        "description": "테스트의 개념과 작성 이유부터 테스트 가이드라인, 목 객체 사용법, 자동화된 단위 테스트, 리팩토링까지 단위 테스트의 핵심 내용을 설명한다. 또한, 자바와 JUnit으로 단위 테스트를 단계별로 실습할 수 있게 구성했다. 단위 테스트가 처음이거나, 단위 테스트를 좀 더 깊게 이해하고 싶은 분들에게 추천한다.",
        "authorIntroContent": "\n제프 랭어\n저자 : 제프 랭어저자 : 제프 랭어경력 30년 이상의 베테랑 소프트웨어 개발자로 소프트웨어 개발뿐만 아니라 개발 관련 코치를 겸하고 있다. Outpace Systems, Inc.에서 일했고 지금도 Langr Software Solutions, Inc.에서 고객을 돕고 있다. 『Agile in a Flash』(팀 오팅거 공저) 등을 집필했다.저자 : 앤디 헌트『실용주의 프로그래머』(인사이트, 2014)와 『애자일 프랙티스』(인사이트, 2007), 『실용주의 사고와 학습』(위키북스, 2010) 등 6권의 책을 집필 혹은 공저했으며, 전 세계 소프트웨어 개발 콘퍼런스에서 정기적으로 강연한다.저자 : 데이브 토마스멋진 기술을 전파하는 것을 좋아하는 프로그래머다. 『실용주의 프로그래머』의 공저자이며 애자일 선언문의 창시자 중 한 명이다. 집필서인 『프로그래밍 루비』(인사이트, 2015)는 루비 언어를 세상에 처음 소개했고 『레일스와 함께하는 애자일 웹 개발』(인사이트, 2007)은 레일즈 혁명을 촉발하는 데 기여했다.역자 : 유동환책 쓰는 프로그래머다. 연세대학교 정보대학원에서 경영정보학을 전공한 후 LG전자에서 안드로이드 앱을 개발했다. 최근에는 선행플랫폼개발팀으로 자리를 옮겨 차세대 모바일 기술 프로젝트를 진행 중이다. 『안드로이드를 위한 Gradle』과 『RxJava 프로그래밍』(공저)을 집필했고, 『Java 9 모듈 프로그래밍』, 『그레이들 레시피』 등을 번역했다.\n",
        "bookIntroContent": "『실용주의 프로그래머』의 앤디 헌트와 데이브 토마스가 알려주는실용주의 단위 테스트!클린 코드의 핵심인 단위 테스트, 어디서 어떻게 시작해야 할까? 책에서는 단위 테스트의 개념과 작성 이유부터 테스트 가이드라인, 목 객체 사용법, 자동화된 단위 테스트, 리팩토링까지 단위 테스트의 핵심 내용을 설명한다. 또한, 자바와 JUnit으로 단위 테스트를 단계별로 실습할 수 있게 구성했다. 단위 테스트가 처음이거나, 단위 테스트를 좀 더 깊게 이해하고 싶은 분들에게 추천한다.",
        "tableOfContentsContent": "\n1부 단위 테스트의 기초 \r 1장 첫 번째 JUnit 테스트 만들기 \r1.1 단위 테스트를 작성하는 이유 \r1.2 JUnit의 기본: 첫 번째 테스트 통과 \r__1.2.1 프로젝트 설정 \r__1.2.2 JUnit 테스트 좀 더 이해\r__1.2.3 JUnit 실행\r1.3 테스트 준비, 실행, 단언\r1.4 테스트가 정말로 뭔가를 테스트하는가? \r1.5 마치며\r 2장 JUnit 진짜로 써 보기 \r2.1 테스트 대상 이해: Profile 클래스 \r2.2 어떤 테스트를 작성할 수 있는지 결정\r2.3 단일 경로 커버 \r2.4 두 번째 테스트 만들기\r2.5 @Before 메서드로 테스트 초기화\r2.6 이제 어떤가?\r2.7 마치며 \r 3장 JUnit 단언 깊게 파기\r3.1 JUnit 단언\r__3.1.1 assertTrue \r__3.1.2 assertThat은 명확한 값을 비교\r__3.1.3 중요한 햄크레스트 매처 살펴보기 \r__3.1.4 부동소수점 수를 두 개 비교\r__3.1.5 단언 설명\r3.2 예외를 기대하는 세 가지 방법\r__3.2.1 단순한 방식: 애너테이션 사용\r__3.2.2 옛 방식: try/catch와 fail \r__3.2.3 새로운 방식: ExpectedException 규칙 \r__3.2.4 예외 무시\r3.3 마치며\r 4장 테스트 조직\r4.1 AAA로 테스트 일관성 유지\r4.2 동작 테스트 vs 메서드 테스트\r4.3 테스트와 프로덕션 코드의 관계\r__4.3.1 테스트와 프로덕션 코드 분리\r__4.3.2 내부 데이터 노출 vs 내부 동작 노출\r4.4 집중적인 단일 목적 테스트의 가치\r4.5 문서로서의 테스트\r__4.5.1 일관성 있는 이름으로 테스트 문서화\r__4.5.2 테스트를 의미 있게 만들기\r4.6 @Before와 @After (공통 초기화와 정리) 더 알기 \r__4.6.1 BeforeClass와 AfterClass 애너테이션\r4.7 녹색이 좋다: 테스트를 의미 있게 유지\r__4.7.1 테스트를 빠르게\r__4.7.2 테스트 제외 \r4.8 마치며\r 2부 빠른 암기법 습득\r 5장 좋은 테스트의 FIRST 속성\r5.1 FIRST: 좋은 테스트 조건\r5.2 [F]IRST: 빠르다\r5.3 F[I]RST: 고립시킨다\r5.4 FI[R]ST: 좋은 테스트는 반복 가능해야 한다\r5.5 FIR[S]T: 스스로 검증 가능하다\r5.6 FIRS[T]: 적시에 사용한다\r5.7 마치며\r 6장 Right-BICEP: 무엇을 테스트할 것인가? \r6.1 [Right]-BICEP: 결과가 올바른가?\r6.2 Right-[B]ICEP: 경계 조건은 맞는가?\r6.3 경계 조건에서는 CORRECT를 기억하라\r6.4 Right-B[I]CEP: 역 관계를 검사할 수 있는가?\r6.5 Right-BI[C]EP: 다른 수단을 활용하여 교차 검사할 수 있는가?\r6.6 Right-BIC[E]P: 오류 조건을 강제로 일어나게 할 수 있는가?\r6.7 Right-BICE[P]: 성능 조건은 기준에 부합하는가?\r6.8 마치며\r 7장 경계 조건: CORRECT 기억법\r7.1 [C]ORRECT: [C]onformance(준수)\r7.2 C[O]RRECT: [O]rdering(순서)\r7.3 CO[R]RECT: [R]ange(범위)\r__7.3.1 불변성을 검사하는 사용자 정의 매처 생성\r__7.3.2 불변 메서드를 내장하여 범위 테스트\r7.4 COR[R]ECT: [R]eference(참조)\r7.5 CORR[E]CT: [E]xistence(존재)\r7.6 CORRE[C]T: [C]ardinality(기수)\r7.7 CORREC[T]: [T]ime(시간)\r7.8 마치며\r 3부 더 큰 설계 그림\r 8장 깔끔한 코드로 리팩토링하기\r8.1 작은 리팩토링\r__8.1.1 리팩토링의 기회\r__8.1.2 메서드 추출: 두 번째로 중요한 리팩토링 친구\r8.2 메서드를 위한 더 좋은 집 찾기\r8.3 자동 및 수동 리팩토링 \r8.4 과한 리팩토링? \r__8.4.1 보상: 명확하고 테스트 가능한 단위들\r__8.4.2 성능 염려: 그러지 않아도 된다\r8.5 마치며\r 9장 더 큰 설계 문제 \r9.1 Profile 클래스와 SRP\r9.2 새로운 클래스 추출 \r9.3 명령-질의 분리\r9.4 단위 테스트의 유지 보수 비용\r__9.4.1 자신을 보호하는 방법\r__9.4.2 깨진 테스트 고치기 \r9.5 다른 설계에 관한 생각들\r9.6 마치며 \r 10장 목 객체 사용\r10.1 테스트 도전 과제\r10.2 번거로운 동작을 스텁으로 대체\r10.3 테스트를 지원하기 위한 설계 변경\r10.4 스텁에 지능 더하기: 인자 검증\r10.5 목 도구를 사용하여 테스트 단순화\r10.6 마지막 하나의 단순화: 주입 도구 소개\r10.7 목을 올바르게 사용할 때 중요한 것\r10.8 마치며\r 11장 테스트 리팩토링\r11.1 이해 검색\r11.2 테스트 냄새: 불필요한 테스트 코드\r11.3 테스트 냄새: 추상화 누락\r11.4 테스트 냄새: 부적절한 정보\r11.5 테스트 냄새: 부푼 생성\r11.6 테스트 냄새: 다수의 단언 \r11.7 테스트 냄새: 테스트와 무관한 세부 사항들\r11.8 테스트 냄새: 잘못된 조직\r11.9 테스트 냄새: 암시적 의미 \r11.10 새로운 테스트 추가\r11.11 마치며\r 4부 더 큰 단위 테스트 그림\r 12장 테스트 주도 개발 \r12.1 TDD의 주된 이익\r12.2 단순하게 시작\r12.3 또 다른 증분 추가\r12.4 테스트 정리\r12.5 또 다른 작은 증분\r12.6 다수의 응답 지원: 작은 설계 우회로\r12.7 인터페이스 확장\r12.8 마지막 테스트들\r12.9 문서로서의 테스트\r12.10 TDD의 리듬\r12.11 마치며\r 13장 까다로운 테스트 \r13.1 멀티스레드 코드 테스트 \r__13.1.1 단순하고 똑똑하게 유지\r__13.1.2 모든 매칭 찾기\r__13.1.3 애플리케이션 로직 추출\r__13.1.4 스레드 로직의 테스트 지원을 위해 재설계\r__13.1.5 스레드 로직을 위한 테스트 작성\r13.2 데이터베이스 테스트\r__13.2.1 고마워, Controller \r__13.2.2 데이터 문제 \r__13.2.3 클린 룸 데이터베이스 테스트\r__13.2.4 controller를 목 처리\r13.3 마치며\r 14장 프로젝트에서 테스트\r14.1 빠른 도입\r14.2 팀과 같은 편 되기\r__14.2.1 단위 테스트 표준 만들기\r__14.2.2 리뷰로 표준 준수 높이기\r__14.2.3 짝 프로그래밍을 이용한 리뷰\r14.3 지속적 통합으로 수렴 \r14.4 코드 커버리지\r__14.4.1 커버리지는 어느 정도여야 하는가?\r__14.4.2 100% 커버리지는 진짜 좋은가?\r__14.4.3 코드 커버리지의 가치\r14.5 마치며\r 부록 A 인텔리제이 IDEA와 넷빈즈에서 JUnit 설정\rA.1 인텔리제이 IDEA \rA.2 넷빈즈\n",
        "isbn10": "1160508380",
        "isbn13": "9791160508383"
    },
    {
        "title": "자바스크립트로 하는 자료 구조와 알고리즘 (핵심 자료 구조 및 알고리즘을 이해하고 구현하기 위한 입문서)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15370256",
        "image": "https://bookthumb-phinf.pstatic.net/cover/153/702/15370256.jpg?type=m1&udate=20190903",
        "author": "배세민",
        "price": "30000",
        "discount": "27000",
        "publisher": "에이콘출판",
        "pubdate": "20190830",
        "isbn": "1161753443 9791161753447",
        "description": "자료 구조와 알고리즘의 개념을 이해하고 이를 자바스크립트로 구현하기 위한 책이다. 자바스크립트 프로그래머라면 제대로 된 애플리케이션을 만들기... 실제 자바스크립트로 구현해본다. 이러한 과정을 통해 자료 구조와 알고리즘에 대한 이해도를 높일 수 있을 뿐만 아니라 자바스크립트 구현 능력도 키울 수... ",
        "authorIntroContent": "\n배세민\n저자 : 배세민옐프(YELP)에서 근무 중인 데이터 엔지니어다. 엔비디아(NVIDIA)의 데이터 플랫폼 엔지니어링 팀에서 일한 바 있다. 스마트 테크놀로지스(SMART TECHNOLOGIES)에서 인턴 생활을 하면서 자바스크립트에 깊은 관심을 갖게 됐다. 스마트 테크놀로지스에서 보드 드라이버와 웹 애플리케이션 간 직렬 포트 통신을 위한 NODE.JS 기반 자바스크립트 API를 개발했다. 자바스크립트가 최신 소프트웨어 엔지니어링 산업에 밀접한 영향을 미침에도 이 책을 제외하고는 자바스크립트를 사용해 알고리즘과 자료 구조를 가르치는 책이 없다. 이러한 알고리즘과 자료 구조와 같은 컴퓨터 과학 개념이 얼마나 어려운지 잘 이해하고 있다. 이 책의 목표는 어려운 개념을 명확하고 간결하게 설명하는 것이다.역자 : 김무항위치 기반 서비스, 증강 현실, 보안 등 다양한 분야에서 연구와 개발을 했다. 기술 번역에 관심이 많다. 에이콘출판사에서 펴낸 『드루팔 사용하기』(2013)와 『프로그래머처럼 생각하기』(2014), 『PHP와 MARIADB를 활용한 웹 애플리케이션 개발』(2016), 『파이썬으로 처음 시작하는 코딩』(2018)을 번역했다.\n",
        "bookIntroContent": "자료 구조와 알고리즘의 개념을 이해하고 이를 자바스크립트로 구현하기 위한 책이다. 자바스크립트 프로그래머라면 제대로 된 애플리케이션을 만들기 위해 알아야 할 핵심 자료 구조와 알고리즘을 다룬다. 해시 테이블, 연결 리스트, 큐, 트리, 그래프 등의 핵심 자료 구조와 검색, 정렬, 재귀, 동적 프로그래밍, 비트 연산 등의 핵심 알고리즘을 배우고 이를 실제 자바스크립트로 구현해본다. 이러한 과정을 통해 자료 구조와 알고리즘에 대한 이해도를 높일 수 있을 뿐만 아니라 자바스크립트 구현 능력도 키울 수 있다.",
        "tableOfContentsContent": "\n1장. 빅오 표기법 __빅오 표기법 기초\r____일반적인 예\r__빅오 표기법 규칙\r____계수 법칙: “상수를 제거하라”\r____합의 법칙: “빅오를 더하라”\r____곱의 법칙: “빅오를 곱하라”\r____다항 법칙: “빅오의 k승”\r__요약\r__연습 문제\r____정답\r  2장. 자바스크립트의 독특한 특징 __자바스크립트 범위\r____전역 선언: 전역 범위\r____var를 사용해 선언하기: 함수 범위\r____let을 활용한 선언: 블록 범위\r__등가와 형\r____변수형\r____참/거짓 확인\r____=== 대 ==\r____객체\r__요약\r  3장. 자바스크립트 숫자 __숫자 체계\r__자바스크립트 숫자 객체\r____정수 반올림\r____NumberEPSILON\r____최대치\r____최소치\r____무한\r____크기 순서\r____숫자 알고리즘\r____소인수 분해\r__무작위 수 생성기\r__연습 문제\r__요약\r  4장. 자바스크립트 문자열 __자바스크립트 문자열 기본\r____문자열 접근\r____문자열 비교\r____문자열 검색\r____문자열 분해\r____문자열 바꾸기\r__정규 표현식\r____기본 정규 표현식\r____자주 사용하는 정규 표현식\r____숫자를 포함하는 문자\r____숫자만 포함하는 문자\r____부동소수점 문자\r____숫자와 알파벳만을 포함하는 문자\r____질의 문자열\r__인코딩\r__Base64 인코딩\r__문자열 단축\r__암호화\r____RSA 암호화\r__요약\r  5장. 자바스크립트 배열 __배열 소개\r____삽입\r____삭제\r____접근\r__반복\r____for (변수; 조건; 수정)\r____for ( in )\r____for ( of )\r____forEach( )\r__도움 함수\r____slice(begin,end)\r____splice(begin,size,element1,element2)\r____concat( )\r____length 속성\r____전개 연산자\r__연습 문제\r__자바스크립트 함수형 배열 메소드\r____map\r____filter\r____reduce\r__다차원 배열\r__연습 문제\r__요약\r  6장. 자바스크립트 객체 __자바스크립트 객체 속성\r____프로토타입 활용 상속\r__생성자와 변수\r__요약\r__연습 문제\r  7장. 자바스크립트 메모리 관리 __메모리 누수\r____객체에 대한 참조\r____DOM 메모리 누수\r____window 전역 객체\r____객체 참조 제한하기\r____delete 연산자\r__요약\r__연습 문제\r  8장. 재귀 __재귀 소개\r__재귀의 규칙\r____기저 조건\r____분할 정복 방식\r____대표적인 예: 피보나치 수열\r____피보나치 수열: 꼬리 재귀\r____파스칼의 삼각형\r__재귀의 빅오 분석\r____점화식\r____마스터 정리\r__재귀 호출 스택 메모리\r__요약\r__연습 문제\r  9장. 집합 __집합 소개\r__집합 연산\r____삽입\r____삭제\r____포함\r__기타 유틸리티 함수\r____교집합\r____상위 집합 여부 확인\r____합집합\r____차집합\r__요약\r__연습 문제\r  10장. 검색과 정렬 __검색\r____선형 검색\r____이진 검색\r__정렬\r____거품 정렬\r____선택 정렬\r____삽입 정렬\r____빠른 정렬\r____빠른 선택\r____병합 정렬\r____계수 정렬\r____자바스크립트 내장 정렬\r__요약\r__연습 문제\r  11장. 해시 테이블 __해시 테이블 소개\r__해싱 기법\r____소수 해싱\r____탐사\r____재해싱/이중 해싱\r__해시 테이블 구현\r____선형 탐사 사용하기\r____이차 탐사 사용하기\r____선형 탐사를 활용해 이중 해싱 사용하기\r__요약\r  12장. 스택과 큐 __스택\r____들여다보기\r____삽입\r____삭제\r____접근\r____검색\r__큐\r____들여다보기\r____삽입\r____삭제\r____접근\r____검색\r__요약\r__연습 문제\r  13장. 연결 리스트 __단일 연결 리스트\r____삽입\r____값에 의한 삭제\r____헤드 항목 삭제\r____검색\r__이중 연결 리스트\r____헤드에 항목 삽입하기\r____테일에 항목 삽입하기\r____헤드의 항목 삭제하기\r____테일의 항목 삭제하기\r____검색\r__요약\r__연습 문제\r  14장. 캐싱 __캐싱 이해하기\r__LFU 캐싱\r__LRU 캐싱\r__요약\r  15장. 트리 __일반적인 트리 구조\r__이진 트리\r__트리 순회\r____선순위 순회\r____중순위 순회\r____후순위 순회\r____단계순위 순회\r____트리 순회 요약\r__이진 검색 트리\r____삽입\r____삭제\r____검색\r__AVL 트리\r____단일 회전\r____오른쪽 회전\r____이중 회전\r____트리 균형 잡기\r____삽입\r____AVL 트리 예제 종합\r__요약\r__연습 문제\r  16장. 힙 __힙에 대한 이해\r____최대 힙\r____최소 힙\r__이진 힙 배열 인덱스 구조\r____삼투: 위로 아래로 이동\r____삼투 구현하기\r____최대 힙 예\r__최소 힙 구현 완성\r__최대 힙 구현 완성\r__힙 정렬\r____오름차순 정렬(최소 힙)\r____내림차순 정렬(최대 힙)\r__요약\r__연습 문제\r  17장. 그래프 __그래프 기본\r__무지향성 그래프\r____간선과 정점 추가하기\r____간선과 정점 삭제하기\r__지향성 그래프\r__그래프 순회\r____너비 우선 검색\r____깊이 우선 검색\r__가중치가 있는 그래프와 최단 경로\r____가중치가 있는 간선을 지닌 그래프\r____다익스트라의 알고리즘: 최단 경로\r__위상 정렬\r__요약\r  18장. 고급 문자열 __트라이(접두사 트리)\r__보이어-무어 문자열 검색\r__커누스-모리스-플랫 문자열 검색\r__라빈-카프 검색\r____라빈 지문\r____실생활 적용 예\r__요약\r  19장. 동적 프로그래밍 __동적 프로그래밍의 필요성\r__동적 프로그래밍의 규칙\r____중복 부분 문제\r____최적 부분 구조\r____예: 걸음 수를 채우는 방법\r__대표적인 동적 프로그래밍 예\r____배낭 문제 알고리즘\r____최장 공통 부분 수열 알고리즘\r____동전 교환 알고리즘\r____편집 거리 알고리즘\r__요약\r  20장. 비트 조작 __비트 연산자\r____AND\r____OR\r____XOR\r____NOT\r____왼쪽 이동\r____오른쪽 이동\r____오른쪽 이동 후 0으로 채우기\r__숫자 연산\r____덧셈\r____뺄셈\r____곱셈\r____나눗셈\r__요약\r \n",
        "isbn10": "1161753443",
        "isbn13": "9791161753447"
    },
    {
        "title": "이것이 자바다 (신용권의 Java 프로그래밍 정복)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=8589375",
        "image": "https://bookthumb-phinf.pstatic.net/cover/085/893/08589375.jpg?type=m1&udate=20190327",
        "author": "신용권",
        "price": "30000",
        "discount": "27000",
        "publisher": "한빛미디어",
        "pubdate": "20150105",
        "isbn": "8968481474 9788968481475",
        "description": "『이것이 자바다』은 15년 이상 자바 언어를 교육해온 자바 전문강사의 노하우를 아낌 없이 담아낸 자바 입문서이다. 자바 입문자를 배려한 친절한 설명과 배려로 1장에 풀인원 설치 방법을 제공하여 쉽게 학습환경을 구축할 수 있다. 또한 중급 개발자로 나아가기 위한 람다식(14장), JAVAFX(17장), NIO(18... ",
        "authorIntroContent": "\n신용권\n저자 : 신용권저자 신용권은 20년 동안 시스템 제어 및 애플리케이션 개발자로 활동한 베테랑 개발자이자, IT 전문 교육자이기도 하다. 메카트로닉스를 전공했으며 삼성항공 시스템 설계 파트에서 하드웨어 제어용 소프트웨어 개발을 담당했다. 1998년부터 지금까지 자바 개발자로, 그리고 자바 강사로 활동하고 있다. 삼성멀티캠퍼스(SDS)에서 자바 전임교수로 근무했고, 유수한 교육기관에서 재직자 및 전문가 위탁교육을 진행해 왔다. 또한 국내 최초로 재직자를 위한 ‘HTML5 모바일 웹앱 & 하이브리드앱’ 교육과정을 개설하여 많은 전문 개발자를 양성했다. 최근에는 오픈 소스 프레임워크, 안드로이드, HTML5 하이브리드앱 등의 분야에서 대학전산망 및 현업 재직자를 위한 소프트웨어 역량 강화 사업의 전임강사로 활동했다. 현재는 SK PLANET에서 운영하는 T 아카데미에서 자바, 웹, 안드로이드 앱 개발 강사로 활동하고 있다.HTTP://CAFE.NAVER.COM/THISISJAVA\n",
        "bookIntroContent": "『이것이 자바다』은 15년 이상 자바 언어를 교육해온 자바 전문강사의 노하우를 아낌 없이 담아낸 자바 입문서이다. 자바 입문자를 배려한 친절한 설명과 배려로 1장에 풀인원 설치 방법을 제공하여 쉽게 학습환경을 구축할 수 있다. 또한 중급 개발자로 나아가기 위한 람다식(14장), JAVAFX(17장), NIO(18~19장) 수록되어 있으며 각 챕터마다 확인문제 제공. 풀이와 답은 인터넷 강의에서 친절한 해설을 통해 알려준다.",
        "tableOfContentsContent": "\nCHAPTER 1 자바 시작하기\r__1.1 프로그래밍 언어란?\r__1.2 자바란? \r__1.3 자바 개발 환경 구축 \r__1.4 자바 프로그램 개발 순서 \r__1.5 주석과 실행문 \r__1.6 이클립스 설치\r__1.7 풀인원 설치와 실행\r CHAPTER 2 변수와 타입\r__2.1 변수 \r__2.2 데이터 타입\r CHAPTER 3 연산자\r__3.1 연산자와 연산식 \r__3.2 연산의 방향과 우선순위\r__3.3 단항 연산자\r__3.4 이항 연산자 \r__3.5 삼항 연산자\r CHAPTER 4 조건문과 반복문\r__4.1 코드 실행 흐름 제어\r__4.2 조건문(if문, switch문) \r__4.3 반복문(for문, while문, do-while문) \r CHAPTER 5 참조 타입\r__5.1 데이터 타입 분류 \r__5.2 메모리 사용 영역 \r__5.3 참조 변수의 ==, != 연산 \r__5.4 null과 NullPointerException\r__5.5 String 타입\r__5.6 배열 타입\r__5.7 열거 타입\r CHAPTER 6 클래스\r__6.1 객체 지향 프로그래밍 \r__6.2 객체와 클래스 \r__6.3 클래스 선언 \r__6.4 객체 생성과 클래스 변수 \r__6.5 클래스의 구성 멤버 \r__6.6 필드 \r__6.7 생성자 \r__6.8 메소드 \r__6.9 인스턴스 멤버와 this \r__6.10 정적 멤버와 static \r__6.11 final 필드와 상수 \r__6.12 패키지 \r__6.13 접근 제한자 \r__6.14 Getter와 Setter 메소드\r__6.15 어노테이션 \r CHAPTER 7 상속\r__7.1 상속 개념 \r__7.2 클래스 상속 \r__7.3 부모 생성자 호출 \r__7.4 메소드 재정의 \r__7.5 final 클래스와 final 메소드 \r__7.6 protected 접근 제한자 \r__7.7 타입 변환과 다형성 \r__7.8 추상 클래스 \r CHAPTER 8 인터페이스\r__8.1 인터페이스의 역할 \r__8.2 인터페이스 선언 \r__8.3 인터페이스 구현 \r__8.4 인터페이스 사용 \r__8.5 타입 변환과 다형성 \r__8.6 인터페이스 상속 \r__8.7 디폴트 메소드와 인터페이스 확장 \r CHAPTER 9 중첩 클래스와 중첩 인터페이스\r__9.1 중첩 클래스와 중첩 인터페이스란? \r__9.2 중첩 클래스\r__9.3 중첩 클래스의 접근 제한 \r__9.4 중첩 인터페이스 \r__9.5 익명 객체 \r CHAPTER 10 예외 처리\r__10.1 예외와 예외 클래스 \r__10.2 실행 예외 \r__10.3 예외 처리 코드 \r__10.4 예외 종류에 따른 처리 코드\r__10.5 자동 리소스 닫기 \r__10.6 예외 떠넘기기 \r__10.7 사용자 정의 예외와 예외 발생 \r__10.8 예외 정보 얻기 \r CHAPTER 11 기본 API 클래스\r__11.1 자바 API 도큐먼트\r__11.2 java.lang과 java.util 패키지 \r__11.3 Object 클래스 \r__11.4 Objects 클래스 \r__11.5 System 클래스 \r__11.6 Class 클래스 \r__11.7 String 클래스 \r__11.8 StringTokenizer 클래스 \r__11.9 StringBuffer, StringBuilder 클래스 \r__11.10 정규 표현식과 Pattern 클래스 \r__11.11 Arrays 클래스 \r__11.12 Wrapper(포장) 클래스 \r__11.13 Math, Random 클래스\r__11.14 Date, Calendar 클래스 \r__11.15 Format 클래스\r__11.16 java.time 패키지 \r CHAPTER 12 멀티 스레드\r__12.1 멀티 스레드 개념 \r__12.2 작업 스레드 생성과 실행 \r__12.3 스레드 우선순위\r__12.4 동기화 메소드와 동기화 블록 \r__12.5 스레드 상태 \r__12.6 스레드 상태 제어 \r__12.7 데몬 스레드 \r__12.8 스레드 그룹 \r__12.9 스레드풀 \r CHAPTER 13 제네릭\r__13.1 왜 제네릭을 사용해야 하는가? \r__13.2 제네릭 타입(class〈T〉, interface〈T〉) \r__13.3 멀티 타입 파라미터(class〈K,V,...〉, interface〈K,V,...〉) \r__13.4 제네릭 메소드(〈T, R〉 R method(T t)) \r__13.5 제한된 타입 파라미터(〈T extends 최상위타입〉) \r__13.6 와일드카드 타입(〈?〉, 〈? extends ...〉, 〈? super ...〉) \r__13.7 제네릭 타입의 상속과 구현 \r CHAPTER 14 람다식\r__14.1 람다식이란?\r__14.2 람다식 기본 문법 \r__14.3 타겟 타입과 함수적 인터페이스 \r__14.4 클래스 멤버와 로컬 변수 사용\r__14.5 표준 API의 함수적 인터페이스 \r__14.6 메소드 참조 \r CHAPTER 15 컬렉션 프레임워크\r__15.1 컬렉션 프레임워크 소개\r__15.2 List 컬렉션 \r__15.3 Set 컬렉션 \r__15.4 Map 컬렉션 \r__15.5 검색 기능을 강화시킨 컬렉션 \r__15.6 LIFO와 FIFO 컬렉션 \r__15.7 동기화된 컬렉션 \r__15.8 병렬 처리를 위한 컬렉션 \r CHAPTER 16 스트림과 병렬 처리\r__16.1 스트림 소개 \r__16.2 스트림의 종류 \r__16.3 스트림 파이프라인 \r__16.4 필터링(distinct( ), filter( ))\r__16.5 매핑(flatMapXXX( ), mapXXX( ), asXXXStream( ), boxed( ))\r__16.6 정렬(sorted( ))\r__16.7 루핑(peek( ), forEach( ))\r__16.8 매칭(allMatch( ), anyMatch( ), noneMatch( ))\r__16.9 기본 집계(sum( ), count( ), average( ), max( ), min( ))\r__16.10 커스텀 집계(reduce( ))\r__16.11 수집(collect( ))\r__16.12 병렬 처리\r CHAPTER 17 JavaFX\r__17.1 JavaFX 개요\r__17.2 JavaFX 애플리케이션 개발 시작 \r__17.3 JavaFX 레이아웃 \r__17.4 JavaFX 컨테이너\r__17.5 JavaFX 이벤트 처리\r__17.6 JavaFX 속성 감시와 바인딩 \r__17.7 JavaFx 컨트롤 \r__17.8 JavaFX 메뉴바와 툴바 \r__17.9 JavaFX 다이얼로그 \r__17.10 JavaFX CSS 스타일 \r__17.11 JavaFX 스레드 동시성 \r__17.12 화면 이동과 애니메이션 \r CHAPTER 18 IO기반 입출력 및 네트워킹\r__18.1 IO 패키지 소개 \r__18.2 입력 스트림과 출력 스트림 \r__18.3 콘솔 입출력 \r__18.4 파일 입출력 \r__18.5 보조 스트림 \r__18.6 네트워크 기초 \r__18.7 TCP 네트워킹 \r__18.8 UDP 네트워킹 \r CHAPTER 19 NIO 기반 입출력 및 네트워킹\r__19.1 NIO 소개 \r__19.2 파일과 디렉토리 \r__19.3 버퍼 \r__19.4 파일 채널 \r__19.5 파일 비동기 채널 \r__19.6 TCP 블로킹 채널 \r__19.7 TCP 넌블로킹 채널 \r__19.8 TCP 비동기 채널 \r__19.9 UDP 채널\n",
        "isbn10": "8968481474",
        "isbn13": "9788968481475"
    },
    {
        "title": "러닝 자바스크립트 (ES6로 제대로 입문하는 모던 자바스크립트 웹 개발)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12181869",
        "image": "https://bookthumb-phinf.pstatic.net/cover/121/818/12181869.jpg?type=m1&udate=20190216",
        "author": "이선 브라운",
        "price": "28000",
        "discount": "25200",
        "publisher": "한빛미디어",
        "pubdate": "20170701",
        "isbn": "8968483388 9788968483387",
        "description": "ES6로 익히는 고품질 자바스크립트 입문에서 서버 개발까지이 책은 ES6를 포함하여 최신 자바스크립트 개발을 주도하는 언어 특징과 기술, 관련 도구, 패러다임을 포괄적으로 다룬다. 변수나 제어 흐름, 함수와 같은 단순하고 직관적인 주제뿐만 아니라, 비동기 프로그래밍이나 정규표현식 같은 복잡하고... ",
        "authorIntroContent": "\n이선 브라운\n저자 : 이선 브라운저자 이선 브라운(ETHAN BROWN)은 포틀랜드에 있는 인터랙티브 마케팅 에이전시인 팝 아트(POP ART) 선임 프로그래머. 팝 아트의 웹사이트 및 웹 서비스의 설계와 구현을 책임집니다. 그의 고객사는 소규모 비즈니스 업체부터 세계적 대기업까지 다양합니다. 임베디드부터 웹까지 20년 넘게 프로그래밍을 해왔으며, 자바스크립트 생태계가 웹 플랫폼의 미래가 될 거라고 확신하고 있습니다.역자 : 한선용역자 한선용은 웹 표준과 자바스크립트에 관심이 많은 번역가. 2008년부터 웹 관련 일을 했으며, ‘WCAG 2.0을 위한 일반적 테크닉’ 등의 문서를 번역해 웹에 올렸습니다. 번역서로 『파이썬으로 웹 크롤러 만들기』(2016), 『한 권으로 끝내는 NODE & EXPRESS』(2015), 『자바스크립트를 말하다』(2014), 『데이터 시각화를 위한 데이터 인사이트』(2014), 『모던 웹을 요리하는 초간편 HTML5COOKBOOK』(2012), 『HEAD FIRST JQUERY』(2012), 『JQUERY MOBILE』(2012), 『자바스크립트 성능최적화』(2011, 이상 한빛미디어), 『자바스크립트 프로그래밍』(2013), 『처음 배우는 JQUERY』(2012), 『에릭 마이어의 CSS 노하우』(2011, 이상 인사이트) 등이 있습니다.\n",
        "bookIntroContent": "ES6로 익히는 고품질 자바스크립트 입문에서 서버 개발까지이 책은 ES6를 포함하여 최신 자바스크립트 개발을 주도하는 언어 특징과 기술, 관련 도구, 패러다임을 포괄적으로 다룬다. 변수나 제어 흐름, 함수와 같은 단순하고 직관적인 주제뿐만 아니라, 비동기 프로그래밍이나 정규표현식 같은 복잡하고 난해한 개념에 이르기까지 폭넓은 범위를 커버한다.개발자는 프런트엔드와 백엔드 모두를 아우르는 더 강력하고 반응이 빠른 웹 앱을 만드는 방법을 배울 수 있다. 임베디드부터 웹까지 20년 넘게 프로그래밍해온 저자는 이 실용적인 책에서 ES6에 맞춰 고품질 웹 애플리케이션을 더 쉽고 만족스럽게 개발하는 방법을 제시한다.",
        "tableOfContentsContent": "\nCHAPTER 1 첫 번째 애플리케이션\r1.1 시작은 브라우저에서\r1.2 사용할 프로그램\r1.3 주석에 관해\r1.4 시작하기\r1.5 자바스크립트 콘솔\r1.6 제이쿼리\r1.7 단순한 그래픽 그리기\r1.8 반복적인 작업 자동화하기\r1.9 사용자 입력 처리하기\r1.10 Hello, World\r CHAPTER 2 자바스크립트 개발 도구\r2.1 ES6 사용하기\r2.2 ES6 기능\r__2.2.1 깃 설치\r__2.2.2 터미널\r__2.2.3 프로젝트 루트\r__2.2.4 깃과 버전 컨트롤\r__2.2.5 npm 패키지 관리\r__2.2.6 빌드 도구: 걸프와 그런트\r__2.2.7 프로젝트 구조\r2.3 트랜스컴파일러\r__2.3.1 바벨을 걸프와 함께 사용하기\r2.4 린트\r2.5 요약\r CHAPTER 3 리터럴과 변수, 상수, 데이터 타입\r3.1 변수와 상수\r3.2 변수와 상수 중 어떤 것을 써야 할까요?\r3.3 식별자 이름\r3.4 리터럴\r3.5 원시 타입과 객체\r3.6 숫자\r3.7 문자열\r__3.7.1 이스케이프\r3.8 특수문자\r__3.8.1 템플릿 문자열\r__3.8.2 여러 줄 문자열\r__3.8.3 숫자와 문자열\r3.9 불리언\r3.10 심볼\r3.11 null과 undefined\r3.12 객체\r3.13 Number, String, Boolean 객체\r3.14 배열\r3.15 객체와 배열 마지막의 쉼표 \r3.16 날짜\r3.17 정규 표현식\r3.18 맵과 셋\r3.19 데이터 타입 변환\r__3.19.1 숫자로 바꾸기\r__3.19.2 문자열로 변환\r__3.19.3 불리언으로 변환\r3.20 요약\r CHAPTER 4 제어문\r4.1 제어문의 기초\r__4.1.1 while 루프\r__4.1.2 블록 문\r__4.1.3 공백\r__4.1.4 보조 함수\r__4.1.5 if\r__4.1.6 do\r__4.1.7 for 루프\r__4.1.8 if 문\r__4.1.9 하나로 합치기\r4.2 자바스크립트의 제어문\r__4.2.1 제어문의 예외\r__4.2.2 if\r__4.2.3 메타 문법\r__4.2.4 for 루프의 다른 패턴\r__4.2.5 switch 문\r__4.2.6 for\r__4.2.7 for\r4.3 유용한 제어문 패턴\r__4.3.1 continue 문을 사용하여 조건 중첩 줄이기\r__4.3.2 break나 return 문을 써서 불필요한 연산 줄이기\r__4.3.3 루프를 완료한 뒤 인덱스 값 사용하기\r__4.3.4 배열을 수정할 때 감소하는 인덱스 사용하기\r4.4 요약\r CHAPTER 5 표현식과 연산자\r5.1 연산자\r5.2 산술 연산자\r5.3 연산자 우선순위\r5.4 비교 연산자\r5.5 숫자 비교\r5.6 문자열 병합\r5.7 논리 연산자\r__5.7.1 참 같은 값과 거짓 같은 값\r5.8 AND, OR, NOT\r__5.8.1 단축 평가\r__5.8.2 피연산자가 불리언이 아닐 때 논리 연산자가 동작하는 방법\r__5.8.3 조건 연산자\r__5.8.4 쉼표 연산자\r5.9 연산자 그룹\r__5.9.1 비트 연산자\r__5.9.2 typeof 연산자\r__5.9.3 void 연산자\r__5.9.4 할당 연산자\r5.10 해체 할당\r5.11 객체와 배열 연산자\r5.12 템플릿 문자열과 표현식\r5.13 표현식과 흐름 제어 패턴\r__5.13.1 if\r__5.13.2 if 문을 단축 평가하는 OR 표현식으로 바꾸기\r5.14 요약\r CHAPTER 6 함수\r6.1 반환 값\r6.2 호출과 참조\r6.3 함수와 매개변수\r__6.3.1 매개변수가 함수를 결정하는가?\r__6.3.2 매개변수 해체\r__6.3.3 매개변수 기본 값\r6.4 객체의 프로퍼티인 함수\r6.5 this 키워드\r6.6 함수 표현식과 익명 함수\r6.7 화살표 표기법\r6.8 call과 apply, bind\r6.9 요약\r CHAPTER 7 스코프\r7.1 스코프와 존재\r7.2 정적 스코프와 동적 스코프\r7.3 전역 스코프\r7.4 블록 스코프\r7.5 변수 숨기기\r7.6 함수, 클로저, 정적 스코프\r7.7 즉시 호출하는 함수 표현식\r7.8 함수 스코프와 호이스팅\r7.9 함수 호이스팅\r7.10 사각지대\r7.11 스트릭트 모드\r7.12 요약\r CHAPTER 8 배열과 배열 처리\r8.1 배열의 기초\r8.2 배열 요소 조작\r__8.2.1 배열의 처음이나 끝에서 요소 하나를 추가하거나 제거하기\r__8.2.2 배열의 끝에 여러 요소 추가하기\r__8.2.3 배열 일부 가져오기\r__8.2.4 임의의 위치에 요소 추가하거나 제거하기\r__8.2.5 배열 안에서 요소 교체하기\r__8.2.6 특정 값으로 배열 채우기\r__8.2.7 배열 정렬과 역순 정렬\r8.3 배열 검색\r8.4 map과 filter\r8.5 배열의 마법 reduce\r8.6 삭제되거나 정의되지 않은 요소들\r8.7 문자열 병합\r8.8 요약\r CHAPTER 9 객체와 객체 지향 프로그래밍\r9.1 프로퍼티 나열\r__9.1.1 for\r__9.1.2 Object.keys\r9.2 객체 지향 프로그래밍\r__9.2.1 클래스와 인스턴스 생성\r__9.2.2 클래스는 함수다\r__9.2.3 프로토타입\r__9.2.4 정적 메서드\r__9.2.5 상속\r__9.2.6 다형성\r__9.2.7 객체 프로퍼티 나열 다시 보기\r__9.2.8 문자열 표현\r9.3 다중 상속, 믹스인, 인터페이스\r9.4 요약\r CHAPTER 10 맵과 셋\r10.1 맵\r10.2 위크맵\r10.3 셋\r10.4 위크셋\r10.5 요약\r CHAPTER 11 예외와 에러 처리\r11.1 Error 객체\r11.2 try/catch와 예외 처리\r11.3 에러 일으키기\r11.4 예외 처리와 호출 스택\r11.5 try\r11.6 요약: 예외는 예외여야 한다\r CHAPTER 12 이터레이터와 제너레이터\r12.1 이터레이션 프로토콜\r12.2 제너레이터\r__12.2.1 yield 표현식과 양방향 통신\r__12.2.2 제너레이터와 return\r12.3 요약\r CHAPTER 13 함수와 추상적 사고\r13.1 서브루틴으로서의 함수\r13.2 값을 반환하는 서브루틴으로서의 함수\r13.3 함수로서의 함수\r13.4 그래서?\r__13.4.1 함수도 객체다\r13.5 IIFE와 비동기적 코드\r13.6 변수로서의 함수\r__13.6.1 배열 안의 함수\r__13.6.2 함수에 함수 전달\r__13.6.3 함수를 반환하는 함수\r13.7 재귀\r13.8 요약\r CHAPTER 14 비동기적 프로그래밍\r14.1 비유\r14.2 콜백\r__14.2.1 setInterval과 clearInterval\r__14.2.2 스코프와 비동기적 실행\r__14.2.3 오류 우선 콜백\r__14.2.4 콜백 헬\r14.3 프라미스\r__14.3.1 프라미스 만들기\r__14.3.2 프라미스 사용\r__14.3.3 이벤트\r__14.3.4 프라미스 체인\r__14.3.5 결정되지 않는 프라미스 방지하기\r14.4 제너레이터\r__14.4.1 1보 전진과 2보 후퇴?\r__14.4.2 제너레이터 실행기를 직접 만들지 마세요\r__14.4.3 제너레이터 실행기와 예외 처리\r14.5 요약\r CHAPTER 15 날짜와 시간\r15.1 날짜, 타임존, 타임스탬프, 유닉스 시간\r15.2 Date 객체 만들기\r15.3 Moment.js\r15.4 현실적인 자바스크립트 날짜 접근법\r15.5 날짜 데이터 만들기\r__15.5.1 서버에서 날짜 생성하기\r__15.5.2 브라우저에서 날짜 생성하기\r15.6 날짜 데이터 전송하기\r15.7 날짜 형식\r15.8 날짜 구성 요소\r15.9 날짜 비교\r15.10 날짜 연산\r15.11 사용자가 알기 쉬운 상대적 날짜\r15.12 요약\r CHAPTER 16 Math\r16.1 숫자 형식\r__16.1.1 고정 소수점\r__16.1.2 지수 표기법\r__16.1.3 고정 전체 자리수\r__16.1.4 다른 진수\r__16.1.5 고급 숫자 형식\r16.2 상수\r16.3 대수 함수\r__16.3.1 거듭제곱\r__16.3.2 로그 함수\r__16.3.3 기타 함수\r__16.3.4 의사 난수 생성\r16.4 삼각함수\r16.5 쌍곡선함수\r CHAPTER 17 정규 표현식\r17.1 부분 문자열 검색과 대체\r17.2 정규식 만들기\r17.3 정규식 검색\r17.4 정규식을 사용한 문자열 교체\r17.5 입력 소비\r17.6 대체\r17.7 HTML 찾기\r17.8 문자셋\r17.9 자주 쓰는 문자셋\r17.10 반복\r17.11 마침표와 이스케이프\r__17.11.1 진정한 와일드카드\r17.12 그룹\r17.13 소극적 일치, 적극적 일치\r17.14 역참조\r17.15 그룹 교체\r17.16 함수를 이용한 교체\r17.17 위치 지정\r17.18 단어 경계 일치\r17.19 룩어헤드\r17.20 동적으로 정규식 만들기\r17.21 요약\r CHAPTER 18 브라우저의 자바스크립트\r18.1 ES5와 ES6\r18.2 문서 객체 모델\r18.3 용어 사용\r18.4 get 메서드\r18.5 DOM 요소 쿼리\r18.6 DOM 요소 조작\r18.7 새 DOM 요소 만들기\r18.8 요소 스타일링\r18.9 데이터 속성\r18.10 이벤트\r__18.10.1 이벤트 버블링과 캡처링\r__18.10.2 이벤트 카테고리\r18.11 Ajax\r18.12 요약\r CHAPTER 19 제이쿼리\r19.1 맥가이버 나이프, 달러 기호\r19.2 제이쿼리 불러오기\r19.3 DOM 기다리기\r19.4 제이쿼리로 감싼 DOM 요소\r19.5 요소 조작\r19.6 제이쿼리 취소\r19.7 Ajax\r19.8 요약\r CHAPTER 20 노드\r20.1 노드의 기초\r20.2 모듈\r20.3 코어 모듈, 파일 모듈, npm 모듈\r20.4 함수 모듈을 통한 모듈 커스터마이징\r20.5 파일시스템 접근\r20.6 process\r20.7 운영체제 \r20.8 자식 프로세스\r20.9 스트림\r20.10 웹 서버\r20.11 요약\r CHAPTER 21 객체 프로퍼티 설정과 프락시\r21.1 접근자 프로퍼티 getter와 setter\r21.2 객체 프로퍼티 속성\r21.3 객체 보호: 동결, 봉인, 확장 금지\r21.4 프락시\r21.5 요약\r CHAPTER 22 추가 자원\r22.1 온라인 문서\r22.2 주기적 발행물\r22.3 블로그와 가이드\r22.4 스택 오버플로\r22.5 오픈 소스 프로젝트에 참가하기\r22.6 요약\r 부록 A 예약어 \r부록 B 연산자 우선순위\n",
        "isbn10": "8968483388",
        "isbn13": "9788968483387"
    },
    {
        "title": "자바 트러블슈팅 (scouter를 활용한 시스템 장애 진단 및 해결 노하우)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15918632",
        "image": "https://bookthumb-phinf.pstatic.net/cover/159/186/15918632.jpg?type=m1&udate=20191220",
        "author": "이상민",
        "price": "28000",
        "discount": "25200",
        "publisher": "제이펍",
        "pubdate": "20191227",
        "isbn": "1188621823 9791188621828",
        "description": "건강한 서비스를 위한 SCOUTER 활용법은 물론,\n그 밖의 시스템 장애 극복을 위한 다양한 도구 사용법을 배운다!\n\n기술이 아무리 발전하고 뛰어난 개발자가 있더라도 사람이 만든 프로그램은 언제든 장애가 발생할 수 있습니다. 그럼에도 상당수의 개발자나 시스템 운영자는 트러블슈팅에 대해 교육받을 기회가... ",
        "authorIntroContent": "\n이상민\n저자 : 이상민삼성SDS에서 개발을 시작하여 NAVER, NHN 등의 회사에서 일했다. 《자바의 신》, 《자바 성능 튜닝 이야기》 등 다수의 IT 서적을 집필하였다. 지금은 국내 최고의 스마트 통합 주차 회사인 파킹 클라우드에서 개발 총괄 이사로 일하고 있다.\n",
        "bookIntroContent": "건강한 서비스를 위한 SCOUTER 활용법은 물론,그 밖의 시스템 장애 극복을 위한 다양한 도구 사용법을 배운다!기술이 아무리 발전하고 뛰어난 개발자가 있더라도 사람이 만든 프로그램은 언제든 장애가 발생할 수 있습니다. 그럼에도 상당수의 개발자나 시스템 운영자는 트러블슈팅에 대해 교육받을 기회가 많지 않습니다. 그래서 빠르게 장애를 파악하고 분석하여 장애 상황을 피하고 재발을 방지하는 데 작은 도움이 되고자 이 책을 준비하였습니다.",
        "tableOfContentsContent": "\nPART I 자바에서 발생 가능한 문제들  CHAPTER 1 자바 기반의 시스템에서 발생할 수 있는 문제들 3\r어떤 문제가 발생할 수 있을까? 4\r시스템이 느려요 4\r시스템 응답이 없어요 6\r예외가 계속 발생해요 7\r시스템이 죽어요 8\r장애 상황을 종합해서 다시 살펴보자 9\r발생 가능한 병목 지점들 10\r정리하며 12\r PART II scouter 살펴보기  CHAPTER 2 scouter 개요 및 설치 15\rAPM 15\r다이나트레이스(dynatrace) 16\r앱다이나믹스(AppDynamics) 17\r뉴 레릭(New Relic) 17\r인스타나(instana) 17\r와탭(whatap) 17\r인터맥스(interMax) 18\r핀포인트(pinpoint) 19\rscouter 20\rscouter 구성 및 방화벽 설정 21\rscouter 데모 프로그램 설치하기 23\r정리하며 27\r CHAPTER 3 scouter 설정하기 - 서버 및 에이전트 28\rscouter 다운로드하기 28\rscouter 서버 설정하기 29\r한 대의 서버에서 여러 개의 수집 서버 실행하기 33\rscouter 호스트 에이전트 설정하기 35\rscouter 자바 에이전트 설정하기 - 기초 36\r자바의 ClassFileTransformer 38\rscouter 자바 에이전트 설정하기 - 데몬 모니터링하기 39\r정리하며 44\r CHAPTER 4 scouter 클라이언트에서 제공하는 기능들 45\rscouter 클라이언트의 종류 45\rscouter 클라이언트 시작하기 46\rObjects 창 살펴보기 46\r수집 서버 추가/삭제하기 48\r사용하지 않는 서버 제거하기 48\rscouter의 메뉴 49\rFile 49\rManagement 50\rCollector 51\rHost 52\rObject 53\rWindow 54\r그래프 추가하기 55\r필수 그래프 목록 57\rTomcat/Java 필수 그래프 목록 58\r서버 필수 그래프 목록 58\r그래프 확인법 59\r화면 전환하기 60\r서버 묶어서 보기 63\r정리하며 67\r CHAPTER 5 scouter XLog 68\rXLog 사용법 - 기초 68\rXLog 목록 71\rXLog 사용법 - 프로파일링 75\r메서드 프로파일링 추가하기 78\rXLog 사용법 - 필터링 81\rXLog 사용법 - 과거 데이터 불러오기 86\r정리하며 88\r CHAPTER 6 scouter 서버/에이전트 플러그인 89\r서버 플러그인의 종류 89\r빌트인 플러그인 90\r스크립팅 플러그인 91\r에이전트 플러그인의 종류 91\rhttpservice 플러그인 92\rcapture 플러그인 94\r정리하며 97\r CHAPTER 7 scouter 사용 시 유용한 팁 98\r수집 서버의 디스크 사용량 안전하게 관리하기 98\r알림 설정은 필수다 99\r샘플링도 필수다 101\r메서드 프로파일링도 필수다 103\r정리하며 104\r PART III 스레드 진단하기  CHAPTER 8 스레드 때문에(스레드에서) 발생하는 문제들 107\rWAS의 적절한 스레드 개수는 몇 개일까? 107\r스레드에서 발생하는 문제 중 가장 대표적인 것은? 108\r레이스 컨디션 109\r데드록 109\r스타베이션 110\r라이브 록 110\r다른 형태의 예측 불가능한 오류 111\r데드록 예제 111\r록 경합을 피하는 10 + 1가지 방법 113\r끝나지 않는 루프 116\r스레드 개수 문제에 대한 권장안 116\r정리하며 118\r CHAPTER 9 스레드 단면 잘라 놓기 119\r스레드 단면은 언제 자를까? 119\r스레드 단면이 뭐길래 120\r스레드 단면 해부하기 125\r가장 간편한 Ctrl+Break와 Kill -Quit 131\rjstack을 사용하는 방법도 있다 134\r스레드 단면 파일로 남기기 135\r정리하며 136\r chapter 10 잘라 놓은 스레드 단면 분석하기 137\rThreadLogic 준비하기 137\rThreadLogic 사용하기 - 스레드 목록 확인 139\rThreadLogic 사용하기 - 잠겨 있는 스레드 확인 142\rThreadLogic 사용하기 - 무한 루프나 응답 없는 화면 확인 145\rscouter를 사용한다면 스레드 목록 화면을 활용하자 148\rscouter를 사용한다면 Stack Frequency Analyzer도 활용하자 150\r정리하며 153\r CHAPTER 11 스레드 문제 Case Study 154\r스레드 단면으로 어떤 문제를 확인할 수 있을까? 154\r시스템이 느릴 때도 스레드와 관련이 있을까? 156\r시스템 응답이 없을 때에는 스레드 단면이 가장 효과적이다 157\r예외가 지속해서 발생할 때도 스레드 단면이 도움이 될까? 159\r사례 하나. CPU 사용량이 갑자기 올라가서 안 내려와요 160\r상황 160\r접근 방법 161\r사례 둘. 스레드 풀의 스레드 개수가 계속 증가해요 162\r상황 163\r접근 방법 163\r사례 셋. 시스템 응답이 없어요 165\r상황 165\r접근 방법 165\r정리하며 167\r PART IV 메모리 진단하기  CHAPTER 12 메모리 때문에 발생할 수 있는 문제들 171\r자바의 메모리 영역 171\rpc(program counter) 레지스터 172\rJVM 스택 172\r힙 172\r메서드 영역 172\r런타임 상수 풀 173\r네이티브 메서드 스택 173\rOutOfMemoryError는 언제 발생할까? 175\rOutOfMemoryError 메시지의 의미 176\r메모리 릭의 세 종류 178\r수평적 메모리 릭 179\r수직적 메모리 릭 179\r대각선 형태의 메모리 릭 179\rOutOfMemoryError 이외의 메모리 문제는 없을까? 180\r정리하며 181\r CHAPTER 13 메모리 단면 잘라 놓기 183\r메모리 단면은 언제 자르나? 183\rjmap으로 메모리 단면 생성하기 186\rjmap의 -dump 옵션 사용하기 190\r자동으로 힙 덤프 생성시키기 193\r정리하며 195\r CHAPTER 14 잘라 놓은 메모리 단면 분석하기 196\r메모리 단면을 분석하는 도구들 196\rMAT 준비하기 197\r간단한 프로그램의 메모리 릭 찾기 198\rMAT의 또 다른 기능들 201\rDetails 204\rBiggest Objects by Retained Size 204\rActions 204\rReports 206\rStep by Step 206\r객체 상세 정보 메뉴 207\r개발 PC의 메모리가 부족할 때 힙 덤프 분석하는 방법 210\rscouter를 사용하여 메모리 문제 진단하기 211\rGC 관련 211\r힙 관련 211\r정리하며 212\r CHAPTER 15 메모리 문제 Case Study 213\r메모리 단면으로 어떤 문제를 확인할 수 있을까? 213\r시스템이 느리다고 항상 메모리 단면을 사용하는 것은 아니다 214\r애플리케이션이 응답하지 않을 때도 메모리가 원인일 수 있다 215\r사례 하나. 자꾸만 시스템이 OOME를 발생시켜요 216\r상황 216\r접근 방법 216\r사례 둘. 시스템 응답이 없어요 218\r상황 218\r접근 방법 219\r정리하며 221\r PART V 자바 분석 도구  CHAPTER 16 자바 종합 분석 도구인 Arthas 225\rArthas란? 225\r아서스 사용하기 226\r아서스 주요 명령어들 228\rdashboard 229\rthread 230\rjvm 232\rsc/sm 234\rmonitor 235\rstack/trace 236\rtt 237\r정리하며 239\r PART VI 리눅스 진단하기  CHAPTER 17 리눅스 성능 진단 도구의 구성 243\r리눅스 진단 명령어를 알아야 하는 이유 243\r진단 도구 한눈에 살펴보기 244\r60,000밀리초에 리눅스 시스템 분석하기 245\ruptime 246\rdmesg | tail 247\rvmstat 1 247\rmpstat -P ALL 1 248\rpidstat 1 248\riostat -xz 1 248\rfree -m 249\rsar -n DEV 1 250\rsar -n TCP,ETCP 1 250\rtop 251\r정리하며 251\r CHAPTER 18 CPU 모니터링하기 252\r시스템의 CPU 사용량을 한 줄로 모니터링하는 도구들 252\r추가적인 시스템 모니터링 도구 설치하기 253\rmpstat의 기본적인 사용 방법 255\rmpstat의 옵션들 257\r왜 CPU를 모니터링해야 하는 걸까? 262\r정리하며 263\r CHAPTER 19 전반적인 상황 모니터링하기 - vmstat와 sar 264\r대부분의 유닉스와 리눅스에 설치되어 있는 vmstat 264\rvmstat의 기본적인 사용법 265\rvmstat의 옵션들 266\rvmstat 옵션에 따른 출력 예 267\rvmstat보다 상세한 정보를 알 수 있는 sar 273\rsar의 기본적인 사용 방법 275\rsar 명령어 옵션들 276\r정리하며 278\r CHAPTER 20 프로세스 상황 모니터링하기 279\r프로세스 모니터링하기 279\r프로세스 사이의 관계 알아보기 280\r누구나 알고 있는 ps 283\r프로세스별로 CPU 사용량 모니터링하기 286\r프로세스의 메모리 상황을 확인하는 pmap 288\r정리하며 291\r CHAPTER 21 I/O 상황 모니터링하기 292\rI/O를 모니터링하는 도구에는 어떤 것이 있을까? 292\r디스크의 사용량을 알아보자 293\riostat를 알아보자 298\r프로세스가 사용 중인 파일은 어떻게 확인할까? 302\r정리하며 306\r CHAPTER 22 네트워크 상황 모니터링하기 307\r네트워크 상황을 모니터링하는 도구에는 어떤 것이 있을까? 307\r네트워크를 사용하는 환경이 먼저 준비되어야 한다 308\rsar로 네트워크 사용량 확인하기 311\rlsof로 연결된 네트워크 정보 확인하기 317\r사라질 네트워크 명령어들 320\r정리하며 321\r CHAPTER 23 실시간으로 시스템 모니터링하기 322\r대부분의 리눅스에 설치되어 있는 top 322\rtop의 단축키들 325\rtop의 시작 옵션들 329\r보다 예쁘고 간편한 htop 331\r정리하며 334\r CHAPTER 24 scouter로 리소스 모니터링하기 335\rscouter 호스트 에이전트 확인 335\rscouter에서 제공하는 리소스 모니터링 종류 336\r실시간 프로세스 목록 확인하기 337\r소켓 정보 확인하기 338\r정리하며 339\r PART VII 장애 진단 종합  CHAPTER 25 장애 진단은 이렇게 한다 343\r진단 요청을 받았을 때(장애가 났을 때) 가장 먼저 할 일 343\r본격적인 진단 시작하기 345\r장애 원인 제거하고 결과 정리하기 348\rscouter를 사용한 장애 감지와 원인 파악 353\r상어 패턴 354\r파도 패턴 354\rㅡ ㅡ 패턴 355\r운석 낙하 패턴 356\r산불 패턴 357\r크리스마스트리 패턴 357\r정리하며 358\r APPENDIX 부록\rAPPENDIX A Fatal error log 분석 361 치명 에러 로그 파일 362\r헤더 섹션 362\r스레드 정보 섹션 367\r프로세스 정보 섹션 372\r시스템 정보 섹션 378\r치명 에러가 발생하면 뭐부터 봐야 할까? 379\r APPENDIX B 자바 인스트럭션 381 JVM 인스트럭션은 도대체 뭘까? 381\r 찾아보기 387\r\n",
        "isbn10": "1188621823",
        "isbn13": "9791188621828"
    },
    {
        "title": "자바 최적화 (Optimizing Java,가장 빠른 성능을 구현하는 검증된 10가지 기법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14796595",
        "image": "https://bookthumb-phinf.pstatic.net/cover/147/965/14796595.jpg?type=m1&udate=20190629",
        "author": "벤저민 J. 에번스|제임스 고프|크리스 뉴랜드",
        "price": "39000",
        "discount": "35100",
        "publisher": "한빛미디어",
        "pubdate": "20190429",
        "isbn": "1162241772 9791162241776",
        "description": "자바 애플리케이션 성능을 한 단계 높여줄 튜닝 이야기\n\n성능 튜닝은 실험과학이다. 추측과 구전 튜닝에 의존할 일이 아니다. 이 책은 복잡한 기술 스택을 다루는 중/고급 자바 개발자에게 정량적이고 검증 가능한 접근 방식으로 자바 애플리케이션 성능을 튜닝하는 방법을 알려준다.\n\n성능 튜닝은 원하는 결과를... ",
        "authorIntroContent": "\n벤저민 J. 에번스\n저자 : 벤저민 J. 에번스저자 : 벤저민 J. 에번스데브옵스 팀을 위한 성능 툴 개발사인 jClarity의 공동 창업자이자 기술 위원이다. 자바 커뮤니티 프로세스 집행 위원회에서 런던 자바 커뮤니티 대표로 활동하며 자바 생태계의 표준을제정하는 일을 했다. 자바 챔피언, 자바원 록스타인 그는 『The Well-Grounded JavaDeveloper』(매닝, 2012)를 공동 집필했고 자바 플랫폼, 동시성, 기타 관련된 주제로 강연을 계속해오고 있다.저자 : 제임스 고프자바 개발자 및 저자이다. 워릭 대학교에 다니던 중 처음 자바에 매료되어, 졸업 후 런던 자바 커뮤니티에 가입했고 그때부터 이 커뮤니티를 중심으로 수년간 JSR-310 설계/테스트를 담당하며 JCP 집행 위원회에서 활동해왔다. 콘퍼런스 상임 연사이기도 한 그는 현재 모건 스탠리에서 고객 응대 기술 구축에 매진하고 있으며, 세계 각지를 돌며 다양한 나라에서 오랫동안 자바, C++를 가르치고 있다.저자 : 크리스 뉴랜드자바 기술을 응용해 실시간 주식 데이터를 처리하는 ADVFN 사이트의 선임 자바 개발자다. 핫스팟 JVM 내부에서 이루어지는 JIT (적시) 컴파일 결정을 시각화하는 오픈 소스 로그분석기, JITWatch 프로젝트의 저작자다. 자바 챔피언인 그는 여러 콘퍼런스에서 JIT 컴파일 기술 강연을 한다.역자 : 이일웅13여 년 동안 자바/스칼라 개발자, 애플리케이션 아키텍트로 활동하며 엔터프라이즈 프로젝트 현장을 누벼온 야전형 정보 기술자이자, 한 여인과 두 딸의 사랑을 한 몸에 받고 사는 행복한 딸바보이다. 2014년 이후로 십수 권의 IT 전문서를 번역하며 동료, 후배 개발자들과 지식, 경험을 나누는 일에도 힘쓰고 있으며, 시간이 나면 피아노를 연주한다.\n",
        "bookIntroContent": "자바 애플리케이션 성능을 한 단계 높여줄 튜닝 이야기성능 튜닝은 실험과학이다. 추측과 구전 튜닝에 의존할 일이 아니다. 이 책은 복잡한 기술 스택을 다루는 중/고급 자바 개발자에게 정량적이고 검증 가능한 접근 방식으로 자바 애플리케이션 성능을 튜닝하는 방법을 알려준다.성능 튜닝은 원하는 결과를 정의하고 결정하는 과정이다. 자바 성능에 관한 대부분 자료는 자바 가상 머신 이론과 내부의 모습을 살펴보는 데 그치지만, 이 책은 레시피, 팁/트릭, 알고리즘 등 다양한 부문을 살펴보며 성능 튜닝의 실용적 측면을 이야기한다.",
        "tableOfContentsContent": "\nCHAPTER 1 성능과 최적화 1.1 자바 성능: 잘못된 방법\r1.2 자바 성능 개요\r1.3 성능은 실험과학이다\r1.4 성능 분류\r1.5 성능 그래프 읽기\r1.6 마치며\r CHAPTER 2 JVM 이야기 2.1 인터프리팅과 클래스로딩\r2.2 바이트코드 실행\r2.3 핫스팟 입문\r2.4 JVM 메모리 관리\r2.5 스레딩과 자바 메모리 모델(JMM)\r2.6 JVM 구현체 종류\r2.7 JVM 모니터링과 툴링\r2.8 마치며\r CHAPTER 3 하드웨어와 운영체제 3.1 최신 하드웨어 소개\r3.2 메모리\r3.3 최신 프로세서의 특성\r3.4 운영체제\r3.5 단순 시스템 모델\r3.6 기본 감지 전략\r3.7 가상화\r3.8 JVM과 운영체제\r3.9 마치며\r CHAPTER 4 성능 테스트 패턴 및 안티패턴 4.1 성능 테스트 유형\r4.2 기본 베스트 프랙티스\r4.3 성능 안티패턴 개요\r4.4 성능 안티패턴 카탈로그\r4.5 인지 편향과 성능 테스트\r4.6 마치며\r CHAPTER 5 마이크로벤치마킹과 통계 5.1 자바 성능 측정 기초\r5.2 JMH 소개\r5.3 JVM 성능 통계\r5.4 통계치 해석\r5.5 마치며\r CHAPTER 6 가비지 수집 기초 6.1 마크 앤 스위프\r6.2 핫스팟 런타임 개요\r6.3 할당과 수명\r6.4 핫스팟의 가비지 수집\r6.5 병렬 수집기\r6.6 할당의 역할\r6.7 마치며\r CHAPTER 7 가비지 수집 고급 7.1 트레이드오프와 탈착형 수집기\r7.2 동시 GC 이론\r7.3 CMS\r7.4 G1\r7.5 셰난도아\r7.6 C4(아줄 징)\r7.7 밸런스드(IBM J9)\r7.8 레거시 핫스팟 수집기\r7.9 마치며\r CHAPTER 8 GC 로깅, 모니터링, 튜닝, 툴 8.1 GC 로깅 개요\r8.2 로그 파싱 툴\r8.3 GC 기본 튜닝\r8.4 Parallel GC 튜닝\r8.5 CMS 튜닝\r8.6 G1 튜닝\r8.7 jHiccup\r8.8 마치며\r CHAPTER 9 JVM의 코드 실행 9.1 바이트코드 해석\r9.2 AOT와 JIT 컴파일\r9.3 핫스팟 JIT 기초\r9.4 코드 캐시\r9.5 간단한 JIT 튜닝법\r9.6 마치며\r CHAPTER 10 JIT 컴파일의 세계로 10.1 JITWatch란?\r10.2 JIT 컴파일 개요\r10.3 인라이닝\r10.4 루프 펼치기 \r10.5 탈출 분석\r10.6 단형성 디스패치\r10.7 인트린직\r10.8 온-스택 치환\r10.9 세이프포인트 복습\r10.10 코어 라이브러리 메서드\r10.11 마치며\r CHAPTER 11 자바 언어의 성능 향상 기법 11.1 컬렉션 최적화\r11.2 List 최적화\r11.3 Map 최적화\r11.4 Set 최적화\r11.5 도메인 객체 \r11.6 종료화 안 하기\r11.7 메서드 핸들 \r11.8 마치며\r CHAPTER 12 동시 성능 기법 12.1 병렬성이란?\r12.2 JMM의 이해\r12.3 동시성 라이브러리 구축\r12.4 동시 라이브러리 정리\r12.5 실행자와 태스크 추상화\r12.6 최신 자바 동시성\r12.7 마치며\r CHAPTER 13 프로파일링 13.1 프로파일링 개요\r13.2 샘플링과 세이프포인팅 편향\r13.3 개발자용 프로파일링 툴\r13.4 최신 프로파일러\r13.5 할당 프로파일링\r13.6 힙 덤프 분석\r13.7 마치며\r CHAPTER 14 고성능 로깅 및 메시징 14.1 로깅\r14.2 성능에 영향이 적은 로거 설계하기\r14.3 리얼 로직 라이브러리를 이용해 지연 줄이기\r14.4 마치며\r CHAPTER 15 자바 9와 미래 15.1 자바 9에서 소소하게 개선된 성능\r15.2 자바 10과 그 이후 버전\r15.3 자바 9 Unsafe 그 너머\r15.4 발할라 프로젝트와 값 타입\r15.5 그랄과 트러플\r15.6 바이트코드의 향후 발전 방향\r15.7 동시성의 향후 발전 방향\r15.8 마치며\n",
        "isbn10": "1162241772",
        "isbn13": "9791162241776"
    },
    {
        "title": "자바 ORM 표준 JPA 프로그래밍 (에이콘 오픈 소스 프로그래밍 시리즈,스프링 데이터 예제 프로젝트로 배우는 전자정부 표준 데이터베이스 프레임워크)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=9252528",
        "image": "https://bookthumb-phinf.pstatic.net/cover/092/525/09252528.jpg?type=m1&udate=20191001",
        "author": "김영한",
        "price": "43000",
        "discount": "38700",
        "publisher": "에이콘출판",
        "pubdate": "20150728",
        "isbn": "8960777331 9788960777330",
        "description": "자바 ORM 표준 JPA는 SQL 작성 없이 객체를 데이터베이스에 직접 저장할 수 있게 도와주고, 객체와 관계형 데이터베이스의 차이도 중간에서... 또한, 스프링 프레임워크와 JPA를 함께 사용하는 방법을 설명하고, 스프링 데이터 JPA, QUERYDSL 같은 혁신적인 오픈 소스를 활용해서 자바 웹... ",
        "authorIntroContent": "\n김영한\n저자 : 김영한저자 김영한은 SI에서 다양한 프로젝트를 수행하고, J2EE 강사와 다음 커뮤니케이션을 거쳐 현재 SK플래닛의 데이터 서비스 개발팀에서 근무하고 있다. 도메인 주도 설계에 관심이 많으며, 끊임없이 공부하고 더 나은 코드를 작성하는 개발자가 되려고 노력 중이다.\n",
        "bookIntroContent": "자바 ORM 표준 JPA는 SQL 작성 없이 객체를 데이터베이스에 직접 저장할 수 있게 도와주고, 객체와 관계형 데이터베이스의 차이도 중간에서 해결해준다. 이 책은 JPA 기초 이론과 핵심 원리, 그리고 실무에 필요한 성능 최적화 방법까지 JPA에 대한 모든 것을 다룬다. 또한, 스프링 프레임워크와 JPA를 함께 사용하는 방법을 설명하고, 스프링 데이터 JPA, QUERYDSL 같은 혁신적인 오픈 소스를 활용해서 자바 웹 애플리케이션을 효과적으로 개발하는 방법을 다룬다.다음 링크에서 온라인 강의를 수강할 수 있다.- 기본편: HTTPS://WWW.INFLEARN.COM/COURSE/ORM-JPA-BASIC- 활용편 1: HTTPS://WWW.INFLEARN.COM/COURSE/스프링부트-JPA-활용-1- 활용편 2: 준비 중입니다.",
        "tableOfContentsContent": "\n1장. JPA 소개\r1.1 SQL과 문제점\r1.1.1 반복, 반복 그리고 반복\r1.1.2 SQL에 의존적인 개발\r1.1.3 JPA와 문제 해결\r1.2 패러다임의 불일치\r1.2.1 상속\r1.2.2 연관관계\r1.2.3 객체 그래프 탐색\r1.2.4 비교\r1.2.5 정리\r1.3 JPA란 무엇일까?\r1.3.1 JPA 소개\r1.3.2 왜 JPA를 사용해야 하는가?\r1.4 정리\r 2장. JPA 시작\r2.1 이클립스 설치와 프로젝트 불러오기\r2.2 H2 데이터베이스 설치\r2.3 라이브러리와 프로젝트 구조\r2.3.1 메이븐과 사용 라이브러리 관리\r2.4 객체 매핑 시작\r2.5 persistence.xml 설정\r2.5.1 데이터베이스 방언\r2.6 애플리케이션 개발\r2.6.1 엔티티 매니저 설정\r2.6.2 트랜잭션 관리\r2.6.3 비즈니스 로직\r2.6.4 JPQL\r2.7 정리\r 3장. 영속성 관리\r3.1 엔티티 매니저 팩토리와 엔티티 매니저\r3.2 영속성 컨텍스트란?\r3.3 엔티티의 생명주기\r3.4 영속성 컨텍스트의 특징\r3.4.1 엔티티 조회\r3.4.2 엔티티 등록\r3.4.3 엔티티 수정\r3.4.4 엔티티 삭제\r3.5 플러시\r3.5.1 플러시 모드 옵션\r3.6 준영속\r3.6.1 엔티티를 준영속 상태로 전환: detach( )\r3.6.2 영속성 컨텍스트 초기화: clear( )\r3.6.3 영속성 컨텍스트 종료: close( )\r3.6.4 준영속 상태의 특징\r3.6.5 병합: merge( )\r3.7 정리\r 4장. 엔티티 매핑\r4.1 @Entity\r4.2 @Table\r4.3 다양한 매핑 사용\r4.4 데이터베이스 스키마 자동 생성\r4.5 DDL 생성 기능\r4.6 기본 키 매핑\r4.6.1 기본 키 직접 할당 전략\r4.6.2 IDENTITY 전략\r4.6.3 SEQUENCE 전략\r4.6.4 TABLE 전략\r4.6.5 AUTO 전략\r4.6.6 기본 키 매핑 정리\r4.7 필드와 컬럼 매핑: 레퍼런스\r4.7.1 @Column\r4.7.2 @Enumerated\r4.7.3 @Temporal\r4.7.4 @Lob\r4.7.5 @Transient\r4.7.6 @Access\r4.8 정리\r 실전 예제 1. 요구사항 분석과 기본 매핑\r요구사항 분석\r도메인 모델 분석\r테이블 설계\r엔티티 설계와 매핑\r데이터 중심 설계의 문제점\r 5장. 연관관계 매핑 기초\r5.1 단방향 연관관계\r5.1.1 순수한 객체 연관관계\r5.1.2 테이블 연관관계\r5.1.3 객체 관계 매핑\r5.1.4 @JoinColumn\r5.1.5 @ManyToOne\r5.2 연관관계 사용\r5.2.1 저장\r5.2.2 조회\r5.2.3 수정\r5.2.4 연관관계 제거\r5.2.5 연관된 엔티티 삭제\r5.3 양방향 연관관계\r5.3.1 양방향 연관관계 매핑\r5.3.2 일대다 컬렉션 조회\r5.4 연관관계의 주인\r5.4.1 양방향 매핑의 규칙: 연관관계의 주인\r5.4.2 연관관계의 주인은 외래 키가 있는 곳\r5.5 양방향 연관관계 저장\r5.6 양방향 연관관계의 주의점\r5.6.1 순수한 객체까지 고려한 양방향 연관관계\r5.6.2 연관관계 편의 메소드\r5.6.3 연관관계 편의 메소드 작성 시 주의사항\r5.7 정리\r 실전 예제 2. 연관관계 매핑 시작\r일대다, 다대일 연관관계 매핑\r객체 그래프 탐색\r 6장. 다양한 연관관계 매핑\r6.1 다대일\r6.1.1 다대일 단방향 [N:1]\r6.1.2 다대일 양방향 [N:1, 1:N]\r6.2 일대다\r6.2.1 일대다 단방향 [1:N]\r6.2.2 일대다 양방향 [1:N, N:1]\r6.3 일대일 [1:1]\r6.3.1 주 테이블에 외래 키\r6.3.2 대상 테이블에 외래 키\r6.4 다대다 [N:N]\r6.4.1 다대다: 단방향\r6.4.2 다대다: 양방향\r6.4.3 다대다: 매핑의 한계와 극복, 연결 엔티티 사용\r6.4.4 다대다: 새로운 기본 키 사용\r6.4.5 다대다 연관관계 정리\r6.5 정리\r 실전 예제 3. 다양한 연관관계 매핑\r일대일 매핑\r다대다 매핑\r 7장. 고급 매핑\r7.1 상속 관계 매핑\r7.1.1 조인 전략\r7.1.2 단일 테이블 전략\r7.1.3 구현 클래스마다 테이블 전략\r7.2 @MappedSuperclass\r7.3 복합 키와 식별 관계 매핑\r7.3.1 식별 관계 vs 비식별 관계\r7.3.2 복합 키: 비식별 관계 매핑\r7.3.3 복합 키: 식별 관계 매핑\r7.3.4 비식별 관계로 구현\r7.3.5 일대일 식별 관계\r7.3.6 식별, 비식별 관계의 장단점\r7.4 조인테이블\r7.4.1 일대일 조인테이블\r7.4.2 일대다 조인테이블\r7.4.3 다대일 조인테이블\r7.4.4 다대다 조인테이블\r7.5 엔티티 하나에 여러 테이블 매핑\r7.6 정리\r 실전 예제 4. 상속 관계 매핑\r상속 관계 매핑\r@MappedSuperclass 매핑\r 8장. 프록시와 연관관계 관리\r8.1 프록시\r8.1.1 프록시 기초\r8.1.2 프록시와 식별자\r8.1.3 프록시 확인\r8.2 즉시 로딩과 지연 로딩\r8.2.1 즉시 로딩\r8.2.2 지연 로딩\r8.2.3 즉시 로딩, 지연 로딩 정리\r8.3 지연 로딩 활용\r8.3.1 프록시와 컬렉션 래퍼\r8.3.2 JPA 기본 페치 전략\r8.3.3 컬렉션에 FetchType.EAGER 사용 시 주의점\r8.4 영속성 전이 - CASCADE\r8.4.1 영속성 전이: 저장\r8.4.2 영속성 전이: 삭제\r8.4.3 CASCADE의 종류\r8.5 고아 객체\r8.6 영속성 전이 + 고아 객체, 생명주기\r8.7 정리\r 실전 예제 5. 연관관계 관리\r글로벌 페치 전략 설정\r영속성 전이 설정\r 9장. 값 타입\r9.1 기본값 타입\r9.2 임베디드 타입(복합 값 타입)\r9.2.1 임베디드 타입과 테이블 매핑\r9.2.2 임베디드 타입과 연관관계\r9.2.3 @AttributeOverride: 속성 재정의\r9.2.4 임베디드 타입과 null\r9.3. 값 타입과 불변 객체\r9.3.1 값 타입 공유 참조\r9.3.2 값 타입 복사\r9.3.3 불변 객체\r9.4. 값 타입의 비교\r9.5. 값 타입 컬렉션\r9.5.1 값 타입 컬렉션 사용\r9.5.2 값 타입 컬렉션의 제약사항\r9.6 정리\r 실전 예제 6. 값 타입 매핑\r실전 예제 정리\r 10장. 객체지향 쿼리 언어\r10.1 객체지향 쿼리 소개\r10.1.1 JPQL 소개\r10.1.2 Criteria 쿼리 소개\r10.1.3 QueryDSL 소개\r10.1.4 네이티브 SQL 소개\r10.1.5 JDBC 직접 사용, 마이바티스 같은 SQL 매퍼 프레임워크 사용\r10.2 JPQL\r10.2.1 기본 문법과 쿼리 API\r10.2.2 파라미터 바인딩\r10.2.3 프로젝션\r10.2.4 페이징 API\r10.2.5 집합과 정렬\r10.2.6 JPQL 조인\r10.2.7 페치 조인\r10.2.8 경로 표현식\r10.2.9 서브 쿼리\r10.2.10 조건식\r10.2.11 다형성 쿼리\r10.2.12 사용자 정의 함수 호출(JPA 2.1)\r10.2.13 기타 정리\r10.2.14 엔티티 직접 사용\r10.2.15 Named 쿼리: 정적 쿼리\r10.3 Criteria\r10.3.1 Criteria 기초\r10.3.2 Criteria 쿼리 생성\r10.3.3 조회\r10.3.4 집합\r10.3.5 정렬\r10.3.6 조인\r10.3.7 서브 쿼리\r10.3.8 IN 식\r10.3.9 CASE 식\r10.3.10 파라미터 정의\r10.3.11 네이티브 함수 호출\r10.3.12 동적 쿼리\r10.3.13 함수 정리\r10.3.14 Criteria 메타 모델 API\r10.4 QueryDSL\r10.4.1 QueryDSL 설정\r10.4.2 시작\r10.4.3 검색 조건 쿼리\r10.4.4 결과 조회\r10.4.5 페이징과 정렬\r10.4.6 그룹\r10.4.7 조인\r10.4.8 서브 쿼리\r10.4.9 프로젝션과 결과 반환\r10.4.10 수정, 삭제 배치 쿼리\r10.4.11 동적 쿼리\r10.4.12 메소드 위임\r10.4.13 QueryDSL 정리\r10.5 네이티브 SQL\r10.5.1 네이티브 SQL 사용\r10.5.2 Named 네이티브 SQL\r10.5.3 네이티브 SQL XML 에 정의\r10.5.4 네이티브 SQL 정리\r10.5.5 스토어드 프로시저(JPA 2.1)\r10.6 객체지향 쿼리 심화\r10.6.1 벌크 연산\r10.6.2 영속성 컨텍스트와 JPQL\r10.6.3 JPQL과 플러시 모드\r10.7 정리\r 11장. 웹 애플리케이션 제작\r11.1 프로젝트 환경설정\r11.1.1 프로젝트 구조\r11.1.2 메이븐과 사용 라이브러리 관리\r11.1.3 스프링 프레임워크 설정\r11.2 도메인 모델과 테이블 설계\r11.2.1 요구사항 분석\r11.2.2 도메인 모델 설계\r11.2.3 테이블 설계\r11.2.4 연관관계 정리\r11.2.5 엔티티 클래스\r11.3 애플리케이션 구현\r11.3.1 개발 방법\r11.3.2 회원 기능\r11.3.3 상품 기능\r11.3.4 주문 기능\r11.3.5 웹 계층 구현\r11.4 정리\r 12장. 스프링 데이터 JPA\r12.1 스프링 데이터 JPA 소개\r12.1.1 스프링 데이터 프로젝트\r12.2 스프링 데이터 JPA 설정\r12.3 공통 인터페이스 기능\r12.4 쿼리 메소드 기능\r12.4.1 메소드 이름으로 쿼리 생성\r12.4.2 JPA NamedQuery\r12.4.3 @Query, 리파지토리 메소드에 쿼리 정의\r12.4.4 파라미터 바인딩\r12.4.5 벌크성 수정 쿼리\r12.4.6 반환 타입\r12.4.7 페이징과 정렬\r12.4.8 힌트\r12.4.9 Lock\r12.5 Specifications(명세)\r12.6 사용자 정의 리파지토리 구현\r12.7 Web 확장\r12.7.1 설정\r12.7.2 도메인 클래스 컨버터 기능\r12.7.3 페이징과 정렬 기능\r12.8 스프링 데이터 JPA가 사용하는 구현체\r12.9 JPA 샵에 적용\r12.9.1 환경 설정\r12.9.2 리파지토리 리팩토링\r12.9.3 명세 적용\r12.10 스프링 데이터 JPA와 QueryDSL 통합\r12.10.1 QueryDslPredicateExecutor 사용\r12.10.3 QueryDslRepositorySupport 사용\r12.11 정리\r 13장. 웹 애플리케이션과 영속성 관리\r13.1 트랜잭션 범위의 영속성 컨텍스트\r13.1.1 스프링 컨테이너의 기본 전략\r13.2 준영속 상태와 지연 로딩\r13.2.1 글로벌 페치 전략 수정\r13.2.2 JPQL 페치 조인\r13.2.3 강제로 초기화\r13.2.4 FACADE 계층 추가\r13.2.5 준영속 상태와 지연 로딩의 문제점\r13.3 OSIV\r13.3.1 과거 OSIV: 요청 당 트랜잭션\r13.3.2 스프링 OSIV: 비즈니스 계층 트랜잭션\r13.3.3 OSIV 정리\r13.4 너무 엄격한 계층\r13.5 정리\r 14장. 컬렉션과 부가 기능\r14.1 컬렉션\r14.1.1 JPA와 컬렉션\r14.1.2 Collection, List\r14.1.3 Set\r14.1.4 List + @OrderColumn\r14.1.5 @OrderBy\r14.2 @Converter\r14.2.1 글로벌 설정\r14.3 리스너\r14.3.1 이벤트 종류\r14.3.2 이벤트 적용 위치\r14.4 엔티티 그래프\r14.4.1 Named 엔티티 그래프\r14.4.2 em.find( )에서 엔티티 그래프 사용\r14.4.3 subgraph\r14.4.4 JPQL에서 엔티티 그래프 사용\r14.4.5 동적 엔티티 그래프\r14.4.6 엔티티 그래프 정리\r14.5 정리\r 15장. 고급 주제와 성능 최적화\r15.1 예외 처리\r15.1.1 JPA 표준 예외 정리\r15.1.2 스프링 프레임워크의 JPA 예외 변환\r15.1.3 스프링 프레임워크에 JPA 예외 변환기 적용\r15.1.4 트랜잭션 롤백 시 주의사항\r15.2 엔티티 비교\r15.2.1 영속성 컨텍스트가 같을 때 엔티티 비교\r15.2.2 영속성 컨텍스트가 다를 때 엔티티 비교\r15.3 프록시 심화 주제\r15.3.1 영속성 컨텍스트와 프록시\r15.3.2 프록시 타입 비교\r15.3.3 프록시 동등성 비교\r15.3.4 상속관계와 프록시\r15.4 성능 최적화\r15.4.1 N+1 문제\r15.4.2 읽기 전용 쿼리의 성능 최적화\r15.4.3 배치 처리\r15.4.4 SQL 쿼리 힌트 사용\r15.4.5 트랜잭션을 지원하는 쓰기 지연과 성능 최적화\r15.5 정리\r 16장. 트랜잭션과 락, 2차 캐시\r16.1 트랜잭션과 락\r16.1.1 트랜잭션과 격리 수준\r16.1.2 낙관적 락과 비관적 락 기초\r16.1.3 @Version\r16.1.4 JPA 락 사용\r16.1.5 JPA 낙관적 락\r16.1.6 JPA 비관적 락\r16.1.7 비관적 락과 타임아웃\r16.2 2차 캐시\r16.2.1 1차 캐시와 2차 캐시\r16.2.2 JPA 2차 캐시 기능\r16.2.3 하이버네이트와 EHCACHE 적용\r16.3 정리\r\n",
        "isbn10": "8960777331",
        "isbn13": "9788960777330"
    },
    {
        "title": "자바로 배우는 핵심 자료구조와 알고리즘 (기술 면접에 필요한 실용주의 자료구조와 알고리즘)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13648903",
        "image": "https://bookthumb-phinf.pstatic.net/cover/136/489/13648903.jpg?type=m1&udate=20190204",
        "author": "앨런 B. 다우니",
        "price": "16000",
        "discount": "14400",
        "publisher": "한빛미디어",
        "pubdate": "20180601",
        "isbn": "1162240849 9791162240847",
        "description": "자료구조와 알고리즘을 활용하여 간단한 웹 검색 엔진 만들기&#x0D;&#x0D;이 책은 컴퓨터과학을 공부하거나 기술 인터뷰를 준비하는 소프트웨어 개발자를 위한 실용적인 책입니다. 자료구조와 알고리즘을 빠르게 배울 수 있도록 실용적이고 중요한 부분을 중점으로 설명합니다. 자료구조가 어떻게... ",
        "authorIntroContent": "\n앨런 B. 다우니\n저자 : 앨런 B. 다우니저자 앨런 B. 다우니(Allen B. Downey)올린 공과대학교(Olin College of Engineering)의 컴퓨터공학과 교수로, 웰즐리 대학교(Wellesley College)와 콜비 대학교(Colby College), UC 버클리 대학교(UC Berkeley)에서 강의하였습니다. UC 버클리 대학교에서 컴퓨터공학 박사 학위를, MIT에서 석사와 학사 학위를 받았습니다. 이 책 외에도 『Think Stats』(2013), 『파이썬을 활용한 베이지안 통계』(2014, 이상 한빛미디어)를 집필하였습니다.역자 : 유동환역자 유동환책 쓰는 프로그래머. 연세대학교 정보대학원에서 경영정보학을 전공한 후 LG전자에 안드로이드 앱을 개발하였습니다. 최근에는 선행플랫폼개발팀으로 자리를 옮겨 차세대 모바일 기술 프로젝트를 진행하고 있습니다. 자바카페와 한국자바개발자협의회(JCO)의 초기 멤버로 수년간 활동하였습니다.집필한 책으로는 『안드로이드를 위한 Gradle』(2016)과 『RxJava 프로그래밍』(공저, 2017, 이상 한빛미디어)이 있고, 번역한 책으로는 『Professional Java Web Services』(2002, 정보문화사)와 『그레이들 레시피』(2016), 『Java 9 모듈 프로그래밍』(2018, 이상 한빛미디어)이 있습니다.\n",
        "bookIntroContent": "자료구조와 알고리즘을 활용하여 간단한 웹 검색 엔진 만들기\r 이 책은 컴퓨터과학을 공부하거나 기술 인터뷰를 준비하는 소프트웨어 개발자를 위한 실용적인 책입니다. 자료구조와 알고리즘을 빠르게 배울 수 있도록 실용적이고 중요한 부분을 중점으로 설명합니다. 자료구조가 어떻게 동작하는지보다 어떻게 활용하는지에 초점을 맞추었습니다. \r이 책은 웹 검색이라는 응용 분야에 집중합니다. 이 분야는 자료구조를 광범위하게 사용하며 자체로도 흥미롭고 중요합니다. 다른 책에서는 보기 어렵지만 기술 인터뷰에 필요한 내용입니다. 또한, 버전 관리와 유닛 테스트 같은 기본적인 소프트웨어 엔지니어링 실무 내용도 다룹니다. 장마다 배운 것을 확인할 수 있는 예제가 있고, 해답을 확인할 수 있는 자동화된 테스트도 제공합니다. \r 리스트와 맵 등의 자료구조 사용과 작동 방식 이해하기\r위키피디아 페이지를 읽고, 분석하고, 결과 데이터 트리를 탐색하는 응용 프로그램 작성하기\r코드를 분석하여 실행시간과 필요한 메모리양 예측하기\r해시 테이블과 이진 검색 트리를 사용하여 맵 인터페이스 구현하기\r크롤러로 웹 검색 엔진 구축하기",
        "tableOfContentsContent": "\nCHAPTER 1 인터페이스\r_1.1 리스트가 두 종류인 이유 \r_1.2 자바 interface \r_1.3 List interface \r_1.4 실습 1 \rCHAPTER 2 알고리즘 분석\r_2.1 선택 정렬 \r_2.2 빅오 표기법 \r_2.3 실습 2 \rCHAPTER 3 ArrayList 클래스\r_3.1 MyArrayList 메서드 분류하기 \r_3.2 add 메서드 분류하기 \r_3.3 문제 크기\r_3.4 연결 자료구조 \r_3.5 실습 3 \r_3.6 가비지 컬렉션 \rCHAPTER 4 LinkedList 클래스\r_4.1 MyLinkedList 메서드 분류하기 \r_4.2 MyArrayList와 MyLinkedList 비교하기 \r_4.3 프로파일 \r_4.4 결과 해석하기 \r_4.5 실습 4 \rCHAPTER 5 이중 연결 리스트 \r_5.1 성능 프로파일 결과 \r_5.2 LinkedList 메서드 프로파일하기 \r_5.3 LinkedList 끝에 더하기 \r_5.4 이중 연결 리스트 \r_5.5 자료구조 선택하기 \rCHAPTER 6 트리 순회\r_6.1 검색 엔진 \r_6.2 HTML 파싱하기 \r_6.3 jsoup 사용하기 \r_6.4 DOM 트리 반복하기 \r_6.5 깊이 우선 탐색 \r_6.6 스택 \r_6.7 반복적 DFS \rCHAPTER 7 철학으로 가는 길\r_7.1 시작하기 \r_7.2 Iterable과 Iterator \r_7.3 WikiFetcher \r_7.4 실습 5 \rCHAPTER 8 인덱서\r_8.1 자료구조 선택 \r_8.2 TermCounter \r_8.3 실습 6 \rCHAPTER 9 Map 인터페이스\r_9.1 MyLinearMap 구현하기 \r_9.2 실습 7 \r_9.3 MyLinearMap 분석하기 \rCHAPTER 10 해싱\r_10.1 해싱 \r_10.2 해싱의 동작 방식 \r_10.3 해싱과 변형 \r_10.4 실습 8 \rCHAPTER 11 HashMap 클래스\r_11.1 실습 9 \r_11.2 MyHashMap 분석하기 \r_11.3 트레이드오프 \r_11.4 MyHashMap 프로파일링 \r_11.5 MyHashMap 클래스 고치기 \r_11.6 UML 클래스 다이어그램 \rCHAPTER 12 TreeMap 클래스\r_12.1 해싱의 문제점 \r_12.2 이진 탐색 트리 \r_12.3 실습 10 \r_12.4 TreeMap 구현하기 \rCHAPTER 13 이진 탐색 트리\r_13.1 단순한 MyTreeMap 클래스 \r_13.2 값 탐색하기 \r_13.3 put 메서드 구현하기\r_13.4 중위 순회 \r_13.5 로그 시간 메서드 \r_13.6 자가 균형 트리 \r_13.7 추가 실습 \rCHAPTER 14 영속성\r_14.1 레디스 \r_14.2 레디스 클라이언트와 서버 \r_14.3 레디스 기반 인덱스 만들기 \r_14.4 레디스 데이터 타입 \r_14.5 실습 11 \r_14.6 추가 제안 \r_14.7 설계 힌트 \rCHAPTER 15 위키피디아 크롤링\r_15.1 레디스 기반의 인덱서 \r_15.2 조회 성능 분석 \r_15.3 인덱싱 성능 분석 \r_15.4 그래프 순회 \r_15.5 실습 12 \rCHAPTER 16 불리언 검색\r_16.1 크롤러 해답 \r_16.2 정보 검색 \r_16.3 불리언 검색 \r_16.4 실습 13 \r_16.5 Comparable과 Comparator \r_16.6 확장 \rCHAPTER 17 정렬\r_17.1 삽입 정렬 \r_17.2 실습 14\r_17.3 병합 정렬 분석 \r_17.4 기수 정렬 \r_17.5 힙 정렬 \r_17.6 제한된 힙 정렬 \r_17.7 공간 복잡도\n",
        "isbn10": "1162240849",
        "isbn13": "9791162240847"
    },
    {
        "title": "자바 기반의 마이크로서비스 이해와 아키텍처 구축하기 (스프링부트, 줄, 유레카, 터빈, 히스트릭스 대시보드, 서킷 브레이커, 도커 빌드 활용법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14068210",
        "image": "https://bookthumb-phinf.pstatic.net/cover/140/682/14068210.jpg?type=m1&udate=20181017",
        "author": "박성훈",
        "price": "22000",
        "discount": "19800",
        "publisher": "제이펍",
        "pubdate": "20181015",
        "isbn": "1188621416 9791188621415",
        "description": "마이크로서비스 아키텍처의 개념 이해와 구현을 위한 핵심 가이드!마이크로서비스, 도메인 주도 설계, 데브옵스, 자바, 스프링부트, 스프링클라우드, 도커 등 각각의 주제에 관한 이론 및 기술적인 내용을 다루는 훌륭한 책들은 많습니다만, 이들 간의 관계를 설명하고 기획에서 개발 및 배포까지 일련의... ",
        "authorIntroContent": "\n박성훈\n저자 : 박성훈삼성SDS에서 소프트웨어 아키텍트로 일하고 있다. KT, 삼성전자, 한국철도공사, 삼성인력개발원 등과의 다양한 프로젝트에 참여하였고, 사내 기술사 양성 멘토로도 활동 중이다. 현재는 MSA 진단 및 컨설팅에 주력하고 있으며, 도커나 블록체인(이오스, 이더리움)과 같은 최신 플랫폼 기술에도 관심이 많다.\n",
        "bookIntroContent": "마이크로서비스 아키텍처의 개념 이해와 구현을 위한 핵심 가이드!마이크로서비스, 도메인 주도 설계, 데브옵스, 자바, 스프링부트, 스프링클라우드, 도커 등 각각의 주제에 관한 이론 및 기술적인 내용을 다루는 훌륭한 책들은 많습니다만, 이들 간의 관계를 설명하고 기획에서 개발 및 배포까지 일련의 생명주기를 다루는 책은 흔치 않습니다. 그래서 마이크로서비스를 제대로 이해하고 아키텍처를 구축하는 과정을 보여주고자 이 책을 기획하였습니다.",
        "tableOfContentsContent": "\nCHAPTER 01 마이크로서비스 아키텍처의 이해\r1.1 소프트웨어 아키텍처의 이해 1\r소프트웨어 아키텍처란 무엇인가? 1\r1.2 마이크로서비스 아키텍처 13\r마이크로서비스 아키텍처의 이해 13\r서비스지향 아키텍처 15\r왜 마이크로서비스 아키텍처인가? 22\r CHAPTER 02 클라우드 네이티브의 이해\r2.1 클라우드 네이티브 26\r클라우드 네이티브 애플리케이션 26\r클라우드 네이티브 아키텍처 32\r클라우드 네이티브 인프라 35\r지속적 통합과 배포 37\r데브옵스 40\r2.2 컨테이너 42\r컨테이너 개념 42\r리눅스 컨테이너 45\r도커 컨테이너 47\r CHAPTER 03 마이크로서비스 이해와 기획\r3.1 마이크로서비스 이해 54\r마이크로서비스 개념 54\r3.2 마이크로서비스 기획 62\r마이크로서비스 식별 전략 63\r마이크로서비스를 위한 고려 사항 74\r CHAPTER 04 마이크로서비스 아키텍처 설계\r4.1 마이크로서비스 설계 81\r커피 전문점 서비스 이해 81\r커피 전문점 마이크로서비스 개념 설계 84\r커피 전문점 마이크로서비스 구조 설계 92\r4.2 마이크로서비스 아키텍처 설계 102\r마이크로서비스 아키텍처 구성 103\r서비스 구성 체계 109\r테스트 체계 113\r지속적 통합 및 배포체계 설계 116\r모니터링 체계 설계 118\r CHAPTER 05 마이크로서비스 구현\r5.1 마이크로서비스 구성 121\r개발 환경 구성 121\r커피 전문점 마이크로서비스 구성도 및 구성 요소 124\r5.2 마이크로서비스 구현 136\r커피 주문 마이크로서비스 구현 136\r회원 확인 마이크로서비스 구현 145\r CHAPTER 06 마이크로서비스 아키텍처 구축\r6.1 마이크로서비스 아키텍처 구성 155\r스프링 클라우드 아키텍처 참조 모델 155\r스프링 클라우드 아키텍처 구성 요소 157\r커피 전문점 마이크로서비스 아키텍처 구성도 및 구성 요소 157\r6.2 커피 전문점 마이크로서비스 아키텍처 구축 160\r설정 서버 160\r유레카 서버 163\r줄 서버 166\r터빈 서버 171\r히스트릭스 대시보드 서버 174\r CHAPTER 07 마이크로서비스 빌드 배포\r7.1 마이크로서비스 빌드 단위 181\r독립 프로젝트 182\r복수 프로젝트 183\r7.2 마이크로서비스 배포 형태 184\r실행 가능한 압축 파일 185\r도커 이미지 185\r7.3 소스 빌드 및 패키징 187\r‘jar’ 빌드 및 패키징 188\r‘war’ 빌드 및 패키징 192\r도커 이미지 빌드 및 패키징 196\r APPENDIX A 커피 전문점 서비스 요약 및 실행\rA.1 커피 전문점 서비스 개요 199\r커피 전문점 서비스 개념도 199\r커피 전문점 서비스 시스템 구성도 및 구성 요소 200\rA.2 커피 전문점 서비스 및 에코시스템 기동 202\r에코시스템 기동 202\r마이크로서비스 기동 205\r테스트 테이블 및 데이터 생성 206\rA.3 커피 전문점 마이크로서비스 실행 208\r커피 주문 208\r주문 처리 상태 확인 209\r에코시스템 조회 211\r 참고문헌 213\r찾아보기 215\r\n",
        "isbn10": "1188621416",
        "isbn13": "9791188621415"
    },
    {
        "title": "인사이드 자바스크립트 (핵심 개념과 원리를 정확하게 jQuery Node.js 클로저의 개념까지,Inside JavaScript)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7400243",
        "image": "https://bookthumb-phinf.pstatic.net/cover/074/002/07400243.jpg?type=m1&udate=20190707",
        "author": "송형주|고현준",
        "price": "18000",
        "discount": "16200",
        "publisher": "한빛미디어",
        "pubdate": "20140102",
        "isbn": "8968480656 9788968480652",
        "description": "이 책의 목적은 자바스크립트의 핵심 원리, 언어적 특성을 정확하고 알기 쉽게 설명하는 것이다. 물론 이 책이 자바스크립트의 모든 것을 다룬 바이블은 아니다. 그러나 자바스크립트를 제대로 공부하고자 하는 개발자에게 여러 자바스크립트 응용 기술들을 소화할 수 있는 기초 체력을 기를 수 있게 도와주는... ",
        "authorIntroContent": "\n송형주\n저자 : 송형주저자 송형주는 삼성전자를 거쳐 현재는 SKT 네트워크 기술원 DEVICE TECH.랩에서 디바이스 기반 서비스 플랫폼 개발 업무를 진행 중이다. 특히 안드로이드와 같은 모바일 소프트웨어 플랫폼의 설계 및 동작 원리에 관심이 많으며, 최근 들어서는 JAVASCRIPT나 NODE.JS와 같은 웹 기술의 매력을 알아 가고 있는 중이다. 틈틈이 쌓은 개발 관련 지식을 정리하고, 이를 책으로 엮어서 여러 개발자들과 공유하는 것에 소소한 재미를 느끼는 평범한 개발자이다. 저서로는 『인사이드 안드로이드』(위키북스, 2009)가 있다저자 : 고현준저자 고현준은 고려대학교 컴퓨터교육과 재학 중에 가우리 정보통신에서 병역특례를 마쳤다. 대학을 졸업하고 현재 삼성전자 소프트웨어센터에서 TIZEN 플랫폼의 GSTREAMER를 이용한 멀티미디어 프레임워크를 개발하고 있다. 자바스크립트는 취미로 시작해서 정보를 공유하고자 송형주 저자와 함께 블로그를 운영하게 되었고, 다양한 스프트웨어 개발과 관련된 경험과 정보에 대한 공유에 많은 관심을 가지고 있다.\n",
        "bookIntroContent": "이 책의 목적은 자바스크립트의 핵심 원리, 언어적 특성을 정확하고 알기 쉽게 설명하는 것이다. 물론 이 책이 자바스크립트의 모든 것을 다룬 바이블은 아니다. 그러나 자바스크립트를 제대로 공부하고자 하는 개발자에게 여러 자바스크립트 응용 기술들을 소화할 수 있는 기초 체력을 기를 수 있게 도와주는 좋은 가이드가 될 것이다.",
        "tableOfContentsContent": "\nCHAPTER 1 자바스크립트 기본 개요 __1.1 소개\r__1.2 자바스크립트 활용 범위\r____1.2.1 웹 개발\r____1.2.2 서버 개발\r____1.2.3 애플리케이션 개발\r__1.3 자바스크립트의 핵심 개념\r____1.3.1 객체\r____1.3.2 함수\r____1.3.3 프로토타입\r____1.3.4 실행 컨텍스트와 클로저\r__1.4 자바스크립트와 객체지향 프로그래밍\r__1.5 자바스크립트와 함수형 프로그래밍\r__1.6 자바스크립트의 단점\r CHAPTER 2 자바스크립트 개발 환경 __2.1 웹스톰 설치 및 실행\r__2.2 프로젝트 생성 및 프로그래밍 \r__2.3 테스트 및 디버깅 \r____2.3.1 테스트 \r____2.3.2 디버깅 \r CHAPTER 3 자바스크립트 데이터 타입과 연산자 __3.1 자바스크립트 기본 타입\r____3.1.1 숫자\r____3.1.2 문자열\r____3.1.3 불린값\r____3.1.4 null과 undefined\r__3.2 자바스크립트 참조 타입(객체 타입\r____3.2.1 객체 생성\r____3.2.2 객체 프로퍼티 읽기/쓰기/갱신\r____3.2.3 for in 문과 객체 프로퍼티 출력\r____3.2.4 객체 프로퍼티 삭제\r__3.3 참조 타입의 특성\r____3.3.1 객체 비교\r____3.3.2 참조에 의한 함수 호출 방식\r__3.4 프로토타입\r__3.5 배열\r____3.5.1 배열 리터럴\r____3.5.2 배열의 요소 생성\r____3.5.3 배열의 length 프로퍼티\r____3.5.4 배열과 객체\r____3.5.5 배열의 프로퍼티 동적 생성\r____3.5.6 배열의 프로퍼티 열거\r____3.5.7 배열 요소 삭제 \r____3.5.8 Array() 생성자 함수\r____3.5.9 유사 배열 객체\r__3.6 기본 타입과 표준 메서드\r__3.7 연산자\r____3.7.1 + 연산자\r____3.7.2 typeof 연산자\r__3.7.3 == (동등) 연산자와 === (일치) 연산자\r__3.7.4 !! 연산자\r CHAPTER 4 함수와 프로토타입 체이닝 __4.1 함수 정의\r____4.1.1 함수 리터럴\r____4.1.2 함수 선언문 방식으로 함수 생성하기\r____4.1.3 함수 표현식 방식으로 함수 생성하기\r____4.1.4 Function() 생성자 함수를 통한 함수 생성하기\r____4.1.5 함수 호이스팅\r__4.2 함수 객체: 함수도 객체다\r____4.2.1 자바스크립트에서는 함수도 객체다\r____4.2.2 자바스크립트에서 함수는 값으로 취급된다\r____4.2.3 함수 객체의 기본 프로퍼티\r__4.3 함수의 다양한 형태\r____4.3.1 콜백 함수\r____4.3.2 즉시 실행 함수\r____4.3.3 내부 함수\r____4.3.4 함수를 리턴하는 함수\r__4.4 함수 호출과 this\r____4.4.1 arguments 객체\r____4.4.2 호출 패턴과 this 바인딩\r____4.4.3 함수 리턴\r__4.5 프로토타입 체이닝\r____4.5.1 프로토타입의 두 가지 의미\r____4.5.2 객체 리터럴 방식으로 생성된 객체의 프로토타입 체이닝\r____4.5.3 생성자 함수로 생성된 객체의 프로토타입 체이닝\r____4.5.4 프로토타입 체이닝의 종점\r____4.5.5 기본 데이터 타입 확장\r____4.5.6 프로토타입도 자바스크립트 객체다\r____4.5.7 프로토타입 메서드와 this 바인딩\r____4.5.8 디폴트 프로토타입은 다른 객체로 변경이 가능하다\r____4.5.9 객체의 프로퍼티 읽기나 메서드를 실행할 때만 프로토타입 체이닝이 동작한다\r CHAPTER 5 실행 컨텍스트와 클로저 __5.1 실행 컨텍스트 개념\r__5.2 실행 컨텍스트 생성 과정 \r____5.2.1 활성 객체 생성 \r____5.2.2 arguments 객체 생성\r____5.2.3 스코프 정보 생성\r____5.2.4 변수 생성\r____5.2.5 this 바인딩\r____5.2.6 코드 실행\r__5.3 스코프 체인\r____5.3.1 전역 실행 컨텍스트의 스코프 체인\r____5.3.2 함수를 호출한 경우 생성되는 실행 컨텍스트의 스코프 체인\r__5.4 클로저\r____5.4.1 클로저의 개념\r____5.4.2 클로저의 활용\r____5.4.3 클로저를 활용할 때 주의사항\r CHAPTER 6 객체지향 프로그래밍 __6.1 클래스, 생성자, 메서드 \r__6.2 상속\r____6.2.1 프로토타입을 이용한 상속\r____6.2.2 클래스 기반의 상속\r__6.3 캡슐화\r__6.4 객체지향 프로그래밍 응용 예제\r____6.4.1 클래스의 기능을 가진 subClass 함수\r____6.4.2 subClass 함수와 모듈 패턴을 이용한 객체지향 프로그래밍\r CHAPTER 7 함수형 프로그래밍 __7.1 함수형 프로그래밍의 개념 \r__7.2 자바스크립트에서의 함수형 프로그래밍 \r____7.2.1 배열의 각 원소 총합 구하기\r____7.2.2 팩토리얼 \r____7.2.3 피보나치 수열\r__7.3 자바스크립트에서의 함수형 프로그래밍을 활용한 주요 함수\r____7.3.1 함수 적용\r____7.3.2 커링\r____7.3.3 bind \r____7.3.4 래퍼 \r____7.3.5 반복 함수\r CHAPTER 8 jQuery 소스 코드 분석 __8.1 jQuery 1.0 소스 코드 구조\r____8.1.1 jQuery 함수 객체\r____8.1.2 변수 $를 jQuery() 함수로 매핑 \r____8.1.3 jQuery.prototype 객체 변경\r____8.1.4 객체 확장 - extend() 메서드\r____8.1.5 jQuery 소스 코드의 기본 구성 요소\r__8.2 jQuery의 id 셀렉터 동작 분석\r____8.2.1 $(“#myDiv”) 살펴보기 \r____8.2.2 $(“#myDiv”).text() 살펴보기\r__8.3 jQuery 이벤트 핸들러 분석\r____8.3.1 jQuery 이벤트 처리 예제\r____8.3.2 .click() 메서드 정의\r____8.3.3 $(‘#clickDiv’).click() 호출 코드 분석\r____8.3.4 $(‘#clickDiv’).bind() 메서드 분석\r____8.3.5 Click 이벤트 핸들러 실행 과정\r____8.3.6 jQuery 이벤트 핸들러 특징\n",
        "isbn10": "8968480656",
        "isbn13": "9788968480652"
    },
    {
        "title": "스프링 부트로 배우는 자바 웹 개발 (서블릿부터 Spring Data JPA, Rest API, 액추에이터를 활용한 모니터링, 클라우드 서비스를 이용한 배포까지)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13735227",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/352/13735227.jpg?type=m1&udate=20200102",
        "author": "윤석진",
        "price": "27000",
        "discount": "24300",
        "publisher": "제이펍",
        "pubdate": "20180629",
        "isbn": "1188621270 9791188621279",
        "description": "자바 기반의 웹 서비스를 가장 쉽고 빠르게 배운다!\n\n시중에는 자바 웹 개발자를 위한 스프링과 JSP 관련 서적이 많이 나와 있긴 하지만, 입문자가 끝까지... 이 책은 독자들이 자바 기반의 웹 서비스를 만들거나 공부할 때 가장 쉽게 따라 할 수 있도록 집필되었습니다. 자바 웹 개발 환경에 대한 기초 설명과... ",
        "authorIntroContent": "\n윤석진\n현재 네이버에서 동영상 플랫폼 개발 업무를 담당하고 있으며, 백오피스 구축과 프레임워크 설계 및 개발에 관심이 많다. 저서로는 《엔터프라이즈 빌드 자동화를 위한 Gradle》(한빛미디어)이 있다. www.facebook.com/thecodinglive\n",
        "bookIntroContent": "자바 기반의 웹 서비스를 가장 쉽고 빠르게 배운다!시중에는 자바 웹 개발자를 위한 스프링과 JSP 관련 서적이 많이 나와 있긴 하지만, 입문자가 끝까지 따라 할 만한 책은 많지 않습니다. 이 책은 독자들이 자바 기반의 웹 서비스를 만들거나 공부할 때 가장 쉽게 따라 할 수 있도록 집필되었습니다. 자바 웹 개발 환경에 대한 기초 설명과 개발에 필요한 필수 기술을 다루며, 나아가 모니터링 및 헤로쿠를 이용한 클라우드 배포까지 웹 서비스에 필요한 전반적인 내용을 담고 있습니다.",
        "tableOfContentsContent": "\nCHAPTER 1 개발 환경의 변화와 자바 · 1\r1.1 인프라와 스프링 프레임워크의 변화 3\r1.1.1 아키텍처의 변화 3\r1.1.2 스프링 프레임워크의 변화 5\r1.2 웹 애플리케이션 컨테이너 6\r1.2.1 자바 개발을 위해 꼭 필요한 클래스 로더 6\r1.3 WAR 파일의 특성 8\r CHAPTER 2 서블릿 · 11\r2.1 서블릿 시작하기 13\r2.1.1 서블릿 설정 13\r2.2 서블릿 내부 동작 16\r2.2.1 서블릿의 생명주기 16\r2.3 서블릿 활용 20\r2.3.1 HTTP 요청과 응답 20\r2.3.2 멀티파트 24\r2.4 서블릿 관련 객체들 28\r2.4.1 필터 28\r2.4.2 쿠키 30\r2.4.3 세션 36\r2.5 디자인 패턴 활용 40\r2.5.1 Java EE 패턴 40\r2.5.2 프론트 컨트롤러 패턴 41\r CHAPTER 3 스프링 프레임워크 · 49\r3.1 빈 + 컨테이너 51\r3.2 IoC 패턴 활용 52\r3.2.1 인터페이스와 스프링 53\r3.2.2 스프링 XML 설정 56\r3.2.3 스프링 JavaConfig 설정 63\r3.3 스프링 MVC 69\r3.3.1 스프링 MVC 구조 69\r3.3.2 스프링 MVC 설정 70\r3.3.3 DispatcherServlet 설정 72\r3.3.4 컨트롤러와 뷰 73\r3.3.5 인터셉터 75\r CHAPTER 4 스프링 부트 웹 개발 · 81\r4.1 스프링 부트에 대한 이해 83\r4.1.1 스프링 부트의 프로젝트 레이아웃 83\r4.1.2 스프링 부트 실행하기 84\r4.2 정적 자원 관리 94\r4.2.1 정적 자원 기본 설정 94\r4.2.2 웹 리소스 폴더 설정 96\r4.3 템플릿 엔진 100\r4.3.1 타임리프 적용 101\r4.3.2 타임리프 속성 102\r4.4 WebJars를 이용한 프론트라이브러리 관리 108\r4.4.1 WebJars 적용 109\r4.4.2 인터셉터 활용 113\r CHAPTER 5 REST API 서버 만들기 · 117\r5.1 REST 119\r5.1.1 REST의 특성과 규칙 119\r5.2 리소스 121\r5.2.1 리소스의 구분 121\r5.3 REST API 만들기 122\r5.3.1 REST 컨트롤러 활용 122\r5.3.2 REST API에서 HTTP Method 사용 125\r5.3.3 스프링에서 URI 템플릿 활용 127\r5.4 HATEOS를 이용한 자기주소정보 표현 128\r5.4.1 HATEOS를 이용한 URI 정보 표현 129\r5.5 REST API 문서화 131\r5.5.1 swagger 설정 및 라이브러리 추가 131\r5.5.2 컨트롤러 URL 경로 설정 133\r5.5.3 HTTP 메서드별 확인 134\r5.5.4 파라미터 검증 136\r5.6 REST 클라이언트 개발 137\r5.6.1 RestTemplate 137\r5.6.2 UriComponentsBuilder 활용 139\r5.6.3 HTTP 메서드별 RestTemplate 메서드 명세 141\r CHAPTER 6 스프링 부트와 데이터 · 149\r6.1 데이터베이스 프로그래밍 151\r6.1.1 프로젝트 구성 151\r6.2 ORM 도구의 활용 152\r6.2.1 Spring Data JPA 153\r6.2.2 데이터베이스와 객체 매핑 156\r6.2.3 연관 관계 163\r6.3 QueryDSL을 이용한 Type Safe한 쿼리 작성 172\r6.3.1 QueryDSL 설정 172\r6.3.2 QueryDslRepositorySupport 활용 176\r6.4 쿼리 매퍼 182\r6.4.1 MyBatis 182\r6.4.2 MyBatis를 이용한 쿼리 실행 186\r6.4.3 명시적인 DataSource 지정 193\r6.5 데이터베이스 서버와 연동 195\r6.5.1 MariaDB 설치 195\r6.5.2 MariaDB client 도구를 이용한 서버 접속 197\r6.6 Database Connection pool 설정 199\r6.6.1 HikariCP 200\r6.6.2 MyBatis와 MariaDB 연동 205\r6.7 MyBatis의 고급 기능 활용 208\r6.7.1 selectKey 208\r6.7.2 동적 쿼리 태그 216\r CHAPTER 7 커스텀 스프링 부트 스타터 · 221\r7.1 어노테이션 223\r7.1.1 어노테이션 만들기 223\r7.1.2 스프링 부트 어노테이션 226\r7.2 스프링 부트의 구성 요소 238\r7.2.1 스프링 부트 모듈 238\r7.3 스프링 부트 스타터 만들기 243\r7.3.1 스타터 개발 환경 구축 244\r CHAPTER 8 예외 처리 및 테스트 · 249\r8.1 자바 예외 처리 251\r8.1.1 throw와 throws 구문 활용 251\r8.2 Validation 활용 253\r8.2.1 필드에 validation 적용 257\r8.3 예외 처리를 위한 ControllerAdvice 259\r8.3.1 Controller에 대한 예외 처리 259\r8.4 데이터베이스 예외 처리 264\r8.4.1 트랜잭션 264\r8.4.2 PlatformTransactionManager 265\r8.5 스프링 부트 테스트 269\r8.5.1 데이터베이스 연동 테스트 269\r8.5.2 통합 테스트 274\r CHAPTER 9 배포 · 281\r9.1 빌드 283\r9.1.1 Runnable JAR 283\r9.2 웹 서비스를 위한 배포 288\r9.2.1 클라우드 서비스에 배포 288\r CHAPTER 10 모니터링 · 299\r10.1 액추에이터 301\r10.1.1 액추에이터 적용 301\r10.1.2 지표 정보 활용 303\r10.1.3 기본 설정 변경 307\r10.2 JMX와 JConsole을 이용한 모니터링 308\r10.2.1 JConsole 308\r CHAPTER 11 캐시 · 311\r11.1 캐시의 유형 313\r11.1.1 위치에 따른 캐시 구분 313\r11.1.2 유형에 따른 구분 314\r11.1.3 캐시 데이터 저장 방식 314\r11.2 스프링 캐시 315\r11.2.1 캐시 적용을 위한 기본 예제 316\r11.2.2 스프링 캐시 활용 322\r11.3 Jcache 활용 328\r11.3.1 Jcache 구조 및 설정 329\r11.3.2 Jcache 객체 생성 및 실행 330\r11.4 Ehcache 활용 332\r11.4.1 Ehcache 설정 332\r11.4.2 Ehcache 사용 333\r11.4.3 커스텀 키 생성 및 적용 335\r CHAPTER 12 회원 관리 · 341\r12.1 스프링 시큐리티 343\r12.1.1 인증과 인가 343\r12.1.2 스프링 시큐리티 설정 345\r12.2 페이지 구성 348\r12.2.1 의존성 설정 348\r12.2.2 타임리프 레이아웃 구성 349\r12.3 회원가입 355\r12.3.1 접근 경로 설정 355\r12.3.2 사용자 정보와 회원가입 페이지 개발 356\r12.4 로그인 366\r12.4.1 회원정보 조회 366\r12.4.2 Remember Me 368\r APPENDIX A 인텔리제이를 이용한 예제 프로젝트 실행 방법 · 375\rA.1 개발 도구 활용 방법 377\rA.1.1 인텔리제이 설치 377\rA.1.2 기본 프로젝트 생성 378\rA.2 Lombok 및 Annotation processing 설정 382\r 찾아보기 386\n",
        "isbn10": "1188621270",
        "isbn13": "9791188621279"
    },
    {
        "title": "자바스크립트 코딩의 기술 (똑똑하게 코딩하는 법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15971893",
        "image": "https://bookthumb-phinf.pstatic.net/cover/159/718/15971893.jpg?type=m1&udate=20191223",
        "author": "조 모건",
        "price": "24000",
        "discount": "21600",
        "publisher": "길벗",
        "pubdate": "20191227",
        "isbn": "1165210207 9791165210205",
        "description": "모던 자바스크립트를 활용하여\n가독성, 표현력, 예측 가능성이 높은 코드를 작성하는 51가지 TIP!이 책의 목표는 두 가지다. 첫째, 모던 자바스크립트를 배운다. 둘째, 배운 문법으로 더 나은 코드를 작성한다. 두 가지 목표를 달성하기 위해서는 자바스크립트에 대한 깊은 이해가 반드시 필요하다. 그래서 이... ",
        "authorIntroContent": "\n조 모건\n저자 : 조 모건미국 캔자스주 로렌스(LAWRENCE, KANSAS)의 개발자입니다. 코드에 대해 전혀 아는 것이 없이 태어났지만, 태어난 이후 매일 조금이라도 배우기 위해 노력해왔습니다. 그는 자바스크립트의 오랜 팬으로서, 자바스크립트가 그 어느 때보다도 아름다워 자바스크립트 르네상스라고 불러도 좋을 만한 요즘을 매우 즐겁게 보내고 있습니다. 자바스크립트와 장인 정신에 대한 글을 쓰고 이야기하는 것을 좋아합니다.역자 : 곽현철NTS, 티몬에서 UI 개발자, 프런트엔드 개발자로 근무했고, 지금은 외국계 기업의 웹 서비스를 현지화하는 업무를 맡고 있습니다. 번역서로는 『리액트 교과서』, 『처음 시작하는 리액트』가 있습니다.\n",
        "bookIntroContent": "모던 자바스크립트를 활용하여가독성, 표현력, 예측 가능성이 높은 코드를 작성하는 51가지 TIP!이 책의 목표는 두 가지다. 첫째, 모던 자바스크립트를 배운다. 둘째, 배운 문법으로 더 나은 코드를 작성한다. 두 가지 목표를 달성하기 위해서는 자바스크립트에 대한 깊은 이해가 반드시 필요하다. 그래서 이 책은 영향이 크고 반복해서 사용할 핵심 문법 위주로 설명하면서, 모던 자바스크립트의 지향점을 이해하는 데 집중한다. 읽기 쉽고 작성하기 쉬운 자바스크립트 코드를 작성하는 51가지 TIP을 숙지하자.",
        "tableOfContentsContent": "\n1장 변수 할당으로 의도를 표현하라 __TIP 1 const로 변하지 않는 값을 표현하라\r__TIP 2 let과 const로 유효 범위 충돌을 줄여라 \r__TIP 3 블록 유효 범위 변수로 정보를 격리하라 \r__TIP 4 템플릿 리터럴로 변수를 읽을 수 있는 문자열로 변환하라 \r 2장 배열로 데이터 컬렉션을 관리하라  __TIP 5 배열로 유연한 컬렉션을 생성하라\r__TIP 6 Includes( )로 존재 여부를 확인하라 \r__TIP 7 펼침 연산자로 배열을 본떠라\r__TIP 8 push( ) 메서드 대신 펼침 연산자로 원본 변경을 피하라 \r__TIP 9 펼침 연산자로 정렬에 의한 혼란을 피하라\r 3장 특수한 컬렉션을 이용해 코드 명료성을 극대화하라 __TIP 10 객체를 이용해 정적인 키-값을 탐색하라\r__TIP 11 Object.assign( )으로 조작 없이 객체를 생성하라 \r__TIP 12 객체 펼침 연산자로 정보를 갱신하라 \r__TIP 13 맵으로 명확하게 키-값 데이터를 갱신하라 \r__TIP 14 맵과 펼침 연산자로 키-값 데이터를 순회하라 \r__TIP 15 맵 생성 시 부수 효과를 피하라 \r__TIP 16 세트를 이용해 고윳값을 관리하라 \r 4장 조건문을 깔끔하게 작성하라 __TIP 17 거짓 값이 있는 조건문을 축약하라 \r__TIP 18 삼항 연산자로 빠르게 데이터를 확인하라 \r__TIP 19 단락 평가를 이용해 효율성을 극대화하라 \r 5장 반복문을 단순하게 만들어라 __TIP 20 화살표 함수로 반복문을 단순하게 만들어라 \r__TIP 21 배열 메서드로 반복문을 짧게 작성하라\r__TIP 22 map( ) 메서드로 비슷한 길이의 배열을 생성하라 \r__TIP 23 filter( )와 find( )로 데이터의 부분집합을 생성하라\r__TIP 24 forEach( )로 동일한 동작을 적용하라\r__TIP 25 체이닝으로 메서드를 연결하라 \r__TIP 26 reduce( )로 배열 데이터를 변환하라 \r__TIP 27 for...in 문과 for...of 문으로 반복문을 정리하라 \r 6장 매개변수와 return 문을 정리하라 __TIP 28 매개변수 기본값을 생성하라 \r__TIP 29 해체 할당으로 객체 속성에 접근하라 \r__TIP 30 키-값 할당을 단순화하라 \r__TIP 31 나머지 매개변수로 여러 개의 인수를 변수로 전달하라 \r 7장 유연한 함수를 만들어라 __TIP 32 테스트하기 쉬운 함수를 작성하라 \r__TIP 33 화살표 함수로 복잡도를 낮춰라\r__TIP 34 부분 적용 함수로 단일 책임 매개변수를 관리하라\r__TIP 35 커링과 배열 메서드를 조합한 부분 적용 함수를 사용하라\r__TIP 36 화살표 함수로 문맥 혼동을 피하라 \r 8장 클래스로 인터페이스를 간결하게 유지하라 __TIP 37 읽기 쉬운 클래스를 만들어라 \r__TIP 38 상속으로 메서드를 공유하라\r__TIP 39 클래스로 기존의 프로토타입을 확장하라 \r__TIP 40 get과 set으로 인터페이스를 단순하게 만들어라 \r__TIP 41 제너레이터로 이터러블 속성을 생성하라\r__TIP 42 bind( )로 문맥 문제를 해결하라\r 9장 외부 데이터에 접근하라 __TIP 43 프라미스를 이용해 비동기적으로 데이터를 가져오라 \r__TIP 44 async/await로 함수를 명료하게 생성하라 \r__TIP 45 fetch로 간단한 AJAX 호출을 처리하라 \r__TIP 46 localStorage로 상태를 장기간 유지하라 \r 10장 컴포넌트 아키텍처를 이용해 관련 파일을 모아라  __TIP 47 가져오기와 내보내기로 기능을 분리하라\r__TIP 48 npm으로 커뮤니티 코드를 끌어와라\r__TIP 49 컴포넌트 아키텍처를 이용해 애플리케이션을 만들어라 \r__TIP 50 빌드 도구를 이용해 컴포넌트를 결합하라 \r__TIP 51 CSS 애니메이션을 활용하라\r 참고문헌\r찾아보기 \r\n",
        "isbn10": "1165210207",
        "isbn13": "9791165210205"
    },
    {
        "title": "명품 자바 에센셜 (자바 프로그래밍에 빠져들게 하는 재미있고 쉬운 해설서)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13845094",
        "image": "https://bookthumb-phinf.pstatic.net/cover/138/450/13845094.jpg?type=m1&udate=20180818",
        "author": "황기태",
        "price": "28000",
        "discount": "25200",
        "publisher": "생능출판사",
        "pubdate": "20180810",
        "isbn": "8970509569 9788970509563",
        "description": "자바 프로그래밍에 빠져들게 하는 재미있고 쉬운 해설서명품 자바 에센셜은 한 학기에 자바의 기초를 습득할 수 있도록 작성된 책이다. 자바 언어에 대한 쉬운 설명과 의미 있는 예제를 도입하여 이론이 프로그래밍으로 이어지게 하고, 이해도 높은 삽화와 그림으로 본문에 쉽게 몰입할 수 있도록 하였다.... ",
        "authorIntroContent": "\n황기태\n저자 : 황기태저자 황기태현 한성대학교 컴퓨터공학부 교수서울대학교 컴퓨터공학과 박사서울대학교 컴퓨터공학과 석사서울대학교 컴퓨터공학과 학사비트교육센터 센터장IBM WATSON RESEARCH CENTER 방문 연구원UNIVERSITY OF CALIFORNIA, IRVINE 방문 교수UNIVERSITY OF FLORIDA 방문 교수저서비트프로젝트1, 2(1994, 비아이티출판)어드밴스 윈도우 NT(1996, 대림출판사)자바스크립트 웹프로그래밍(2000, 대림출판사)DHTML+자바스크립트(2003, 대림출판사)명품 HTLM5+CSS3+JAVASCRIPT 웹 프로그래밍(수정판, 2018, (주)생능출판사)명품 C++ PROGRAMMING(개정판, 2018, (주)생능출판사)명품 JAVA PROGRAMMING(개정4판, 2018, (주)생능출판사)\n",
        "bookIntroContent": "자바 프로그래밍에 빠져들게 하는 재미있고 쉬운 해설서명품 자바 에센셜은 한 학기에 자바의 기초를 습득할 수 있도록 작성된 책이다. 자바 언어에 대한 쉬운 설명과 의미 있는 예제를 도입하여 이론이 프로그래밍으로 이어지게 하고, 이해도 높은 삽화와 그림으로 본문에 쉽게 몰입할 수 있도록 하였다. 그러므로 이 책은 소프트웨어 전공 학생 뿐 아니라, 공학의 비전공 학생들이나, 짧은 시간에 자바 프로그래밍의 핵심을 쉽게 이해하고 프로그래밍 기초를 확립하고자 하는 다양한 부류의 학습자들에게 적합하다.",
        "tableOfContentsContent": "\nchapter 01자바 시작\r1.1 컴퓨터와 프로그래밍\r1.2 자바의 출현과 WORA\r1.3 개발 도구와 자바 플랫폼\r1.4 자바 프로그램 개발 과정\r1.5 이클립스를 이용한 자바 프로그램 개발\r1.6 자바 응용프로그램의 종류\r1.7 자바의 특징\r요약\rOpen Challenge\r연습문제\r chapter 02자바 기본 프로그래밍\r2.1 자바 프로그램의 구조\r2.2 식별자\r2.3 자바의 데이터 타입\r2.4 자바의 키 입력\r2.5 연산자\r2.6 조건문\r요약\rOpen Challenge\r연습문제\r chapter 03반복문과 배열 그리고 예외 처리\r3.1 반복문\r3.2 continue 문과 break 문\r3.3 자바의 배열\r3.4 다차원 배열\r3.5 메소드의 배열 리턴\r3.6 자바의 예외 처리\r요약\rOpen Challenge\r연습문제\r chapter 04클래스와 객체\r4.1 객체 지향과 자바\r4.2 자바 클래스 만들기\r4.3 생성자\r4.4 객체 배열\r4.5 메소드 활용과 객체 치환\r4.6 객체의 소멸과 가비지 컬렉션\r4.7 접근 지정자\r4.8 static 멤버\r4.9 final\r요약\rOpen Challenge\r연습문제\r chapter 05상속\r5.1 상속의 개념\r5.2 클래스 상속과 객체\r5.3 protected 접근 지정\r5.4 상속과 생성자\r5.5 업캐스팅과 instanceof 연산자\r5.6 메소드 오버라이딩\r5.7 추상 클래스\r5.8 인터페이스\r요약\rOpen Challenge\r연습문제\r chapter 06모듈과 패키지 개념, 자바 패키지 활용\r6.1 패키지\r6.2 패키지 만들기\r6.3 모듈 개념\r6.4 자바 JDK에서 제공하는 패키지\r6.5 Object 클래스\r6.6 Wrapper 클래스\r6.7 String과 StringBuffer 클래스\r6.8 StringTokenizer 클래스\r6.9 Math 클래스\r요약\rOpen Challenge\r연습문제\r chapter 07컬렉션과 제네릭\r7.1 컬렉션과 제네릭 개념\r7.2 제네릭 컬렉션 활용\r7.3 제네릭 만들기\r요약\rOpen Challenge\r연습문제\r chapter 08자바 GUI 스윙 기초\r8.1 자바의 GUI\r8.2 자바 GUI 패키지\r8.3 스윙 GUI 프로그램 만들기\r8.4 컨테이너(Container)와 배치(Layout)\r8.5 FlowLayout 배치관리자\r8.6 BorderLayout 배치관리자\r8.7 GridLayout 배치관리자\r8.8 배치관리자 없는 컨테이너\r요약\rOpen Challenge\r연습문제\r chapter 09자바의 이벤트 처리\r9.1 이벤트 기반 GUI 프로그래밍\r9.2 이벤트 객체\r9.3 사용자 이벤트 리스너 작성\r9.4 어댑터(Adapter) 클래스\r9.5 Key 이벤트와 KeyListener\r9.6 Mouse 이벤트와 MouseListener, MouseMotionListener\r요약\rOpen Challenge\r연습문제\r chapter 10스윙 컴포넌트 활용\r10.1 스윙 컴포넌트 소개\r10.2 JLabel로 문자열과 이미지 출력\r10.3 JButton으로 버튼 만들기\r10.4 JCheckBox로 체크박스 만들기\r10.5 JRadioButton으로 라디오버튼 만들기\r10.6 JTextField로 한 줄 입력 창 만들기\r10.7 JTextArea로 여러 줄의 입력 창 만들기\r10.8 JListE로 리스트 만들기\r10.9 JComboBoxE로 콤보박스 만들기\r10.10 메뉴 만들기\r10.11 팝업 다이얼로그\r요약\rOpen Challenge\r연습문제\r chapter 11그래픽\r11.1 스윙 컴포넌트 그리기\r11.2 Graphics\r11.3 도형 그리기와 칠하기\r11.4 이미지 그리기\r11.5 repaint()와 그래픽 응용\r요약\rOpen Challenge\r연습문제\r chapter 12자바 스레드 기초\r12.1 멀티태스킹\r12.2 자바 스레드 만들기\r12.3 스레드 종료\r12.4 스레드 동기화\r요약\rOpen Challenge\r연습문제\r chapter 13입출력 스트림과 파일 입출력\r13.1 자바의 입출력 스트림\r13.2 문자 스트림과 텍스트 파일 입출력\r13.3 바이트 스트림과 바이너리 파일 입출력\r13.4 File 클래스\r13.5 파일 복사 응용프로그램 작성\r요약\rOpen Challenge\r연습문제\r chapter 14자바 소켓 프로그래밍\r14.1 TCP/IP 기초\r14.2 소켓 프로그래밍\r14.3 서버-클라이언트 채팅 프로그램 만들기\r14.4 수식 계산 서버-클라이언트 만들기 실습\r요약\rOpen Challenge\r연습문제\r CHECK TIME 정답\n",
        "isbn10": "8970509569",
        "isbn13": "9788970509563"
    },
    {
        "title": "함수형 자바스크립트 프로그래밍",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12800140",
        "image": "https://bookthumb-phinf.pstatic.net/cover/128/001/12800140.jpg?type=m1&udate=20171125",
        "author": "유인동",
        "price": "29000",
        "discount": "26100",
        "publisher": "인사이트",
        "pubdate": "20171124",
        "isbn": "8966262120 9788966262120",
        "description": "실무 밀착형, 함수형 자바스크립트 프로그래밍 가이드!『함수형 자바스크립트 프로그래밍』은 자바스크립트에서 함수형 패러다임을 통해 보다 효율적인 코드를 만들고자 하는 개발자를 위한 실무 밀착형 가이드다. 익숙한 개발 방식에서 벗어나 기존 코드를 어떻게 함수형으로 바꿀 수 있는지를... ",
        "authorIntroContent": "\n유인동\n저자 : 유인동저자 유인동은 마켓프레스에서 커스텀 티셔츠 서비스 마플(HTTP://WWW.MARPPLE.COM)을 만들고 있다. 마켓프레스에서는 HTML, CSS, JAVASCRIPT, NODE.JS, POSTGRESQL, AWS를 주로 다루고 있다. 어쿠스틱코드, 카카오, 엔씨소프트 오픈마루 스튜디오, 시도우, 하자센터에서 웹 서비스, 아이폰 앱, 안드로이드 앱 등을 개발했다. OBJECTIVE-C와 IOS SDK, JAVA와 ANDROID SDK의 매력에 빠져 객체지향 프로그래밍을 파고들다가, 지금은 함수형 프로그래밍의 매력에 빠져 있다. 다양한 기술과 언어들을 탐구하는 것을 좋아하고 최근에는 함수형 자바스크립트 라이브러리인 PARTIAL.JS를 만들었다.\n",
        "bookIntroContent": "실무 밀착형, 함수형 자바스크립트 프로그래밍 가이드!『함수형 자바스크립트 프로그래밍』은 자바스크립트에서 함수형 패러다임을 통해 보다 효율적인 코드를 만들고자 하는 개발자를 위한 실무 밀착형 가이드다. 익숙한 개발 방식에서 벗어나 기존 코드를 어떻게 함수형으로 바꿀 수 있는지를 보여주면서 독자에게 ‘함수형 패러다임’이 적용된 코딩 스타일과 콘셉트를 전달한다.이 책은 함수형 자바스크립트 프로그래밍을 위한 문법과 개념을 단순히 소개하지 않는다. 책 전반에 걸쳐 함수의 응용을 매우 깊이 다루며, 실용적인 접근을 항상 함께한다. 우선 함수형 패러다임을 잘 보여주는 라이브러리인 UNDERSCORE.JS를 직접 구현해 보면서 함수적인 기법들이 얼마나 유용한지를 몸소 느낄 수 있도록 한다. 또한 함수형 프로그래밍의 완성도를 높이기 위해 저자가 직접 개발한 PARTIAL.JS 라이브러리를 통해 함수의 조합, 연속성, 순수 함수, 고차 함수, 불변성, 비동기, 동시성 등을 설명해서 보다 ‘개발자스럽게’ 함수형 자바스크립트 프로그래밍에 접근한다. 이 책은 가독성을 높이기 위해 코드 부분을 컬러로 제작했으며, 보다 나은 학습 환경을 제공하기 위해 책과 함께 보면 좋은 동영상 강의를 인프런을 통해 제공한다(HTTPS://WWW.INFLEARN.COM/COURSE/함수형-프로그래밍/). 책에 실린 모든 예제 코드는 책의 깃허브(HTTPS://GITHUB.COM/INDONGYOO/FUNCTIONAL-JAVASCRIPT/)를 통해 확인할 수 있다.",
        "tableOfContentsContent": "\n1장 함수형 자바스크립트 소개 \r__1.1 함수형 프로그래밍 그거 먹는 건가요? \r____1.1.1 함수형 자바스크립트를 검색하면 나오는 예제 \r____1.1.2 값으로써의 함수와 클로저 \r__1.2 함수형 자바스크립트의 실용성 \r____1.2.1 회원 목록 중 여러 명 찾기 \r____1.2.2 for에서 filter로, if에서 predicate로\r____1.2.3 함수형 프로그래밍 관점으로 filter 보기 \r____1.2.4 map 함수 \r____1.2.5 실행 결과로 바로 실행하기 \r____1.2.6 함수를 값으로 다룬 예제의 실용성 \r__1.3 함수형 자바스크립트의 실용성 2 \r____1.3.1 회원 목록 중 한 명 찾기 \r____1.3.2 값에서 함수로 \r____1.3.3 함수를 만드는 함수와 find, filter 조합하기 \r____1.3.4 고차 함수 \r____1.3.5 function identity(v) { return v; }, 이건 어디다 쓰는 거지? \r____1.3.6 연산자 대신 함수로 \r____1.3.7 함수 합성 \r__1.4 함수형 자바스크립트를 위한 기초 \r____1.4.1 일급 함수 \r____1.4.2 클로저 \r____1.4.3 클로저의 실용 사례 \r____1.4.4 클로저를 많이 사용하라! \r____1.4.5 고차 함수 \r____1.4.6 콜백 함수라 잘못 불리는 보조 함수 \r____1.4.7 함수를 리턴하는 함수와 부분 적용 \r__1.5 정리 \r 2장 함수형 자바스크립트를 위한 문법 다시 보기 \r__2.1 객체와 대괄호 다시 보기 \r____2.1.1 난해해 보이는 문법들을 확인하는 목적 \r____2.1.2 객체와 key \r____2.1.3 함수나 배열에 달기 \r____2.1.4 delete \r____2.1.5 코드가 실행될 수 있는 영역 \r__2.2 함수 정의 다시 보기 \r____2.2.1 기본 정의 \r____2.2.2 호이스팅 \r____2.2.3 호이스팅 활용하기 \r____2.2.4 괄호 없이 즉시 실행하기 \r____2.2.5 new Function이나 eval을 써도 될까요? \r____2.2.6 간단 버전 문자열 화살표 함수와 new Function 성능 \r____2.2.7 유명(named) 함수 \r____2.2.8 유명 함수를 이용한 재귀 \r____2.2.9 자바스크립트에서 재귀의 아쉬움 \r__2.3 함수 실행과 인자 그리고 점 다시 보기 \r____2.3.1 ( ) 다시 보기 \r____2.3.2 인자 다시 보기 \r____2.3.3 this 다시 보기 \r____2.3.4 call, apply 다시 보기 \r____2.3.5 call의 실용적 사례 \r__2.4 if else || && 삼항 연산자 다시 보기 \r____2.4.1 if의 괄호 \r____2.4.2 || && \r____2.4.3 삼항 연산자 \r__2.5 함수 실행의 괄호 \r____2.5.1 함수 실행을 통해 생기는 새로운 공간 \r____2.5.2 기본적인 비동기 상황 \r____2.5.3 함수 실행 괄호의 마법과 비동기 \r____2.5.4 비동기와 재귀 \r__2.6 화살표 함수 \r____2.6.1 익명 함수와의 문법 비교 \r____2.6.2 익명 함수와의 기능 비교 \r____2.6.3 화살표 함수의 실용 사례 \r____2.6.4 화살표 함수 재귀 \r__2.7 정리 \r 3장 Underscore.js를 직접 만들며 함수형 자바스크립트의 뼈대 익히기 \r__3.1 Underscore.js 소개 \r____3.1.1 Underscore.js 간단히 써보기 \r____3.1.2 Underscore.js vs. Lodash \r____3.1.3 지연 평가 1 (take) \r____3.1.4 지연 평가 2 (map-]map-]map) \r____3.1.5 지연 실행 \r____3.1.6 함수형 프로그래밍 관점에서의 each \r____3.1.7 지원 환경, 용량, 추가 기능 비교 \r____3.1.8 Underscore.js와 Lodash 비교 정리 \r____3.1.9 Underscore.js를 만드는 이유 \r__3.2 _.map과 _.each 구현하기 \r____3.2.1 ArrayLike와 Underscore.js의 콘셉트 \r____3.2.2 _.map 만들기 \r____3.2.3 쓸모 없어 보이는 함수 사용하기 \r____3.2.4 _.each 만들기 \r____3.2.5 함수로 함수 만들기, bloop \r____3.2.6 Object.keys \r____3.2.7 bloop 개선하기 \r____3.2.8 중간 정리 \r__3.3 _.filter, _.reject, _.find, _.some, _.every 만들기 \r____3.3.1 _.filter 만들기 \r____3.3.2 bloop로 _.filter 만들기 \r____3.3.3 _.rest, _.toArray, _.reverse, _.if \r____3.3.4 익명 함수 없이 bloop로 _.filter 만들기 \r____3.3.5 _.reject 만들기 \r____3.3.6 _.find, _.some, _.every를 만들기 위해 bloop 고치기 \r____3.3.7 _.find 만들기 \r____3.3.8 _.findIndex, _.findKey 만들기\r____3.3.9 _.some, _.every 만들기 \r____3.3.10 함수형 프로그래밍에서 함수는 ‘로직’이다! \r__3.4 _.reduce 만들기 \r____3.4.1 _.reduce 소개 \r____3.4.2 _.reduce의 용도 \r____3.4.3 _.reduce로 회원 데이터 집계하기 \r____3.4.4 _.reduce 만들기 \r____3.4.5 bloop 반으로 줄이기 \r__3.5 좀 더 발전시키기 \r____3.5.1 _.filter 중간에 나가기 \r____3.5.2 코드 양과 성능 \r 4장 함수 조립하기 \r__4.1 고차 함수와 보조 함수 \r____4.1.1 한 번만 실행하는 함수 \r____4.1.2 다시 물어 보지 않는 함수 \r____4.1.3 앞서 받은 인자 혹은 상황을 변경해 나가는 경우 \r____4.1.4 앞서 받은 인자를 잘 유지해야 하는 경우 \r__4.2 부분 적용 \r____4.2.1 _.partial로 함수 만들기 \r____4.2.2 _.partial과 _.compose로 함수 만들기 \r____4.2.3 더 나은 _.partial 함수 \r__4.3 연속적인 함수 실행 \r____4.3.1 체인의 아쉬운 점 \r____4.3.2 _.compose의 아쉬운 점 \r____4.3.3 파이프라인 \r____4.3.4 클래스를 대신하는 파이프라인 \r____4.3.5 더 나은 파이프라인, 그리고 Multiple Results \r__4.4 더 나은 함수 조립 \r____4.4.1 함수 조립과 Partial.js \r____4.4.2 Partial.js의 _.pipe \r____4.4.3 즉시 실행 파이프라인 _.go \r____4.4.4 문자열 화살표 함수 \r____4.4.5 Partial.js의 _.partial \r____4.4.6 Partial.js의 부분 커링 \r 5장 Partial.js와 함수 조립 \r__5.1 파이프라인 \r____5.1.1 네임스페이스 \r____5.1.2 즉시 실행 파이프라인, _.go와 _.mr \r____5.1.3 함수를 만드는 파이프라인 _.pipe \r____5.1.4 부분 커링 함수와의 조합 \r____5.1.5 보조 함수로 사용하는 파이프라인 \r____5.1.6 비동기와 _.go \r____5.1.7 중간에 멈추고 나가기 \r__5.2 비동기 \r____5.2.1 코드 변경 없이 비동기 제어가 되는 고차 함수 \r____5.2.2 비동기 결과를 기다리는 if문, _.if \r__5.3 고차 함수 \r____5.3.1 주요 고차 함수의 보조 함수에서 더 많은 인자 사용하기 \r____5.3.2 _.all, _.spread \r__5.4 파이프라인2 \r____5.4.1 _.go에서 this 사용 \r____5.4.2 또 다른 파이프라인, _.indent \r____5.4.3 _, _ _, _ _ _ \r____5.4.4 무조건 비동기로 동작하는 _.async \r____5.4.5 _.go에서 비동기 제어 건너뛰기 \r__5.5 템플릿 함수 \r____5.5.1 함수 스타일의 템플릿 함수 \r____5.5.2 Jade(Pug) 스타일 문법 지원 \r____5.5.3 데이터 치환 \r____5.5.4 일반 HTML 전용 _.string \r____5.5.5 인자 여러 개 받기 \r____5.5.6 escape \r____5.5.7 코드 실행 \r____5.5.8 _.sum \r____5.5.9 비동기 제어 \r__5.6 지연 평가와 컬렉션 중심 프로그래밍 \r____5.6.1 지연 평가 \r____5.6.2 Lodash의 체인 방식 지연 평가가 아쉬운 이유 \r____5.6.3 지연 평가 결정의 기준과 L \r____5.6.4 컬렉션 중심 프로그래밍 \r____5.6.5 수집하기와 거르기 \r____5.6.6 접기 \r____5.6.7 찾아내기 \r____5.6.8 3가지 유형(수집하기, 거르기, 찾아내기)과 지연 평가와의 연관성 \r____5.6.9 더 나은 지연 평가 \r____5.6.10 지연 평가의 동작 조건을 동적으로 하기 \r____5.6.11 Partial.js \r 6장 값에 대해 \r__6.1 순수 함수 \r____6.1.1 순수 함수와 부수 효과 \r____6.1.2 순수 함수와 순수 함수가 아닌 함수 \r__6.2 변경 최소화와 불변 객체 \r____6.2.1 직접 변경하는 대신, 변경된 새로운 값을 만드는 전략: _.sortBy, _.reject, _.pluck, _.initial, _.without \r____6.2.2 _.clone으로 복사하기 \r____6.2.3 _.extend, _.defaults로 복사하기 \r____6.2.4 불변 객체, 그리고 immutable.js의 훌륭한 점 \r____6.2.5 immutable.js의 아쉬운 점 \r____6.2.6 Model/Collection 류의 커스텀 객체들의 아쉬운 점 \r__6.3 기본 객체 다루기 \r____6.3.1 _.sel과 JSON Selector로 중첩 구조 데이터 다루기 \r____6.3.2 JSON Selector를 이용한 값 변경 \r____6.3.3 커스텀 객체 vs 기본 객체 \r____6.3.4 _.set, _.unset, _.remove2, _.pop, _.shift, _.push, _.unshift \r____6.3.5 _.set을 통한 값 변경을 함수로 하기 \r____6.3.6 깊은 값 꺼내기: _.deep_pluck \r__6.4 정리 \r 7장 실전에서 함수형 자바스크립트 더 많이 사용하기 \r__7.1 _.each, _.map \r____7.1.1 if 대신 _.each 사용하기 \r____7.1.2 선택된 항목들 지우기와 _.map \r____7.1.3 SQL의 insert문 만들기와 _.map \r____7.1.4 그룹 채팅 초대와 _.map \r____7.1.5 함수 고르기 \r____7.1.6 많은 사람들이 기본 객체와 함수 중심으로 프로그래밍을 한다면 \r__7.2 input tag들을 통해 form data 만들기 \r____7.2.1 _.reduce로 만들기 \r____7.2.2 여러 가지 함수로 함수 조합 연습해 보기 \r__7.3 커머스 서비스 코드 조각 \r____7.3.1 장바구니에 담기 옵션 선택과 _.find \r____7.3.2 _.find_where \r____7.3.3 장바구니에 담긴 상품들의 수량 합산하기와 _.reduce \r____7.3.4 장바구니에 담긴 상품들의 금액 합산하기와 _.reduce \r____7.3.5 다른 함수 조합으로 수량 합산 구하기 _.deep_pluck, _.reduce \r__7.4 백엔드와 비동기 \r____7.4.1 백엔드에서 만날 수 있는 다양한 비동기 상황 \r____7.4.2 순서대로 하나씩 실행하기 \r____7.4.3 실행한 후의 결과 담기 \r____7.4.4 true를 만나면 그만 돌기 \r____7.4.5 _.if _.some, _.every 조합하기 \r____7.4.6 _.loop와 _.break \r____7.4.7 async await 그리고 Babel은 모든 비동기 상황의 해결책일까? \r____7.4.8 async await를 for문과 if문에서 사용하기 \r____7.4.9 async await의 한계 \r____7.4.10 함수를 값으로 다루는 고차 함수의 해법 \r 8장 함수형으로 만드는 할 일 앱 \r__8.1 할 일 앱 만들기(1) \r____8.1.1 할 일 생성하기 \r____8.1.2 체크박스와 삭제 버튼 \r____8.1.3 앱의 상태 관리를 위한 데이터 추가 \r____8.1.4 필터링 기능 추가하기 \r____8.1.5 한 일 모두 삭제하기 \r__8.2 할 일 앱 만들기(2) \r____8.2.1 카운트 정보 표시하기 \r 9장 메모이제이션 \r__9.1 memoize 함수 \r____9.1.1 메모이제이션 코드로 이해하기 \r____9.1.2 Underscore.js의 _.memoize \r____9.1.3 Partial.js의 _.memoize2 \r____9.1.4 _.memoize2 내부와 JSON.stringify \r__9.2 메모이제이션과 불변성, 그리고 할 일 앱 \r____9.2.1 할 일 앱에 _.memoize2 적용시키기 \r____9.2.2 최종 코드 \r__9.3 마무리 하며 \r____9.3.1 인프런(Inflearn) 동영상 강의 : 자바스크립트로 알아보는 함수형 프로그래밍 \r____9.3.2 몇 가지 프로젝트 소개 \r____9.3.3 문의 사항\r\n",
        "isbn10": "8966262120",
        "isbn13": "9788966262120"
    },
    {
        "title": "자바의 신 세트",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12142414",
        "image": "https://bookthumb-phinf.pstatic.net/cover/121/424/12142414.jpg?type=m1&udate=20191226",
        "author": "이상민",
        "price": "30000",
        "discount": "27000",
        "publisher": "로드북",
        "pubdate": "20170623",
        "isbn": "899792432X 9788997924325",
        "description": "『자바의 신 세트』는 성능 전문가로 널리 알려진 저자가 십수 년의 자바 개발 경험을 바탕으로 현장에서 꼭 필요한 기초지식을 정리한 책이다. 현장 중심으로 자바의 기본서를 다시 정의한 책이다. 독자가 생각하며 학습할 수 있도록 구성하였고 연습문제에 심혈을 기울였다. 23명의 베타리더 및 감수자가... ",
        "authorIntroContent": "\n이상민\n저자 : 이상민저자 이상민은 삼성 SDS에서 개발을 시작하여, NAVER의 성능 엔지니어링 팀에서 일했다. 지금은 NHN엔터테인먼트에서 협업 도구인 두레이(DOORAY!)를 개발하고 있다. [자바 성능 튜닝 이야기], [자바 개발자와 시스템 운영자를 위한 트러블슈팅 이야기] 등 다수의 IT 서적을 집필하였다.\n",
        "bookIntroContent": "『자바의 신 세트』는 성능 전문가로 널리 알려진 저자가 십수 년의 자바 개발 경험을 바탕으로 현장에서 꼭 필요한 기초지식을 정리한 책이다. 현장 중심으로 자바의 기본서를 다시 정의한 책이다. 독자가 생각하며 학습할 수 있도록 구성하였고 연습문제에 심혈을 기울였다. 23명의 베타리더 및 감수자가 먼저 리뷰하고 의견을 반영하였다. 4년 만의 개정판에서는 Java 8 버전 내용과 JavaFX 내용을 추가하였고, 1판 독자의 의견을 수렴하여 기본서에 더 충실할 수 있도록 내용을 수정 보완하였다.",
        "tableOfContentsContent": "\n[------1권------]\r1장 프로그래밍이란 무엇인가?\rProgramming의 P \r자바 프로그램의 메소드는 이렇게 생겼어요 \r자바의 가장 작은 단위는 클래스랍니다 \r클래스는 상태를 갖고 있어야 합니다 \r프로그래밍의 가장 기본은 =를 이해하는 것 \r한 줄을 의미하는 세미콜론 \r모든 프로그래밍 언어에는 예약어라는 것이 있어요 \r정리하며 \r 2장 Hello God Of Java\r자바를 배울 환경 준비하기 \rHelloGodOfJava 만들기 \rHelloGodOfJava 컴파일하고 실행하기 \rmain 메소드를 만들자 \rSystem.out.println()과 System.out.print() \r주석(Comment) 처리하기 \r메소드를 직접 만들어 보자 \r정리하며 \r 3장 자바를 제대로 알려면 객체가 무엇인지를 알아야 해요\r자바는 객체지향 언어라고 해요 \r클래스와 객체는 구분하셔야 해요 \rCar 클래스를 구현하자 \r계산기 클래스를 만들어보자 \rCalculator 객체를 생성해보자 \r정리하며 \r 4장 정보를 어디에 넣고 싶은데\r자바에서는 네 가지의 변수가 존재해요 \r예제를 통해서 지역 변수를 확실히 익히자 \r변수 이름은 이렇게 \r크게 보면 자바에는 두 가지 자료형이 있답니다 \r기본 자료형은 8개에요 \r8비트와 byte 타입 \r다른 정수형 타입들은 어떻게 활용하나? \r소수점을 처리하고 싶어요 \rchar와 boolean는 어떻게 쓰는 거지? \r기본 자료형의 기본 값은 뭘까? \r정리하며 \r 5장 계산을 하고 싶어요\r연산자라는 게 뭐지? 벌써 조금 배웠다고? \r간단하게 계산하는 대입 연산자들 \r피연산자가 하나인 것도 있어요. 이걸 단항 연산자라고 하죠 \r자바에서 계산하는 순서를 알아두면 좋다 \r뭔가를 비교할 때는 어떻게 하지? \r논리 연산자들을 알아보자 \r아주 특이한 ? : 연산자 \r기본 자료형의 형 변환을 이용한 변신 \r정리하며 \r 6장 제가 조건을 좀 따져요\r도대체 얼마나 조건을 따지길래… \rif를 조금 더 다양하게 사용해보자 \r자바의 switch와 불켜는 스위치는 별 상관 없다 \r반복문이라구요? \r가장 확실한 for 루프 \r많이 사용안하는 label \r정리하며 \r 7장 여러 데이터를 하나에 넣을 수는 없을까요?\r하나에 많은 것을 담을 수 있는 배열이라는 게 있다는데… \r배열의 기본값 \r배열을 그냥 출력해보면 어떻게 나올까? \r배열을 선언하는 또 다른 방법 \r별로 사용하지는 않지만, 알고 있어야 하는 2차원 배열 \r배열의 길이는 어떻게 알 수 있을까요? \r배열을 위한 for 루프 \r자바 실행할 때 원하는 값들을 넘겨주자 \r정리하며 \r 8장 참조 자료형에 대해서 더 자세히 알아봅시다\r참조 자료형은 나머지 다에요 \r기본 생성자 \r생성자는 몇 개까지 만들 수 있을까? \r이 객체의 변수와 매개 변수를 구분하기 위한 this \r메소드 overloading \r꼭 기억하고 넘어가야 합니다 \r메소드에서 값 넘겨주기 \rstatic 메소드와 일반 메소드의 차이 \rstatic 블록 \rPass by value, Pass by reference \r매개 변수를 지정하는 특이한 방법 \r정리하며 \r 9장 자바를 배우면 패키지와 접근 제어자는 꼭 알아야 해요\r패키지는 그냥 폴더의 개념이 아니에요 \r패키지 이름은 이렇게 지어요 \rimport를 이용하여 다른 패키지에 접근하기 \r자바의 접근 제어자 \r클래스 접근 제어자 선언할 때의 유의점 \r정리하며 \r 10장 자바는 상속이라는 것이 있어요\r자바에서 상속이란? \r상속과 생성자 \r메소드 Overriding \r참조 자료형의 형 변환 \rPolymorphism \r자식 클래스에서 할 수 있는 일들을 다시 정리해보자 \r정리하며 \r 11장 매번 만들기 귀찮은데 누가 만들어 놓은 거 쓸 수 없나요?\r미리 만들어 놓은 클래스들은 아주 많아요 \rAPI를 열어보자 \r클래스 및 인터페이스의 상세 정보 화면을 살펴보자 \rDeprecated라고 표시되어 있는 것은 뭐야? \rHeader와 Footer에 있는 링크들은 뭘까? \r정리하며 \r 12장 모든 클래스의 부모 클래스는 Object에요\r모든 자바 클래스의 부모인 java.lang.Object 클래스 \rObject 클래스에서 제공하는 메소드들의 종류는? \rObject 클래스에서 가장 많이 쓰이는 toString() 메소드 \r객체는 ==만으로 같은지 확인이 안 되므로, equals()를 사용하죠 \r객체의 고유값을 나타내는 hashCode() \r정리하며 \r 13장 인터페이스와 추상클래스, enum\r메소드 내용이 없는 interface \r인터페이스를 직접 만들어보자 \r일부 완성되어 있는 abstract 클래스 \r나는 내 자식들에게 하나도 안 물려 줄꺼여 \renum 클래스라는 상수의 집합도 있다 \renum을 보다 제대로 사용하기 \renum 클래스의 부모는 무조건 java.lang.Enum이어야 해요 \r정리하며 \r 14장 다 배운 것 같지만, 예외라는 중요한 것이 있어요\r자바에서 매우 중요한 예외 \rtry-catch는 짝이다 \rtry-catch를 사용하면서 처음에 적응하기 힘든 변수 선언 \rfinally야~ 넌 무슨 일이 생겨도 반드시 실행해야 돼 \r두 개 이상의 catch \r예외의 종류는 세 가지다 \r모든 예외의 할아버지는 java.lang.Throwable 클래스다 \r난 예외를 던질 거니까 throws라고 써 놓을께 \r내가 예외를 만들 수도 있다구? \r자바 예외 처리 전략 \r정리하며 \r 15장 String\r자바에서 가장 많이 사용하는 String 클래스 \rString의 생성자에는 이런 것들이 있다 \rString 문자열을 byte로 변환하기 \r객체의 널 체크는 반드시 필요하답니다 \rString의 내용을 비교하고 검색하는 메소드들도 있어요 \rString내에서 위치를 찾아내는 방법은 여러 가지에요 \rString의 값의 일부를 추출하기 위한 메소드들은 얘네들이다 \rString 값을 바꾸는 메소드들도 있어요 \r절대로 사용하면 안 되는 메소드가 하나 있어요!!!!! \rimmutable한 String의 단점을 보완하는 클래스에는 StringBuffer와 StringBuilder가 있다\r정리하며 \r 16장 클래스 안에 클래스가 들어갈 수도 있구나\r클래스 안의 클래스 \rStatic nested 클래스의 특징 \r내부 클래스와 익명 클래스 \rNested 클래스의 특징은 꼭 알아야 한다 \r정리하며 \r 17장 어노테이션이라는 것도 알아야 한다\r어노테이션이란? \r미리 정해져 있는 어노테이션들은 딱 3개뿐 \r어노테이션을 선언하기 위한 메타 어노테이션 \r어노테이션을 선언해 보자 \r어노테이션에 선언한 값은 어떻게 확인하지? \r어노테이션도 상속이 안돼요 \r정리하며 \r 18장 이제 기본 문법은 거의 다 배웠으니 정리해 봅시다\r객체지향 개발과 관련된 용어들 \r자바의 주석문(Comment) \r패키지와 import \r자바에서 사용되는 타입의 종류 \r변수의 종류 \r계산을 쉽게 도와주는 연산자들 \r조건문들 \r반복문들 \r아무나 사용 못하게 막아주는 접근 제어자 \r선언할 때 사용할 수 있는 각종 제어자들 \r자바를 구성하는 클래스, 인터페이스, abstract 클래스 \r메소드의 선언 \r자주 사용하게 되는 상속 \r예외를 처리하자 \rObject 클래스 \rString 클래스 \r어노테이션을 선언할 때 사용하는 메타 어노테이션들 \rAPI의 기초 \r정리하며 \r **** 〈자바의 신〉 중간 점검 및 실습 **** \r 부록 Part 1\r부록1 JDK 설치하기 \r부록2. Eclipes 설치하기 \r부록3. float와 double의 범위 \r부록4. 비트 연산자는 어떤 것일까 \r부록5. java.lnag.Math 클래스 \r [------2권------]\r19장 이쯤에서 자바의 역사와 JVM에 대해서 알아보자\r자바의 역사 \rJDK의 플랫폼에 따른 차이 \rJDK , J2SE, Java SE 외에 자바에서 사용되는 다른 용어들 \r자바언어의 특징은 다음과 같다 \r자바의 버전별 차이 \rJIT 컴파일러는 도대체 뭘까? \rHotSpot은 또 뭐야? \r자바를 배우면 꼭 알아야 하는 용어 \r자바의 GC는 어떻게 진행되나요? \r정리하며 \r 20장 가장 많이 쓰는 패키지는 자바랭\rjava.lang 패키지는 특별하죠 \r숫자를 처리하는 클래스들 \r각종 정보를 확인하기 위한 System 클래스 \rSystem.out을 살펴보자 \r정리하며 \r 21장 실수를 방지하기 위한 제네릭이라는 것도 있어요\r실수를 방지할 수 있도록 도와주는 제네릭 \r제네릭이 뭐지? \r제네릭 타입의 이름 정하기 \r제네릭에 ?가 있는 것은 뭐야? \r제네릭 선언에 사용하는 타입의 범위도 지정할 수 있다 \r메소드를 제네릭하게 선언하기 \r정리하며 \r 22장 자바랭 다음으로 많이 쓰는 애들은 컬렉션 - Part1(List)\r자바 컬렉션 \rList 인터페이스와 그 동생들 \rArrayList에 대해서 파헤쳐보자 \rArrayList의 생성자는 3개다 \rArrayList에 데이터를 담아보자 \rArrayList에서 데이터를 꺼내자 \rArrayList에 있는 데이터를 삭제하자 \rStack 클래스는 뭐가 다른데? \r정리하며 \r 23장 자바랭 다음으로 많이 쓰는 애들은 컬렉션 - Part2(Set과 Queue)\rSet이 왜 필요하지? \rHashSet에 대해서 파헤쳐 보자 \rHashSet의 생성자들도 여러 종류가 있다 \rHashSet의 주요 메소드를 살펴보자 \rQueue는 왜 필요할까? \rLinkedList를 파헤쳐보자 \rLinkedList의 생성자와 주요 메소드를 살펴보자 \r정리하며 \r 24장 자바랭 다음으로 많이 쓰는 애들은 컬렉션 - Part3(Map)\rMap이란? \rMap을 구현한 주요 클래스들을 살펴보자 \rHashMap 클래스에 대해서 자세히 알아보자 \rHashMap 객체에 값을 넣고 확인해보자 \rHashMap 객체의 값을 확인하는 다른 방법들을 알아보자 \r정렬된 키의 목록을 원한다면 TreeMap을 사용하자 \rMap을 구현한 Properties 클래스는 알아두면 편리하다 \r자바의 자료 구조를 정리해보자 \r정리하며 \r 25장 쓰레드는 개발자라면 알아두는 것이 좋아요\r쓰레드가 도대체 뭘까? \rRunnable 인터페이스와 Thread 클래스 \rThread 클래스의 생성자를 살펴보자 \r많이 사용되는 sleep() 메소드에 대해서 살펴보자 \rThread 클래스의 주요 메소드를 살펴보자 \r쓰레드와 관련이 많은 synchronized \rsynchronized 블록은 이렇게 사용한다 \r쓰레드를 통제하는 메소드들 \rObject 클래스에 선언된 쓰레드와 관련있는 메소드들 \rThreadGroup에서 제공하는 메소드들 \r정리하며 \r 26장 파일에 있는 것을 읽고 쓰려면 아이오를 알아야죠\rI/O는… \r자바의 File과 Files 클래스 \rFile 클래스를 이용하여 파일의 경로와 상태를 확인해 보자 \rFile 클래스를 이용하여 파일을 처리하자 \r디렉터리에 있는 목록을 살펴보기 위한 list 메소드들 \rInputStream과 OutputStream은 자바 스트림의 부모들이다 \rReader와 Writer \r텍스트 파일을 써보자 \r텍스트 파일을 읽어보자 \r정리하며 \r 27장 Serializable과 NIO도 살펴 봅시다\rSerializable에 대해서 좀 살펴보자 \r객체를 저장해보자 \r객체를 읽어보자 \rtransient라는 예약어는 Serializable과 떨어질 수 없는 관계다 \r자바 NIO란? \rNIO의 Buffer 클래스 \r정리하며\r 28장 다른 서버로 데이터를 보내려면 어떻게 하면 되나요?\r네트워크 프로그래밍이란? \r소켓 통신을 하기 위해서 알아야 하는 Socket 클래스 \r간단하게 소켓 통신을 해보자 \rUDP 통신을 위해서 알아야 하는 Datagram 관련 클래스 \r간단하게 UDP 통신을 해보자 \r자바에서 웹 페이지 요청을 하려면 어떻게 해야 하지? \r정리하며 \r 29장 이제 주요 API도 알아봤으니 정리해 봅시다\r자바의 예약어들 \r제네릭 \r쓰레드 \r자바 API에서 제공하는 자료 구조와 Collection \rCollection-List 인터페이스 \rCollection-Set 인터페이스 \rCollection-Queue 인터페이스 \rCollection-Map 인터페이스 \rIO 관련 클래스들 \r네트워크 관련 클래스들 \r정리하며 \r **** 〈자바의 신〉 기말고사 ****\r 30장 Java 7에서 달라진 것들에는?\rJava 7에서는… \r달라진 숫자 표현법!!! \rswitch 문장도 좀 확장되었대요 \r제네릭은 다이아몬드를 쓰면 쉬워요 \rNon reifiable varargs 타입 \r예외도 이렇게 보완 되었답니다 \rJava 7부터는 꼭 안닫아도 되는 애들이 있어요 \r정리하며 \r 31장 Java 7에 추가된 것들에는?\rFork/Join은 CPU를 더 쉽게, 효율적으로 사용하기 위해서 만들어진 거에요 \rNIO도 잘 모르는데 NIO 2가 나왔다 \rFiles 클래스는 파일을 다루기 위한 클래스랍니다 \r파일이 변경되었는지 확인하는 WatchService 클래스도 추가되었어요 \r파일과 관련된 다른 새로운 API에는 어떤 것들이 있을까? \rFork/Join과 NIO2 외에 추가 및 변경된 것들을 간단히 살펴보죠 \r정리하며 \r 32장 Java 8에 추가된 것들은?\rJava 8의 새로운 것들 \rOptional \rDefault method \r날짜 관련 클래스들 \r병렬 배열 정렬(Parallel array sorting) \rStringJoiner \r정리하며 \r 33장 Java 8에서 변경된 것들은?\rLambda 표현식(expression) \rjava.util.function 패키지 \rstream \rstream forEach() \r메소드 참조 \rstream map() \rstream filter() \rStream을 다시 한번 정리해 보자 \r정리하며 \r 34장 GUI 도구인 Java FX\rJavaFX란? \rJavaFX의 아키텍처와 UI 컴포넌트 \rJavaFX 개발 환경 구축하기 \rHello JavaFX \rJavaFX의 Layout \rUI 컴포넌트 확인해보기 \r이벤트 처리하기 \r정리하며 \r 35장 JavaFX로 계산기를 만들어보자\rCalculator 프로젝트 만들기 \rUI 컴포넌트 배치하기 \r버튼에 이벤트 추가하기 \r계산기에 생명력을 불어넣기 \r정리하며 \r 36장 이제 저는 뭘 더 공부해야 하는 거죠?\r이제 뭘 공부해야 할까? \r자바 언어로 개발하기 위해서 알아야 하는 것들(Group 1) \r웹 개발자라면 알아야 하는 것들(Group 2) \r이것 만으로는 부족하다(Group 3) \r정리하며 937\r 부록 Part 2\r부록6. jar \r부록7. classpath와 자바 옵션들 \r부록8. javadoc \r부록9. Formatter는 알아두면 매우 유용하게 사용할 수 있어요 \r부록10. Collections 다음으로 많이 쓰는 애들은 자바 유틸 \r부록11. 자바의 ThreadLocal \r부록12. 자바의 volatile \r -------온라인 특별부록판----------\r〈〈자바 웹 개발의 기본〉〉\r 1장. 저는 이런 것 말고 웹 페이지를 만들고 싶었다구요\r2장. 그럼 데이터를 저장하려면 어떻게 해야 하는데요?\r 부록1. Tomcat 설치하기\r부록2. JSP와 web.xml 추가 설명\r부록3. SQL 기초와 JDBC 타입\r [다운로드 링크]\r* www.roadbook.co.kr/187\r* cafe.naver.com/godofjava\n",
        "isbn10": "899792432X",
        "isbn13": "9788997924325"
    },
    {
        "title": "이젠 나도! 자바 (지금 시작해도 괜찮아)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15767114",
        "image": "https://bookthumb-phinf.pstatic.net/cover/157/671/15767114.jpg?type=m1&udate=20191114",
        "author": "이지선",
        "price": "25000",
        "discount": "22500",
        "publisher": "성안당",
        "pubdate": "20191111",
        "isbn": "8931556306 9788931556308",
        "description": "273개 코드로 누구나 혼자 쉽게 배우는 자바 완벽 가이드&#x0D;이젠 나도! 자바&#x0D;&#x0D;비전공자부터 프로그래머를 꿈꾸는 이공계 학생까지! &#x0D;&#x0D;... &#x0D;&#x0D;누구나 쉽게 제대로 자바를 배우는 입문서! &#x0D;&#x0D;이 책의 본문에는 273개의 예제 코드를 제공하고 있으며, 각 코드들은 직관적으로 이해할... ",
        "authorIntroContent": "\n이지선\n저자 : 이지선서강대 소프트웨어교육센터 강의교수서강대학교 전산학과를 졸업하고, 미국 유타대학교(University of Utah)에서 컴퓨터공학을 공부하였다. 서강대학교에서 컴퓨터공학으로 석사 학위를 취득한 후에는 모바일 게임 회사 CTO로 근무하였고, 서강대학교에서 암호 알고리즘 논문으로 박사 학위를 취득하였다. 고려대학교 정보보호대학원 연구 교수를 거쳐 현재는 서강대학교 소프트웨어교육센터에서 강의 교수로 근무하고 있다.ㆍ저서 -「이젠 나도! 파이썬」(성안당)\n",
        "bookIntroContent": "273개 코드로 누구나 혼자 쉽게 배우는 자바 완벽 가이드\r이젠 나도! 자바\r 비전공자부터 프로그래머를 꿈꾸는 이공계 학생까지!   코딩을 처음 배우는 경우에는 언어의 문법을 배우고 나서 스스로 코드를 작성할 때, 어려움을 겪는 경우가 많다. 문법에 맞게 논리적인 코드를 작성하는 과정이 어렵기 때문이다. 이 책에서는 문법을 꼼꼼히 설명하고, 해당 예제 코드를 제공하여 배운 문법을 실제 코딩에 어떻게 사용하는지 학습한다. \r 누구나 쉽게 제대로 자바를 배우는 입문서!   이 책의 본문에는 273개의 예제 코드를 제공하고 있으며, 각 코드들은 직관적으로 이해할 수 있도록 주석과 다양한 실행 결과를 제시한다. 문법을 공부한 후에는 예제 코드를 통해서 각 문법이 어떻게 사용되는지를 확인할 수 있다. 이제 여러분도 마음껏 객체 지향 언어인 자바 코딩을 쉽고 확실하게 학습해 보자.",
        "tableOfContentsContent": "\n머리말 \r자바 20일 계획표 \r이 책의 구성 미리보기 \r챕터별 학습 어드바이스 \r Chapter 1. 자바 시작하기   1-1 자바의 등장 \r1-2 자바의 특징 \r컴파일러 언어이자 인터프리터 언어 \r객체 지향 언어 \r1-3 자바 설치하기(JDK11 + 이클립스) \r1-4 이클립스 설치하기 \r1-5 자바 프로그램 작성하기 \r10진수, 2진수, 8진수, 16진수 \rbyte 자료형 \rshort 자료형 \rint 자료형 \rlong 자료형 \r1-6 Hello world 출력하기 \r1-7 자바 파일 작성시에 지켜야 할 내용들 \r Chapter 2. 변수, 자료형, 주석   2-1 변수와 기본 자료형 이해하기 \r기본 자료형 \r변수 선언 및 초기화 \r식별자(identifier) 만드는 규칙 \r변수값 수정하기 \r변수값 출력하기 \rSystem.out.println()과 System.out.print() 사용하기 \r2-2 기본 자료형과 참조 자료형 \r2-3 논리 자료형(boolean) \r2-4 문자 자료형(char) \r2-5 정수 자료형(byte, short, int, long) \r10진수, 2진수, 8진수, 16진수 \rbyte 자료형 \rshort 자료형 \rint 자료형 \rlong 자료형 \r2-6 실수 자료형(float, double) \rfloat 자료형 \rdouble 자료형 \r2-7 리터럴(literal) 상수 \r10진수, 2진수, 8진수, 16진수 \r2-8 기본 자료형과 참조 자료형 \r문자열 리터럴\r2-9 변수 사용 시 주의점 \r변수 초기화 \r변수 범위 \r2-10 주석 \r Chapter 3. 계산을 위한 연산자  3-1 수치 연산자\r이항 연산자(binary operators) \r단항 연산자(unary operators) \r3-2 비트 연산자(bitwise operators) \r비트 연산자 AND - & \r비트 연산자 OR - | \r비트 연산자 XOR - ^ \r3-3 시프트(shift) 연산자 \r3-4 관계 연산자 \r3-5 논리 연산자 \r3-6 할당 연산자(assignment operator) \r3-7 연산자 우선 순위 \r3-8 형 변환(type conversion)과 캐스트 연산자 \r자료형 간의 대소 관계 \r자동 형 변환(automatic conversion) \r캐스트(cast) 변환 \r다양한 자료형이 섞인 계산식 \r리터럴이 포함된 계산식 \r Chapter 4. 코드의 수행 흐름을 바꾸는 조건문과 반복문  4-1 불리언 논리 연산자 \r4-2 조건문 \rif 조건문 \rswitch 조건문 \r삼항 연산자 \r4-3 반복문 \rwhile 반복문 \rfor 반복문 \rdo ... while 반복문 \r4-4 break와 continue \rbreak 구문 \rcontinue 구문 \r중첩된 반복문 \r Chapter 5. 배열과 문자열   5-1 1차원 배열 \r배열 선언 및 생성하기 \r배열 초기화 \r배열 출력하기 \r한 줄에 배열 여러 개 선언하기 \r배열의 참조값 이해하기 \r배열 복사하기 \r배열에 배열 대입하기 \r5-2 다차원 배열 \r2차원 배열 \r가변 배열 \r5-3 for...each 스타일 반복문 \r5-4 문자열(String) \r Chapter 6. 메소드   6-1 메소드 이해하기 \r6-2 메소드 정의와 호출 \r6-3 메소드에 배열을 넘기거나 반환하는 경우 \r6-4 가변 인수 \r6-5 메소드 오버로딩(method overloading) \r Chapter 7. 클래스와 객체  7-1 클래스 기본과 객체 생성\r속성만 갖는 클래스 \r인스턴스를 생성하는 new 키워드 \r객체 생성과 객체 참조 변수 \r7-2 생성자(constructor) \r디폴트 생성자(default constructor) \r매개변수가 있는 생성자 \r생성자 오버로딩(constructor overloading) \r7-3 인스턴스 변수와 클래스 변수 \r인스턴스 변수(instance variable) \r클래스 변수(static variable) \r7-4 this 키워드 \r생성자와 this 키워드 \rthis 키워드를 이용한 메소드 호출 \r7-5 static 키워드\rstatic 변수 \rstatic 메소드 \rstatic 블록과 non-static 블록 \r7-6 자바의 접근 제어와 private 키워드 \rprivate 키워드 \rpublic 키워드 \r디폴트 접근 제어 \r접근자 메소드와 변경자 메소드 \r7-7 자료형으로서의 클래스 \r7-8 인스턴스 배열 \r7-9 클래스 예제들 \r Chapter ８. 상속  8-1 상속 기본 개념 \r8-2 super 키워드 \rsuper 키워드를 이용하여 부모 생성자 호출하기 \rsuper 키워드를 이용하여 부모 멤버에 접근하기 \r8-3 메소드 오버라이딩(overriding) \r8-4 final 키워드 \rfinal 클래스 \rfinal 인스턴스 변수 \rfinal 메소드 \rfinal 지역 변수 \r8-5 단일 상속과 다중 상속(multiple inheritance) \r8-6 다형성(polymorphism) \r다형성 이해하기 \rinstanceof 연산자 \r다른 타입의 객체 간의 형 변환 \r Chapter ９. 패키지와 접근 제어   9-1 패키지(package) \r9-2 패키지 생성하기 \r패키지 import하기 \r9-3 접근 제어 \rprivate 접근 제어 \r디폴트 접근 제어 \rprotected 접근 제어 \rpublic 접근 제어 \r9-4 메소드 오버라이딩과 접근 제어 \r Chapter 10. 추상 클래스와 인터페이스  10-1 추상 클래스(abstract class) \r추상 메소드 \r추상 클래스의 특징 \r10-2 자바 버전 7까지의 인터페이스\r인터페이스 기초 \r인터페이스 내의 변수 \r인터페이스 상속하기\r단일 상속 vs. 다중 상속 \r10-3 자바 버전 8 이후의 인터페이스\r디폴트 메소드 \r정적 메소드 \r프라이빗(private) 메소드 \r Chapter 11. 유용한 패키지와 클래스들  11-1 java.lang.Object 클래스 \requals() 메소드 \rtoString() 메소드 \r11-2 java.lang.String/java.lang.StringBuffer/ \rjava.lang.StringBuilder 클래스 \rjava.lang.String \rjava.lang.StringBuffer \rjava.lang.StringBuilder\r11-3 java.lang.Math 클래스 \r11-4 wrapper 클래스 \rNumber 클래스 \rByte / Short / Integer / Long 클래스 \r기타 wrapper 클래스 \rauto-boxing(오토박싱)/auto-unboxing(오토언박싱) \r11-5 java.util.Random 클래스\r Chapter 12. 예외 처리  12-1 프로그램 오류와 예외 처리 \r12-2 try ~ catch 구문으로 예외 처리하기 \rtry ~ catch ~ finally를 이용하여 예외 처리하기 \rthrows를 이용하여 예외 처리하기 \r12-3 예외 생성하기 \r Chapter 13. 자바 입출력  13-1 스트림(stream) \r13-2 표준 입출력 클래스 \rScanner 클래스 \rSystem 클래스 \r13-3 파일 입력 클래스 \r파일 저장 위치 \rFileInputStream을 이용한 파일 입력 \rFileReader를 이용한 파일 입력 \r13-4 파일 출력 클래스 \rFileOutputStream을 이용한 파일 출력 \rFileWriter를 이용한 파일 출력 \r13-5 보조 스트림 클래스 \rInputStreamReader, OutputStreamWriter \rBufferedInputStream, BufferedOutputStream \rBufferedReader, BufferedWriter \rDataInputStream, DataOutputStream \r Chapter 14. 제네릭스와 컬렉션 프레임워크   14-1 제네릭스 기본 \r제네릭 클래스 \r제한된 제네릭 타입 \r와일드카드 인수 \r14-2 컬렉션 프레임워크(Collection Framework) \r14-3 List 인터페이스 \rArrayList \rLinkedList \rStack \rQueue \rIterator와 ListIterator \r14-4 Set 인터페이스 \rTreeSet \rHashSet \r14-5 Map 인터페이스 \rHashMap \rTreeMap \r Chapter 15. 스레드  15-1 스레드(thread) \r15-2 Thread 클래스를 이용하여 스레드 생성하기 \r15-3 Runnable 인터페이스를 이용하여 스레드생성하기 \r15-4 스레드에 이름 붙이기 \r15-5 스레드 조절하기 \r15-6 스레드에 우선순위 주기 \r Chapter 16. 람다 표현식, 열거형, 어노테이션  16-1 람다 표현식(lambda expression) \r람다 표현식 만들기 \r람다 표현식 사용하기 \r블록 람다표현식 446\r제네릭 함수형 인터페이스(Generic Functional Interface) \r16-2 열거형 (enumeration) \r16-3 어노테이션 (annotation)\n",
        "isbn10": "8931556306",
        "isbn13": "9788931556308"
    },
    {
        "title": "자바스크립트 완벽 가이드",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=10338797",
        "image": "https://bookthumb-phinf.pstatic.net/cover/103/387/10338797.jpg?type=m1&udate=20160310",
        "author": "데이비드 플래너건",
        "price": "54000",
        "discount": "48600",
        "publisher": "인사이트",
        "pubdate": "20160314",
        "isbn": "8966261795 9788966261796",
        "description": "개발자를 위해 세심하게 구성된 자바스크립트!『자바스크립트 완벽 가이드』는 HTML5로 촉발된 자바스크립트 관련 표준안들과 관련 API들을 대거 포함한 자바스크립트 가이드북이다. 책의 1부는 자바스크립트 언어 자체를 다루고, 2부는 자바스크립트를 어디에서 어떻게 사용할지를 다룬다. 3, 4부는 1... ",
        "authorIntroContent": "\n데이비드 플래너건\n저자 : 데이비드 플래너건저자 데이비드 플래너건(DAVID FLANAGAN)은 컴퓨터 프로그래머이자 자신의 웹사이트(HTTP://DAVIDFLANAGAN.COM)에 글을 쓰는 저자이다. 『JAVASCRIPT POCKET REFERENCE』 『THE RUBY PROGRAMMING LANGUAGE』 『JAVA IN A NUTSHELL』 같은 책을 O'REILLY를 통해 출간했다. MIT에서 컴퓨터과학 학위와 공학 학위를 받았으며, 지금은 시애틀, 워싱턴, 밴쿠버, 브리티시 콜롬비아 사이에 있는 U.S. PACIFIC NORTHWEST에서 부인, 아이들과 함께 살고 있다.역자 : 구경택역자 구경택은 DAUM에서 메일, 달력, 지도 서비스 개발을 담당했으며, 스타트업에서 1년간 게임 개발을 하기도 했다. 현재는 NAVER에서 지도 프론트엔드 개발을 담당하고 있다. 프론트엔드 개발자로만 십 년이 넘는 커리어를 가지고 있으며, 현재는 전통적인 자바스크립트 애플리케이션보다는, WEBGL과 하이브리드 앱 기술에 관심이 많다. 웹 기술로 자동차 인포테인먼트까지 개발해보고 싶을 정도로, 프론트엔드 개발과 자동차를 좋아하는 꿈 많은 개발자다.역자 : 박경욱역자 박경욱은 우연한 계기로 웹 개발에 입문해 자바스크립트를 좋아하게 되었고, 제주에서 임베디드 기기와 웹을 접목해 아이디어를 구현하며 지내고 있다. 그 밖에 잡다한 기술 지식에 관심이 많은 잉여 개발자이다.역자 : 변치훈역자 변치훈은 현재 레진 엔터테인먼트의 프론트 개발팀 팀장을 맡고 있으며 개발자 커뮤니티인 FRENDS에서 활동 중이다.\n",
        "bookIntroContent": "개발자를 위해 세심하게 구성된 자바스크립트!『자바스크립트 완벽 가이드』는 HTML5로 촉발된 자바스크립트 관련 표준안들과 관련 API들을 대거 포함한 자바스크립트 가이드북이다. 책의 1부는 자바스크립트 언어 자체를 다루고, 2부는 자바스크립트를 어디에서 어떻게 사용할지를 다룬다. 3, 4부는 1, 2부에서 다룬 API들에 대한 레퍼런스를 수록하고 있다.",
        "tableOfContentsContent": "\n1장 자바스크립트 소개 \r1.1 자바스크립트 코어 \r1.2 클라이언트 측 자바스크립트 \r  1부 코어 자바스크립트 \r 2장 어휘 구조 \r2.1 문자 집합 \r2.2 주석 \r2.3 리터럴 \r2.4 식별자와 예약어 \r2.5 선택적인 세미콜론 사용 \r 3장 타입, 값, 변수 \r3.1 숫자 \r3.2 텍스트 \r3.3 불리언 값 \r3.4 null과 undefined \r 3.5 전역 객체 \r3.6 래퍼(wrapper) 객체 \r3.7 변경 불가능한 원시 타입 값과 변경 가능 객체 참조 \r3.8 타입 변환 \r3.9 변수 선언 \r3.10 변수의 유효범위 \r 4장 표현식과 연산자 \r4.1 기본 표현식 \r4.2 객체와 배열의 초기화 표현식 \r4.3 함수 정의 표현식 \r4.4 프로퍼티 접근 표현식 \r4.5 호출 표현식 \r4.6 객체 생성 표현식 \r4.7 연산자 개요 \r4.8 산술 표현식 \r4.9 관계형 표현식 \r4.10 논리 표현식 \r4.11 할당 표현식 \r4.12 평가 표현식 \r4.13 기타 연산자들 \r 5장 문장 \r5.1 표현문 \r5.2 복합문과 빈 문장 \r5.3 선언문 \r5.4 조건문 \r5.5 루프 \r5.6 점프문 \r5.7 기타 \r5.8 자바스크립트 문장 요약 \r 6장 객체 \r6.1 객체 생성하기 \r6.2 프로퍼티 접근 및 설정 \r6.3 프로퍼티 삭제하기 \r6.4 프로퍼티 검사하기 \r6.5 프로퍼티 열거하기 \r6.6 프로퍼티 Getter와 Setter \r 6.7 프로퍼티 속성 \r6.8 객체 속성 \r6.9 객체 직렬화하기 \r6.10 객체 메서드 \r 7장 배열 \r7.1 배열 만들기 \r7.2 배열의 원소 읽고 쓰기 \r7.3 희소배열 \r7.4 배열의 길이 \r7.5 배열에 원소를 추가하거나 삭제하기 \r7.6 배열 순회하기 \r7.7 다차원 배열 \r7.8 배열 메서드 \r7.9 ECMAScript 5 배열 메서드 \r7.10 배열 타입 \r7.11 유사 배열 객체 \r7.12 문자열을 배열처럼 사용하기 \r 8장 함수 \r8.1 함수 정의하기 \r8.2 함수 호출하기 \r8.3 함수 전달인자와 매개변수 \r8.4 값으로서의 함수 \r8.5 네임스페이스로서의 함수 \r8.6 클로저 \r8.7 함수 프로퍼티, 메서드, 생성자 \r8.8 함수형 프로그래밍 \r 9장 클래스와 모듈 \r9.1 클래스와 프로토타입 \r9.2 클래스와 생성자 \r9.3 자바 스타일 클래스 \r9.4 클래스 확장하기 \r9.5 클래스와 자료형 \r9.6 자바스크립트의 객체 지향 기법 \r9.7 서브클래스 \r9.8 ECMAScript 5 클래스 \r9.9 모듈 \r 10장 정규 표현식을 사용한 패턴 매칭 \r10.1 정규 표현식 정의 \r10.2 패턴 매칭을 위한 문자열 메서드 \r10.3 RegExp 객체 \r 11장 자바스크립트 서브셋과 확장 \r11.1 자바스크립트 서브셋 \r11.2 상수와 범위 변수 \r11.3 해체 할당 \r11.4 순회 \r11.5 약칭 함수 \r11.6 다중 catch절 \r11.7 E4X: XML을 위한 ECMAScript \r  12장 서버 측 자바스크립트 \r12.1 라이노를 사용하여 스크립트로 자바를 다루기 \r12.2 노드를 사용한 비동기 I/O \r   2부 클라이언트 측 자바스크립트 \r 13장 웹브라우저의 자바스크립트 \r13.1 클라이언트 측 자바스크립트 \r13.2 HTML 안에 자바스크립트 포함하기 \r13.3 자바스크립트 프로그램의 실행 \r13.4 호환성과 상호운용성 \r13.5 접근성 \r13.6 보안 \r13.7 클라이언트 측 프레임워크 \r 14장 Window 객체 \r14.1 타이머 \r14.2 브라우저의 Location과 Navigation \r 14.3 브라우징 히스토리 \r14.4 브라우저와 화면 정보 \r14.5 대화상자 \r14.6 오류 처리 \r14.7 Window 프로퍼티의 문서 요소 \r14.8 다중 창과 프레임 \r 15장 문서 스크립팅 \r15.1 DOM 개요 \r15.2 문서 요소 선택 \r15.3 문서 구조와 탐색 \r15.4 속성 \r15.5 요소의 내용 \r15.6 노드의 생성, 삽입, 삭제 \r15.7 예제: 문서 목차 만들기 \r15.8 문서와 요소의 기하학적 특징과 스크롤 \r15.9 HTML 폼 \r15.10 Document 객체의 다른 특징들 \r 16장 CSS 다루기 \r16.1 CSS 개요 \r16.2 주요 CSS 프로퍼티 \r16.3 인라인 스타일 스크립팅 \r16.4 계산된 스타일 가져오기 \r16.5 CSS 클래스 스크립팅 \r16.6 스타일시트 스크립팅 \r 17장 이벤트 다루기 \r17.1 이벤트 타입 \r17.2 이벤트 핸들러 등록하기 \r17.3 이벤트 핸들러 호출 \r17.4 문서 로딩 관련 이벤트 \r17.5 마우스 관련 이벤트 \r17.6 마우스 휠 관련 이벤트 \r17.7 드래그 앤 드롭 관련 이벤트 \r17.8 텍스트 관련 이벤트 \r17.9 키보드 관련 이벤트 \r 18장 HTTP 스크립팅 \r18.1 XMLHttpRequest 사용하기 \r18.2 [script] 요소를 활용한 HTTP : JSONP \r 18.3 Server-Sent 이벤트를 활용한 Comet \r  19장 jQuery 라이브러리 \r19.1 jQuery의 기초 \r19.2 jQuery에서 값 가져오고 지정하기 \r19.3 문서 구조 변경 \r19.4 jQuery로 이벤트 다루기 \r19.5 애니메이션 효과 주기 \r19.6 jQuery를 이용한 Ajax \r 19.7 유틸리티 함수 \r19.8 jQuery 선택자와 선택 관련 메서드 \r19.9 플러그인으로 jQuery 확장하기 \r19.10 jQuery UI 라이브러리 \r 20장 클라이언트 스토리지 \r20.1 로컬 스토리지와 세션 스토리지 \r20.2 쿠키 \r20.3 영속적인 IE userData \r 20.4 애플리케이션 스토리지와 오프라인 웹앱 \r 21장 미디어와 그래픽 스크립팅 \r21.1 이미지 스크립팅 \r21.2 오디오와 비디오 스크립팅 \r21.3 SVG: Scalable Vector Graphics \r 21.4 [canvas] 그래픽 \r 22장 HTML5 API \r 22.1 Geolocation \r 22.2 히스토리 관리 \r22.3 교차 출처 간 메시징 \r22.4 웹 워커 \r22.5 타입 배열과 배열 버퍼 \r22.6 Blob 832 \r 22.7 파일 시스템 API \r 22.8 클라이언트 측 데이터베이스 \r22.9 웹 소켓 \r  3부 코어 측 자바스크립트 레퍼런스 \r  4부 클라이언트 측 자바스크립트 레퍼런스 \r   찾아보기\n",
        "isbn10": "8966261795",
        "isbn13": "9788966261796"
    },
    {
        "title": "자바 객체지향 디자인 패턴 (UML과 GoF 디자인 패턴 핵심 10가지로 배우는)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7467601",
        "image": "https://bookthumb-phinf.pstatic.net/cover/074/676/07467601.jpg?type=m1&udate=20170103",
        "author": "정인상|채흥석",
        "price": "28000",
        "discount": "25200",
        "publisher": "한빛미디어",
        "pubdate": "20140402",
        "isbn": "8968480915 9788968480911",
        "description": "객체지향 이론과 UML을 통해 GoF 디자인 패턴의 핵심 10가지를 배운다.. 5단계 학습법으로 디자인 패턴을 정복한다. 문제 사례 설명: 실생활에서 일어날 사례 하나를 설명하고 이를 분석해서 정리하는 과정을 다룬다. 문제점 인식: 해당 사례의 문제점이 무엇인지를 확인하고, 해결책을 도입하는 데 해야 할 일이... ",
        "authorIntroContent": "\n정인상\n저자 : 정인상저자 정인상은 현재 한성대학교 컴퓨터공학과 교수로 재직 중이다. 누구보다 뜨거운 열정을 품고 한 사람이라도 프로그래밍에 좀 더 익숙해지기를 바라는 분이다. 관심 분야는 애자일 프로세스와 테스트, 객체지향 설계, 테스트 프로세스, 테스트케이스 자동 생성이다.저자 : 채흥석저자 채흥석은 현재 부산대 정보컴퓨터공학부 교수로 재직 중이다. 척박한 국내 프로젝트 현실에 객체지향 CBD 관련 기법을 직접 적용하면서 나름의 이론체계를 정립했으며, 지금도 소프트웨어 개발 프로세스의 개선을 위해 다양한 실험적 연구 활동을 활발히 하고 있다. 관심 분야는 객체지향 설계, 컴포넌트 기반 설계, 테스트 케이스 설계, 테스트 프로세스다.\n",
        "bookIntroContent": "객체지향 이론과 UML을 통해 GoF 디자인 패턴의 핵심 10가지를 배운다.. 5단계 학습법으로 디자인 패턴을 정복한다. 문제 사례 설명: 실생활에서 일어날 사례 하나를 설명하고 이를 분석해서 정리하는 과정을 다룬다. 문제점 인식: 해당 사례의 문제점이 무엇인지를 확인하고, 해결책을 도입하는 데 해야 할 일이 무엇인지를 파악한다. 해결책 도입: 인식한 문제점을 실제로 해결한다. 문제점을 해결하다 보면 굳이 해당 디자인 패턴의 이론을 인식하지 않아도 디자인 패턴을 습득할 수 있다. 해당 패턴 설명: 지금까지 배운 사례를 정리하면서 해당 디자인 패턴의 이론을 정립한다. 연습 문제 해결: 다른 사례를 해당 디자인 패턴 방식으로 해결하면서 응용력을 향상한다.",
        "tableOfContentsContent": "\nCHAPTER 1 객체지향 모델링\r__1.1 모델링\r__1.2 UML\r__1.3 클래스 다이어그램\r____1.3.1 클래스\r____1.3.2 관계\r__체크포인트 해설\r__연습문제\r CHAPTER 2 객체지향 원리\r__2.1 추상화\r__2.2 캡슐화\r__2.3 일반화 관계\r____2.3.1 일반화는 또 다른 캡슐화\r____2.3.2 일반화 관계와 위임\r____2.3.3 집합론 관점으로 본 일반화 관계\r__2.4 다형성\r__2.5 피터 코드의 상속 규칙\r__체크포인트 해설\r__연습문제\r CHAPTER 3 SOLID 원칙\r__3.1 단일 책임 원칙\r____3.1.1 책임의 의미\r____3.1.2 변경\r____3.1.3 책임 분리\r____3.1.4 산탄총 수술\r____3.1.5 관심지향 프로그래밍과 횡단 관심 문제\r__3.2 개방-폐쇄 원칙\r__3.3 리스코프 치환 원칙\r__3.4 의존 역전 원칙\r__3.5 인터페이스 분리 원칙\r__체크포인트 해설\r__연습문제\r CHAPTER 4 디자인 패턴\r__4.1 디자인 패턴의 이해\r__4.2 GoF 디자인 패턴\r__4.3 UML과 디자인 패턴\r____4.3.1 컬레보레이션\r____4.3.2 순차 다이어그램\r____4.3.3 순차 다이어그램과 클래스 다이어그램의 관계\r__체크포인트 해설\r__연습문제\r CHAPTER 5 스트래티지 패턴\r__5.1 로봇 만들기\r__5.2 문제점\r____5.2.1 기존 로봇의 공격과 이동 방법을 수정하는 경우\r____5.2.2 새로운 로봇에 공격/이동 방법을 추가/수정하는 경우\r__5.3 해결책\r__5.4 스트래티지 패턴\r__연습문제\r CHAPTER 6 싱글턴 패턴\r__6.1 프린터 관리자 만들기\r__6.2 문제점\r__6.3 해결책\r__6.4 싱글턴 패턴\r__6.5 싱글턴 패턴과 정적 클래스\r__연습문제\r CHAPTER 7 스테이트 패턴\r__7.1 상태 머신 다이어그램\r__7.2 형광등 만들기\r__7.3 문제점\r__7.4 해결책\r__7.5 스테이트 패턴\r__연습문제\r CHAPTER 8 커맨드 패턴\r__8.1 만능 버튼 만들기\r__8.2 문제점235\r____8.2.1 버튼을 눌렀을 때 다른 기능을 실행하는 경우\r____8.2.2 버튼을 누르는 동작에 따라 다른 기능을 실행하는 경우\r__8.3 해결책\r__8.4 커맨드 패턴\r__연습문제\r CHAPTER 9 옵서버 패턴\r__9.1 여러 가지 방식으로 성적 출력하기\r__9.2 문제점\r____9.2.1 성적을 다른 형태로 출력하는 경우\r____9.2.2 동시 혹은 순차적으로 성적을 출력하는 경우\r__9.3 해결책\r__9.4 옵서버 패턴\r__연습문제\r CHAPTER 10 데커레이터 패턴\r__10.1 도로 표시 방법 조합하기\r__10.2 문제점\r____10.2.1 또다른 도로 표시 기능을 추가로 구현하는 경우\r____10.2.2 여러 가지 추가 기능을 조합해야 하는 경우\r__10.3 해결책\r__10.4 데커레이터 패턴\r__연습문제\r CHAPTER 11 템플릿 메서드 패턴\r__11.1 여러 회사의 모터 지원하기\r__11.2 문제점\r__11.3 해결책\r__11.4 템플릿 메서드 패턴\r__연습문제\r CHAPTER 12 팩토리 메서드 패턴\r__12.1 여러 가지 방식의 엘리베이터 스케줄링 방법 지원하기\r__12.2 문제점\r__12.3 해결책\r__12.4 팩토리 메서드 패턴\r__연습문제\r CHAPTER 13 추상 팩토리 패턴\r__13.1 엘리베이터 부품 업체 변경하기\r__13.2 문제점348\r____13.2.1 다른 제조 업체의 부품을 사용해야 하는 경우\r____13.2.2 새로운 제조 업체의 부품을 지원해야 하는 경우\r__13.3 해결책\r__13.4 추상 팩토리 패턴\r__연습문제\r CHAPTER 14 컴퍼지트 패턴\r__14.1 컴퓨터에 추가 장치 지원하기\r__14.2 문제점\r__14.3 해결책\r__14.4 컴퍼지트 패턴\r__연습문제\r 연습문제 정답 및 해설\r 찾아보기\n",
        "isbn10": "8968480915",
        "isbn13": "9788968480911"
    },
    {
        "title": "생활코딩! 자바 프로그래밍 입문 (처음 프로그래밍을 시작하는 입문자의 눈높이에 맞춘)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11343677",
        "image": "https://bookthumb-phinf.pstatic.net/cover/113/436/11343677.jpg?type=m1&udate=20190219",
        "author": "이고잉",
        "price": "27000",
        "discount": "24300",
        "publisher": "위키북스",
        "pubdate": "20161205",
        "isbn": "1158390513 9791158390518",
        "description": "매일 매일 밥 먹듯이 배우는 자바 프로그래밍!생활코딩은 일반인에게 프로그래밍을 알려주는 것을 목적으로 하는 비영리 교육 활동이다. 이 책 [생활코딩! 자바 프로그래밍 입문]은 생활코딩에서... 정리함으로써 자바 언어를 처음 접하는 분들도 이 책의 내용을 따라 하는 과정에서 자연스럽게 자바... ",
        "authorIntroContent": "\n이고잉\n저자 : 이고잉저자 이고잉은생활코딩 운영자오픈튜토리얼스(HTTPS://OPENTUTORIALS.ORG/) 운영진\n",
        "bookIntroContent": "매일 매일 밥 먹듯이 배우는 자바 프로그래밍!생활코딩은 일반인에게 프로그래밍을 알려주는 것을 목적으로 하는 비영리 교육 활동이다. 이 책 [생활코딩! 자바 프로그래밍 입문]은 생활코딩에서 제공하는 수업 가운데 『JAVA 입문 수업』을 정리한 책이다. 이 수업은 프로그래밍을 처음 시작하는 분들의 눈높이에 맞게 만들어진 강의로서 동영상이나 텍스트만으로도 학습할 수 있게 만들어져 있다.이 책에서는 동영상 강의 내용을 토대로 개발 환경을 최신 내용으로 반영하고 강의 내용을 좀 더 이해하기 쉽게 다듬고 정리함으로써 자바 언어를 처음 접하는 분들도 이 책의 내용을 따라 하는 과정에서 자연스럽게 자바 프로그래밍을 익힐 수 있을 것이다.* 인세는 저자의 뜻에 따라서 비영리 단체 OPENTUTORIALS.ORG의 후원금으로 사용됩니다.",
        "tableOfContentsContent": "\n▣ 01장: 언어 소개 \r01. 자바란? \r02. 학습 방법 \r03. 자바를 배우기 위한 자료 \r04. 강의 소개 \r05. 강의 수준 \r06. 선행학습 \r07. 학습의 효용 \r08. 세부 학습 방법 \r09. 수업의 한계 \r ▣ 02장: 자바 설치 \r01. 리눅스에 자바 설치하기 \r02. 리눅스에 자바 내려받아 설치하기 \r03. 윈도우에 자바 설치하기 \r04. 맥 OS X에 자바 설치하기 \r ▣ 03장: 실행 \r01. 리눅스에서 실행 \r02. 맥 OS X에서 실행 \r03. 윈도우에서 실행 \r ▣ 04장: 개발 도구와 이클립스 \r01. 맥 OS X에서 이클립스 설치 및 실행 \r02. 윈도우에서 이클립스 설치 및 실행 \r0.3 리눅스에서 이클립스 설치 및 실행 \r ▣ 05장: 이클립스의 기능과 예제 사용법 \r ▣ 06장: 숫자와 문자 \r01. 숫자\r02. 문자\r ▣ 07장: 변수 \r01. 변수란?\r02. 정수와 실수 \r03. 문자열 \r04. 변수가 없다면? \r ▣ 08장: 주석과 세미콜론 \r01. 주석\r02. 세미콜론 \r ▣ 09장: 데이터 타입 \r01. 데이터 타입이란? \r02. 데이터 타입 비교 \r ▣ 10장: 상수의 데이터 타입 \r ▣ 11장: 형 변환 \r01. 형 변환이란? \r02. 자동 형 변환 \r03. 명시적 형 변환 \r ▣ 12장: 연산자 \r01. 연산자란? \r02. 형 변환 \r03. 단항 연산자 \r04. 연산자의 우선순위 \r ▣ 13장: 비교와 불린 \r ▣ 14장: 조건문 \r01. 조건문이란? \r02. else \r03. 변수와 비교 연산자, 그리고 조건문 \r04. 조건문의 중첩 \r05. switch 문 \r ▣ 15장: 논리 연산자 \r01. &&(and 연산자) \r02. || (or 연산자) \r03. ! (not 연산자) \r ▣ 16장: 반복문 \r01. 반복문이란? \r02. for 문 \r03. 반복문이 없다면? \r04. 반복문의 제어 \r05. 반복문의 중첩 \r ▣ 17장: 배열 \r01. 배열이란? \r02. 배열의 정의 \r03. 배열의 제어 \r04. 반복문과 배열의 조화 \r05. for-each \r06. 배열의 오류와 한계 \r ▣ 18장: 메소드 \r01. 개요 \r02. 메소드 정의와 호출 \r03. 메소드가 없다면? \r04. 메소드의 입력값 \r05. 메소드의 출력값 1\r06. 메소드의 출력값 2 \r ▣ 19장: 입력과 출력 \r01. 개요 \r02. 시작할 때 입력 1 \r03. 시작할 때 입력 2 \r04. 실행 중에 입력 1 \r05. 실행 중에 입력 2 \r06. 다양한 입출력 \r07. 시즌 1을 마치며 \r ▣ 20장: 객체지향 프로그래밍 \r01. 개요 \r02. 추상화 \r03. 부품화 \r ▣ 21장: 클래스와 인스턴스, 그리고 객체 \r01. 객체지향 이전의 코딩 1 \r02. 객체지향 이전의 코딩 2 \r03. 객체화 1 \r04. 객체화 2 \r05. 객체화 3 \r ▣ 22장: 클래스 멤버와 인스턴스 멤버 \r01. 멤버 \r02. 클래스 변수 \r03. 클래스 메소드 \r04. 타입별 비교 \r ▣ 23장: 유효범위 \r01. 유효범위란? \r02. 전역변수, 지역변수 \r03. 다양한 유효범위 \r04. 인스턴스의 유효범위 \r ▣ 24장: 초기화와 생성자 \r01. 초기화와 생성자 \r ▣ 25장: 상속 \r01. 상속이란? \r02. 코드로 알아보는 상속 \r03. 다양한 종류의 상속 \r ▣ 26장: 상속과 생성자 \r01. 기본 생성자 \r02. super \r ▣ 27장: 오버라이딩 \r01. 창의적인 상속 \r02. 오버라이딩 \r ▣ 28장: 오버로딩 \r01. 오버로딩 \r02. 오버로딩의 규칙 \r ▣ 29장: 클래스패스 \r01. 컴파일과 클래스 \r02. 클래스와 경로의 관계 \r03. 환경변수 \r ▣ 30장: 패키지 \r01. 패키지의 개념 \r02. 패키지의 사용 \r03. 손 컴파일 \r04. 중복의 회피 \r ▣ 31장: API와 API 문서 보는 법 \r01. 기본 패키지와 사용자 정의 로직 \r02. UI와 API \r03. API 문서 보는 법 \r ▣ 32장: 접근 제어자 \r01. 자유와 규제 \r02. 문법 \r03. 접근 제어자를 사용하는 이유 \r04. 세밀한 제어 \r05. 클래스 접근 제어자 \r ▣ 33장: Abstract \r01. 문법 \r02. 추상 메소드와 추상 클래스를 사용하는 이유 \r03. 디자인 패턴 \r ▣ 34장: final \r01. final \r ▣ 35장: 인터페이스 \r01. 문법과 개념 \r02. 인터페이스를 사용하는 이유 \r03. 인터페이스의 규칙 \r ▣ 36장: 다형성 \r01. 메소드와 다형성 \r02. 클래스와 다형성 1\r03. 클래스와 다형성 2\r04. 실전 예제 \r05. 인터페이스와 다형성 1\r06. 인터페이스와 다형성 2\r ▣ 37장: 예외 \r01. 개요 \r02. 예외란 무엇인가?\r03. 뒷수습 \r04. 다양한 예외와 다중 캐치 \r05. finally \r ▣ 38장: 예외 던지기 \r01. 예외의 강제 \r02. 예외 사슬 \r03. 책임의 전가 throws \r ▣ 39장: 예외 만들기 \r01. 예외 만들기 \r02. 예외의 여러 가지 상황들 \r03. Throwable \r04. 사용자 정의 예외 \r ▣ 40장: Object 클래스 \r01. 소개 \r02. toString \r03. equals \r04. finalize \r05. clone \r ▣ 41장: 상수와 enum \r01. 상수에 대한 복습 \r02. enum의 도입 배경 \r03. enum의 문법 \r04. 열거형의 활용 \r ▣ 42장: 참조 \r01. 복제란? \r02. 참조란? \r03. 참조와 복제 \r04. 메소드의 매개변수와 참조, 복제 \r ▣ 43장: 제네릭 \r01. 제네릭의 사용법 \r02. 제네릭을 사용하는 이유 \r03. 제네릭의 특성 1\r04. 제네릭의 특성 2\r05. 제네릭의 제한 \r ▣ 44장: 컬렉션 프레임워크 \r01. 배열과 컬렉션 프레임워크 \r02. 컬렉션 프레임워크의 구성 \r03. List와 Set의 차이점 \r04. Set이란? \r05. Collection 인터페이스 \r06. Iterator \r07. Map의 기본 사용법 1 \r08. Map의 기본 사용법 2 \r09. 컬렉션의 사용법과 정렬 \r 수업을 마치며\n",
        "isbn10": "1158390513",
        "isbn13": "9791158390518"
    },
    {
        "title": "리팩토링 자바스크립트 (지저분한 자바 스크립트 코드에서 벗어나자!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14049175",
        "image": "https://bookthumb-phinf.pstatic.net/cover/140/491/14049175.jpg?type=m1&udate=20181011",
        "author": "에반 버차드",
        "price": "36000",
        "discount": "32400",
        "publisher": "길벗",
        "pubdate": "20181012",
        "isbn": "1160505896 9791160505894",
        "description": "더 나은 자바스크립트 코드를 만드는 최선의 방법\n리팩토링 자바스크립트!코드의 기본 품질이 좋지 않으면 항상 버그와 성능 문제가 생긴다. 버그는... 이 책은 자바스크립트의 품질에 집중해 더 나은 코드를 만들기 위한 최선의 방법들을 소개한다. 코드 변경과 리팩토링을 구분하는 것부터 테스트 방법, 계층... ",
        "authorIntroContent": "\n에반 버차드\n저자 : 에반 버차드웹 개발 컨설턴트이자 (ADDISON-WESLEY, 2013)의 저자이다. 오프라인에서 실제 얼음 조각을 쌓아 올리는 운동 게임을 디자인하고 상을 받았으며, 주기적으로 미국 전역을 걷는 프로젝트를 진행한다.역자 : 김건희처음 접해본 프로그래밍 언어가 자바스크립트였고, 여러 플랫폼을 자바스크립트 기반의 NODE.JS와 REACT로 구축해왔다. 유연하면서도 확장 가능성이 많은 자바스크립트에 큰 매력을 느껴 지속적으로 깊게 공부하고 있다.\n",
        "bookIntroContent": "더 나은 자바스크립트 코드를 만드는 최선의 방법리팩토링 자바스크립트!코드의 기본 품질이 좋지 않으면 항상 버그와 성능 문제가 생긴다. 버그는 마술처럼 사라지지 않고, 또 다른 버그를 만들기도 한다. 이 책은 자바스크립트의 품질에 집중해 더 나은 코드를 만들기 위한 최선의 방법들을 소개한다. 코드 변경과 리팩토링을 구분하는 것부터 테스트 방법, 계층 구조, OOP 패턴, 비동기 프로그래밍과 함수형 프로그래밍 원리를 적용하는 리팩토링까지 다양한 주제에 걸쳐 문제를 보여주고 이를 해결한다. 특히 책 전반에 걸쳐 다양한 코드로 실제 리팩토링 과정을 보여주기 때문에 직접 실행해 보며 확실하게 이해할 수 있다.",
        "tableOfContentsContent": "\n1장 리팩토링이란?\r1.1코드 동작이 변하지 않는다는 것을 어떻게 보장할 수 있을까?\r1.2구현 세부 사항에 관심을 두면 어떨까?\r1.3불특정하고 검증되지 않은 동작에 관심을 두면 어떨까?\r1.4성능에 관심을 두면 어떨까?\r1.5동작이 변하지 않는다면 리팩토링의 요점은?\r1.6품질 균형 잡기와 일 끝마치기\r1.7품질이란 무엇이며 리팩토링과 어떤 관련이 있을까?\r1.8탐험으로서 리팩토링\r1.9어떤 것이 리팩토링이고 어떤 것이 아닐까?\r1.10마무리 \r 2장 어떤 자바스크립트를 사용하고 있을까?\r2.1버전 및 사양\r2.2플랫폼과 구현\r2.3미리 컴파일된 언어\r2.4프레임워크\r2.5라이브러리\r2.6어떤 자바스크립트가 필요할까?\r2.7우리는 어떤 자바스크립트를 사용하고 있을까?\r2.8마무리\r 3장 테스트\r3.1테스트를 해야 하는 많은 이유\r3.2여러 가지 테스트 방법\r3.2.1수동 테스트\r3.2.2문서화된 수동 테스트\r3.2.3승인 테스트\r3.2.4종단 간 테스트\r3.2.5단위 테스트\r3.2.6비기능적 테스트\r3.2.7기타 유익한 테스트 유형\r3.3도구와 절차\r3.3.1품질 절차\r3.3.2품질 도구\r3.4마무리\r 4장 테스트 실습\r4.1처음부터 새로운 코드 만들기\r4.2테스트 주도 개발로 처음부터 새로운 코드 만들기\r4.3테스트되지 않은 코드와 특성화 테스트\r4.4디버깅과 회귀 테스트\r4.5마무리\r 5장 기본적인 리팩토링 목표\r5.1대규모 함수\r5.2입력\r5.3출력\r5.4부가 작용\r5.5상황 1: 암시적 입력\r5.5.1Strict 모드에서 this\r5.6상황 2: 비공개\r5.6.1자바스크립트에도 비공개가 있을까?\r5.7마무리 \r 6장 간단한 구조 리팩토링\r6.1코드\r6.2확신 전략\r6.3이름 바꾸기\r6.4불필요한 코드\r6.4.1죽은 코드\r6.4.2코드 추측과 주석\r6.4.3공백\r6.4.4아무것도 하지 않는 코드\r6.4.5디버깅·로깅 구문\r6.5변수\r6.5.1매직 넘버\r6.5.2긴 코드 줄: 파트 1(변수)\r6.5.3인라인 함수 호출\r6.5.4변수 도입(소개)\r6.5.5변수 호이스팅\r6.6문자열\r6.6.1문자열 연결, 매직, 템플릿\r6.6.2문자열을 처리하는 기본 정규식\r6.6.3긴 코드 줄: 파트 2(문자열)\r6.7배열을 이용한 작업: 반복문, forEach, map\r6.7.1긴 코드 줄: 파트 3(배열)\r6.7.2어떤 반복문을 선택할까?\r6.7.3반복문보다 나은 선택\r6.8마무리\r 7장 리팩토링 함수와 객체\r7.1개선된 코드\r7.2배열과 객체 대안\r7.2.1배열 대안: Set\r7.2.2배열 대안: 객체\r7.2.3객체 대안: Map\r7.2.4배열 대안: 비트 필드\r7.3가진 것 테스트\r7.3.1설정 테스트\r7.3.2classify를 위한 특성화 테스트\r7.3.3welcomeMessage 테스트\r7.3.4labelProbabilities 테스트\r7.4함수 추출\r7.4.1절차 코드 제거\r7.4.2익명 함수 추출과 이름 짓기\r7.4.3함수 호출과 리터럴 함수\r7.5하나의 전역 객체로 API 간소화\r7.5.1classifier 객체 추출\r7.5.2setup 함수 인라인화\r7.5.3songList 객체 추출\r7.5.4남은 전역 변수 처리\r7.5.5프로그램에서 데이터를 독립적으로 만들기\r7.5.6범위 지정 선언: var, let, const\r7.5.7classifier로 classify 가져오기\r7.5.8중복 값 해결\r7.5.9중복 정보가 있는 객체\r7.5.10classifier로 다른 함수와 변수 가져오기\r7.5.11짧은 구문: Arrow, 객체 함수, 객체\r7.5.12생성자 함수로 새로운 개체 얻기\r7.5.13생성자 함수 vs 팩토리 함수\r7.5.14Classifier를 위한 클래스\r7.5.15API 선택\r7.5.16비공개\r7.5.17새 문제 영역에 분류자 적용\r7.6마무리\r 8장 계층 구조 내부의 리팩토링\r8.1CRUD 애플리케이션과 프레임워크\r8.2계층 구조 구축하기\r8.3계층 구조 파헤치기\r8.3.1생성자 함수\r8.3.2리터럴 객체\r8.3.3팩토리 함수\r8.3.4계층 구조를 위한 선택 항목 평가\r8.4상속과 구조\r8.4.1왜 몇몇 사람은 클래스를 싫어할까?\r8.4.2다중 상속은 어떨까?\r8.4.3어떤 인터페이스를 원하는가?\r8.5Has-A 관계\r8.6좋지 않은 상속 패턴\r8.6.1과도한 상속\r8.6.2늑대가 키운 염소와 양배추\r8.7마무리\r 9장 OOP 패턴으로 리팩토링\r9.1템플릿 메서드\r9.1.1기능적 변형\r9.2전략\r9.3상태\r9.4null 객체\r9.5래퍼(데코레이터와 어댑터)\r9.6퍼사드\r9.7마무리\r 10장 비동기 리팩토링\r10.1왜 비동기인가?\r10.2피라미드 운명 수정\r10.2.1포함 객체로 함수 추출\r10.2.2비동기 프로그램 테스트\r10.2.3추가 테스트 고려 사항\r10.3콜백과 테스트\r10.3.1CPS와 IoC 기본\r10.3.2콜백 스타일 테스트\r10.4프로미스\r10.4.1프로미스 인터페이스의 기본\r10.4.2프로미스의 생성 및 사용\r10.4.3프로미스 테스트\r10.5마무리 \r 11장 함수형 프로그래밍\r11.1함수형 프로그래밍의 제약과 이점\r11.1.1제약\r11.1.2이점\r11.1.3함수형 프로그래밍의 전망(추측)\r11.2함수형 프로그래밍 기초\r11.2.1파괴적인 동작, 변경, 재할당 방지\r11.2.2null은 반환하지 말자!\r11.2.3참조적 투명성 및 상태 회피\r11.2.4무작위 처리\r11.2.5비순수 함수 멀리하기\r11.3고급 함수형 프로그래밍\r11.3.1커링과 부분 적용, 람다와 함께\r11.3.2함수 구성\r11.3.3최소한의 타입\r11.4브리또\r11.4.1Sanctuary 소개\r11.4.2다시 살펴보는 null 객체 패턴\r11.4.3Maybe를 이용한 함수형 리팩토링\r11.4.4Either를 이용한 함수형 리팩토링\r11.5브리또 배우고 사용하기\r11.6OOP에서 FP로 이동하기\r11.6.1나이브 베이즈 분류기의 귀환\r11.6.2재작성\r11.7마무리\r  \n",
        "isbn10": "1160505896",
        "isbn13": "9791160505894"
    },
    {
        "title": "자바가 보이는 그림책 (Java가 좋아지는 새로운 9개 관문)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14008403",
        "image": "https://bookthumb-phinf.pstatic.net/cover/140/084/14008403.jpg?type=m1&udate=20180915",
        "author": "ANK CO.|Ltd.",
        "price": "17000",
        "discount": "15300",
        "publisher": "성안당",
        "pubdate": "20180910",
        "isbn": "8931555709 9788931555707",
        "description": "알기 쉬운 JAVA 언어 입문서 최신 개정판\n《JAVA가 보이는 그림책》[JAVA가 보이는 그림책]은 프로그램을 아무것도 몰라도 JAVA 프로그램을 시작할 수 있도록 한 야심찬 입문서입니다. 이번에 최신 JAVA에 대응한 개정판이 새롭게 출간?습니다.\n장마다 풍성한 일러스트를 사용하여 다들 어려워하는 클래스와... ",
        "authorIntroContent": "\nANK Co.\n저자 : ANK CO.저자 ANK CO., LTD.소프트웨어 개발에서 웹사이트 구축, 디자인, 서적 집필까지 폭넓게 일하는 회사다. 그림책 시리즈로 C가 보이는 그림책, C++이 보이는 그림책, ANDROID가 보이는 그림책 외에, 사전 시리즈로 HTML5&CSS3 사전,홈페이지 사전, HTML 태그 사전, CSS 사전, JAVASCRIPT 사전 등(모두 翔泳社 간행) 다수의 서적을 발행했다.역자 : 김성훈역자 김성훈- 컴퓨터 분야 전문 번역가[주요 번역서][프로그래밍이 보이는 그림책], [C가 보이는 그림책], [C기초 프로그래밍], [UML 모델링의 본질], [OBJECTIVE-C 프로그래밍], [게임 프로그래밍의 정석], [구글을 지탱하는 기술] 등이 있다.감수 : 변종석감수자 변종석자바 유저스넷 1대 운영자이며, 현재 JAVACOMMUNITY.ORG 회장\n",
        "bookIntroContent": "알기 쉬운 JAVA 언어 입문서 최신 개정판《JAVA가 보이는 그림책》[JAVA가 보이는 그림책]은 프로그램을 아무것도 몰라도 JAVA 프로그램을 시작할 수 있도록 한 야심찬 입문서입니다. 이번에 최신 JAVA에 대응한 개정판이 새롭게 출간?습니다.장마다 풍성한 일러스트를 사용하여 다들 어려워하는 클래스와 객체에 대해서도 개념을 바로 이해할 수 있게끔 한 가장 간단한 JAVA 입문서입니다.SHOEISHA의 [그림책 시리즈]의 라인업을 업데이트!SHOEISHA의 [그림책 시리즈]는 이름 그대로 그림책처럼 풍부한 일러스트와 요점을 추린 간결한 해설로 컴퓨터 기술에 입문할 수 있는 초보자를 위한 시리즈입니다. 모든 단원을 2페이지로 구성하여 읽기 쉽게 정리했으며 기초에 충실한 내용으로, 언어/기술 초보자나 간편하게 습득하고 싶은 분에게 도움이 됩니다.이번에 SHOEISHA는 [그림책 시리즈]를 전면적으로 개정하고 내용을 현재의 기술에 따라 검토했습니다. 시리즈 라인업 전체를 리뉴얼하고 새로운 패키지로 제공합니다.새로운 [그림책 시리즈]는 기존의 이해 용이성, 편의, 기초에 충실한 내용이라는 콘셉트는 그대로 두고, WEB/넷이 전성기를 맞이한 현재의 컴퓨터 기술의 흐름에 맞춘 해설에 중점을 두었습니다. [JAVA가 보이는 그림책], [C가 보이는 그림책]을 시작으로 라인업을 순차적으로 쇄신할 예정입니다.",
        "tableOfContentsContent": "\n제0장 Java를 시작하기 전에\r1. Java 언어의 위상 \r2. Java로 할 수 있는 것\r3. Java VM\r4. Java 프로그램 개발 툴 \r5. 프로그래밍의 기본적인 흐림 \r6. 프로그램 기술 시의 약속 \r 제1장 프로그램의 기본 \r1. Hello World!\r2. Printf( ) 메소드 \r3. 변수 \r4. 수치형 \r5. 문자와 문자열 \r6. 문자열 자유재재(1) \r7. 문자열 자유재재(2) \r8. 배열 \r9. 다차원 배열(1) \r10. 다차원 배열(2) \r 제2장 연산자 \r1. 산술 연산자(1) \r2. 산술 연산자(2) \r3. 비교 연산자 \r4. 논리형 \r5. 논리 연산자 \r6. 수치와 단위 \r7. 형 변환 \r8. 연산의 우선순위 \r 제3장 연산자 \r1. if문(1) \r2. if문(2) \r3. for문 \r4. for문의 확장 \r5. while문 \r6. 루프의 중단 \r7. switch문 \ri\r제4장 클래스의 기초\r1. 클래스의 개념 \r2. 오브젝트의 생성 \r3. 필드 \r4. 메소드의 정의 \r5. 메소드 호출하기(1)\r6. 메소드 호출하기(2) \r7. 가변 길이 인수 \r8. 오버로드 \r9. 생성자 \r10. 여러 가지 생성자\r11. main( ) 메소드 \r 제5장 클래스의 상속\r1. 상속 \r2. 상속의 정의 \r3. private 접근 제한자 \r4. 오버라이드 \r5. 오버라이드의 확장 \r6. 여러 가지 제한자 \r 제6장 클래스의 응용\r1. 추상 클래스 \r2. 인터페이스 \r3. 인터페이스의 상속 \r4. 인터페이스의 특수한 메소드 \r5. 다형성(1) \r6. 다형성(2) \r7. 오브젝트의 종류 \r8. 제네릭 \r9. 컬렉션 클래스 \r10. 열거형 \r 제7장 파일과 스트림\r1. 스트림 \r2. 예외 \r3. 문자 읽기 \r4. 문자 쓰기 \r5. 바이너리 파일의 읽기·쓰기(1) \r6. 바이너리 파일의 읽기·쓰기(2) \r7. 리소스 붙은 try문 \r8. 시리얼라이즈 \r9. 키보드 입력 \r10. Scanner 클래스 \r 제8장 파일과 스트림\r1. 패키지 \r2. Static 임포트 \r3. 접근 제한자 \r4. 랩퍼 클래스 \rAuto-Boxing 212\r 부록 좀 더 힘내 볼까요?\r1. 어노테이션 \r2. 로컬 클래스 \r3. 람다식(1) \r4. 람다식(2) \r5. Stream API \r6. 메소드·생성자 참조 \r7. 스레드 \r8. 시간(1) \r9. 시간(2) \r10. 수학에 관련된 메소드\r11. 비트와 바이트에 관한 연산자(1) \r12. 비트와 바이트에 관한 연산자(2) \r13. JAVA Archive(1) \r14. JAVA Archive(2) \r15. JDK 설치\r \n",
        "isbn10": "8931555709",
        "isbn13": "9788931555707"
    },
    {
        "title": "클라우드 네이티브 자바 (스프링 마이크로서비스 아키텍처와 데브옵스를 실천하는 클라우드 기반 서)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13735012",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/350/13735012.jpg?type=m1&udate=20190215",
        "author": "조쉬 롱|케니 바스타니",
        "price": "38000",
        "discount": "34200",
        "publisher": "책만",
        "pubdate": "20180629",
        "isbn": "1196203733 9791196203733",
        "description": "풀 사이클 개발자로 진화하고 싶은 엔터프라이즈 자바 개발자가 꼭 읽어야 할 클라우드 시대의 생존 지침서!\n스프링 부트, 스프링 클라우드, 클라우드 파운드리를 이용한 다양한 예제를 통해 확장성 높은 마이크로서비스 아키텍처 설계와 데브옵스(DevOps), 애자일 개발의 진정한 실천 방법을 알려준다.",
        "authorIntroContent": "\n조쉬 롱\n저자 : 조쉬 롱저자 조쉬 롱(JOSH LONG)스프링 개발 애드버킷(ADVOCATE)이자 의 자바 큐 편집자이며, 『스프링 레시피 2판』(에이프레스)을 비롯한 여러 권의 책을 저술했다. 그는 더서버사이드 자바 심포지움(THESERVERSIDE JAVA SYMPOSIUM), 스프링원(SPRINGONE), 오스콘(OSCON), 자바존(JAVAZONE), 데복스(DEVOXX), 자바투데이즈(JAVA2DAYS) 등 국제적인 여러 컨퍼런스에 발표자로 참여했다. 스프링 소스 코드 작업을 하지 않을 때는 지역 자바 사용자 그룹이나 커피 숍에 주로 머무른다. 기술의 한계를 극복할 수 있는 솔루션을 좋아하며, 관심 분야는 확장성, BPM(BUSINESS PROCESS MANAGEMENT), 그리드 처리, 모바일 컴퓨팅, '스마트'라는 수식어를 달고 있는 다양한 시스템이다. 스프링 소스 블로그(BLOG.SPRINGSOURCE.ORG)에 글을 쓰며, 개인 블로그(JOSHLONG.COM)도 운영 중이다.저자 : 케니 바스타니저자 케니 바스타니(KENNY BASTANI) 피보탈의 스프링 개발자 애드버킷이다. 오픈소스 기여자이자 블로거로서 그래프 데이터베이스에서 마이크로서비스까지 다양한 주제로 열정적인 개발자 커뮤니티에서 활동 중이며, 오스콘, 스프링원 플랫폼, GOTO와 같은 여러 컨퍼런스에 발표자로 정기적으로 참여한다. 개인 블로그(KENNYBASTANI.COM)에서 소프트웨어 아키텍처에 대한 강좌와 이벤트 주도 마이크로서비스와 서버리스 아키텍처를 만드는 오픈 소스 예제를 볼 수 있다.역자 : 정윤진역자 정윤진커널 및 드라이버 엔지니어로 경력을 시작해서 시스템 엔지니어를 지나 데브옵스를 거쳐 현재는 테크놀로지스트라는 생소한 일을 하고 있다. 카페24 연구소 초기 멤버로 각종 호스팅 서비스의 개발에 참여, 장단기 장애 해결과 일일 단위 문제 해결 등을 수행하다가, 알서포트에서 베어메탈과 AWS 기반의 글로벌 시스템을 한국, 일본, 미국과 유럽 등지에 구현했다. 이후 스파크 앤 어소시에이트에서 클라우드 스케일링 팀과 함께 애자일 기반으로 KT 클라우드 개발 및 국내 제조 회사의 사설 클라우드 개발에 참여했으며, 이후 아마존 웹 서비스의 솔루션 아키텍트로 활동하며 크고 작은 회사의 서비스의 클라우드 마이그레이션을 돕다가, 지금은 피보탈에서 일하고 있다.역자 : 오명운역자 오명운백발 개발자를 꿈꾸며 언제나 버그와 씨름하는 개발자다. 번역을 통해 개발자 생태계에 조금이라도 기여하고자 노력한다. 옮긴 책으로는 『스프링 5.0 마이크로서비스 2/E』, 『D3.JS 실시간 데이터 시각화』(에이콘출판) 등이 있다. HTTP://HOMOEFFICIO.GITHUB.IO/에서 개발 관련 지식을 나누고 있으며, 최근에는 분산 원장 기술에 관심을 가지고 공부 중이다.역자 : 장현희역자 장현희19년째 개발자의 길을 걷고 있는 옮긴이는 지난 17년간 『사이트 신뢰성 엔지니어링』(제이펍)을 비롯한 20여 종의 개발 관련서를 집필하거나 번역했다. 현재는 호주 시드니에 있는 ROKT에서 테크니컬 스페셜리스트로 근무 중이며, 국내 개발자들에게 조금이라도 도움되는 번역서를 만들기 위해 틈틈이 노력 중이다. 앞으로도 책이라는 매개체를 통해 멀리서나마 국내 개발자들과 계속해서 소통할 계획이다.\n",
        "bookIntroContent": "풀 사이클 개발자로 진화하고 싶은 엔터프라이즈 자바 개발자가 꼭 읽어야 할 클라우드 시대의 생존 지침서!스프링 부트, 스프링 클라우드, 클라우드 파운드리를 이용한 다양한 예제를 통해 확장성 높은 마이크로서비스 아키텍처 설계와 데브옵스(DevOps), 애자일 개발의 진정한 실천 방법을 알려준다.",
        "tableOfContentsContent": "\n[1부 기초]\r1장 클라우드 네이티브 애플리케이션 \r아마존 사례 \r플랫폼의 약속 \r패턴 \r확장성 \r신뢰도 \r애자일성 \r넷플릭스 사례 \r__마이크로서비스 \r__일체형쪼개기 \r__넷플릭스 OSS \r__클라우드 네이티브 자바\r12요소 방법론 \r__코드베이스 \r__의존관계 \r__설정 __지원서비스 \r__빌드, 릴리스, 실행 \r__프로세스 \r__포트 바인딩 \r__동시성 \r__처분성 \r__개발/운영 짝맞춤 \r__로그 \r__관리프로세스 \r정리 \r 2장 부트캠프: 스프링부트와 클라우드 파운드리 소개 \r스프링 부트 \r스프링 이니셜라이저 \r스프링 툴 스위트 시작하기 \r__스프링툴 스위트 설치 \r__스프링이니셜라이저로 새 프로젝트 생성 \r스프링 가이드 \r__STS에서스프링 가이드 따라하기 \r설정 \r클라우드파운드리 \r정리 \r 3장12요소 애플리케이션 설정 \r혼동스러운 설정 \r스프링프레임워크의 설정 지원 \r__설정정보 이해를 위한 PropertyPlaceholderConfigurer 클래스 \r__Environment추상화와@Value \r__프로파일\r스프링 부트 방식의 설정 \r스프링클라우드 설정 서버로 중앙 집중형 설정 사용하기 \r__스프링클라우드 설정 서버 \r__스프링클라우드 설정 클라이언트 \r__보안\r새로고침 가능한 설정 \r정리 \r 4장테스트\r테스트의 구성\r스프링 부트 애플리케이션 테스트 \r통합 테스트\r__테스트슬라이스\r__모의기법 활용\r__@SpringBootTest로서블릿 컨테이너 설정 \r__슬라이스\r전 구간 테스트\r__분산시스템 테스트 \r__컨슈머주도 계약 테스트 \r__스프링클라우드 컨트랙트\r정리\r 5장애플리케이션 마이그레이션\r계약\r애플리케이션 환경 마이그레이션\r__바로가져다 쓰는 빌드팩 \r__커스텀빌드팩 \r__컨테이너화된애플리케이션\r애플리케이션을 클라우드로 옮기기 위한 가벼운 리팩토링\r__지원서비스 연동\r__스프링을이용한 서비스 짝맞춤\r정리\r [2부 웹 서비스]\r6장REST API\r레너드 리차드슨의 성숙도 모델\r스프링 MVC를 이용한간단한 REST API \r컨텐트 협상\r__바이너리데이터 읽고 쓰기\r__구글프로토콜 버퍼\r에러 처리 \r하이퍼미디어\r__미디어타입과 스키마\rAPI버저닝\rRESTAPI 문서화 \r클라이언트\r__편리한REST 클라이언트 제품\r__RestTemplate\r정리\r 7장라우팅\rDiscoveryClient추상화\r클라우드 파운드리 라우트 서비스 \r정리\r 8장엣지 서비스\rGreetings서비스\r간단한 엣지 서비스\r넷플릭스 페인\r넷플릭스 주울을 통한 필터링과 프록시\r__커스텀주울 필터\r엣지 서비스의 보안 \rOAuth\r__서비스쪽 애플리케이션\r__HTML5와자바스크립트 단일 페이지 애플리케이션 \r__사용자없는 애플리케이션\r__신뢰할수 있는 클라이언트\r스프링 시큐리티\r스프링 클라우드 시큐리티\r__스프링시큐리티 OAuth 인가 서버\r__Greetings자원서버 보안 조치\r__OAuth보안이적용된 단일 페이지 애플리케이션 만들기\r정리\r [3부 데이터 통합]\r9장데이터 관리\r데이터 모델링\r__관계형데이터베이스 관리 시스템\r__NoSQL\r스프링 데이터\r__스프링데이터 애플리케이션의 구조 \r__도메인클래스\r__리포지토리\r__도메인데이터를 위한 자바 패키지 구성\rJDBC를사용한 RDBMS 접근 시작해보기 \r스프링의 JDBC 지원\r스프링 데이터 예제\r스프링 데이터 JPA\r__계정서비스\r__통합테스트\r스프링 데이터 몽고디비\r__주문서비스\r__통합테스트\r스프링 데이터 네오포제이\r__재고서비스\r__통합테스트\r스프링 데이터 레디스\r__캐싱\r정리\r 10장메시징\r스프링 인티그레이션을 사용한 이벤트 주도 아키텍처\r__메시징종단점\r__간단한컴포넌트에서 복잡한 시스템으로\r메시지 브로커, 브릿지, 경쟁적 컨슈머 패턴, 이벤트 소싱\r__발행-구독 \r__점대점\r스프링 클라우드 스트림\r__스트림프로듀서\r__스트림컨슈머\r정리\r 11장배치 처리와 태스크\r배치 작업 \r스프링 배치\r__첫번째 배치 작업\r스케줄링\r메시징을 사용한 스프링 배치 작업의 원격 파티셔닝 \r태스크 관리\r프로세스 중심의 워크플로우 통합\r메시징을 사용한 분산\r정리\r 12장데이터 통합\r분산 트랜잭션\r장애의 격리와 단계적 성능 저하 \r사가 패턴\rCQRS\r__불만접수 API\r__불만접수 통계 API\r스프링 클라우드 데이터 플로우\r__스트림\r__태스크\r__RESTAPI\r__데이터플로우 클라이언트\r정리\r [4부 운영 환경]\r13장관측 가능한 시스템\r만들면 운영까지\r마이크로서비스 살인 미스테리 \r12요소운영\r새로운 계약\r관측성\r푸시와 풀 기반의 관측성 차이와 분석\r스프링 부트 액추에이터를 사용한 애플리케이션 현재 상태 수집하기\r메트릭\r/info종단점을사용해서 서비스 분별하기\r정상동작 상태 확인\r감사 이벤트\r애플리케이션 로깅\r__로그출력의 지정\r__로그수준의 지정\r분산 추적\r__스프링클라우드 슬루스로 실마리 찾기\r__어느정도의 데이터라야 충분할까\r__오픈집킨: 수천 개의 추적만큼 가치 있는 한 장의 사진 \r__그밖의 플랫폼과 기술\r대시보드\r__히스트릭스대시보드를 사용한 서비스 모니터링 \r__코드센트릭스프링 부트 어드민\r__오디나마이크로서비스 대시보드\r__피보탈클라우드 파운드리의 앱스매니저\r치유 \r정리\r 14장서비스 브로커\r지원 서비스의 수명 주기\r플랫폼으로서의 관점\r스프링 클라우드 클라우드 파운드리 서비스 브로커로 사용자 정의서비스 브로커 구현하기\r__간단한아마존 S3 서비스 브로커 \r__서비스카탈로그\r__서비스인스턴스의 관리\r__서비스바인딩\r__서비스브로커의 보호\r배포\r__보쉬를이용한 릴리스\r__클라우드파운드리를 활용한 릴리스\r아마존 S3 서비스브로커 등록하기 \r아마존 S3 서비스인스턴스 생성하기\r__서비스인스턴스 활용하기\rS3클라이언트애플리케이션 \r전체적인 동작 확인하기 \r정리\r 15장지속적 전달\r지속적 통합을 넘어서\r__플리커와엣시의 존 알스포 \r__넷플릭스의에이드리안 코크로프트 \r__아마존의지속적 전달\r파이프라인\r테스트\r마이크로서비스 환경에서의 지속적 전달 \r도구\r__컨코스\r__컨테이너\r마이크로서비스의 지속적 전달\r__컨코스설치\r__기본적인파이프라인 디자인 \r__지속적통합\r컨슈머 주도 계약 테스트\r__사용자마이크로서비스의 파이프라인\r데이터\r운영 환경으로!\r [5부 부록]\r부록 A자바EE와 스프링 부트\r부록 B [한국어판 특별부록]클라우드파운드리 환경의 준비와 활용\r\n",
        "isbn10": "1196203733",
        "isbn13": "9791196203733"
    },
    {
        "title": "자바스크립트+jQuery 완전정복 스터디 1 (기초편)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=9650891",
        "image": "https://bookthumb-phinf.pstatic.net/cover/096/508/09650891.jpg?type=m1&udate=20190709",
        "author": "김춘경",
        "price": "27000",
        "discount": "24300",
        "publisher": "위키북스",
        "pubdate": "20151016",
        "isbn": "1158390122 9791158390129",
        "description": "구성된 『자바스크립트+JQUERY 완전정복 스터디』 제1권 기초편. 처음 웹프로그래밍 입문자라면 반드시 알아야 할 자바스크립트 코어 문법, 자바스크립트 함수 단위 프로그래밍, 자바스크립트 코어 라이브러리 등의 내용을 다루고 있으며 알기 쉽고 이해하기 쉽도록 다양한 그림과 예제로 차근차근 친절하게... ",
        "authorIntroContent": "\n김춘경\n저자 : 김춘경저자 김춘경(딴동네)는 웹 분야 중 주로 웹프론트엔드 개발과 웹앱 & 모바일웹앱 개발자로 활동하고 있으며 책 집필과 IT학원에서 웹 기술과 관련된 강의를 하고 있습니다. 또한 웹프론트엔드 개발자를 위한 온오프라인 공간인 웹동네를 운영하고 있습니다.웹동네는 웹앱과 웹프론트엔드 분야를 전문으로 연구하고 학습하는 그룹으로서, 온라인에서는 온라인 동영상 강의, 소셜 스터디, 정보공유 등을 진행하는 웹동네(HTTP://WWW.WEBDONGNE.COM) 사이트를 운영 중이며 오프라인에서는 맞춤형 스터디, 정보 공유 세미나, 실무 특강을 진행할 수 있는 웹동네 모임 공간을 운영하고 있습니다.\n",
        "bookIntroContent": "이제 막 시작하는 초급자를 위한 초급 단계와 일반 실무자의 실력 향상을 위한 중급/고급/실무 단계로 구성돼 있으며 개인의 실력과 목적에 맞게 선택해서 스터디를 진행할 수 있도록 구성된 『자바스크립트+JQUERY 완전정복 스터디』 제1권 기초편. 처음 웹프로그래밍 입문자라면 반드시 알아야 할 자바스크립트 코어 문법, 자바스크립트 함수 단위 프로그래밍, 자바스크립트 코어 라이브러리 등의 내용을 다루고 있으며 알기 쉽고 이해하기 쉽도록 다양한 그림과 예제로 차근차근 친절하게 설명한다.",
        "tableOfContentsContent": "\n[1부] 자바스크립트 코어 기초 문법\r ▣ 01장: 변수\rLesson 01. 변수 소개  \r__01. 변수란?  \r__02. 변수는 이럴 때 사용해요. \rLesson 02. 변수 만들기 \r__01. 변수 하나 만들기  \r__02. 변수 여러 개 만들기  \r__03. 변수이름 만들 때 주의사항  \rLesson 03. 변수에 저장할 수 있는 데이터 종류  \r__01. 데이터 위치 \r__02. 데이터 종류 \rLesson 04. 변숫값 저장 및 변경 \r__01. 변숫값 저장  \r__02. 변숫값 변경  \rLesson 05. 변숫값이 자동으로 읽혀지는 경우  \r__01. 우측에 변수를 두는 경우  \r__02. 함수 호출 시 변수를 매개변수 값으로 사용하는 경우  \r__03. 연산자와 함께 사용하는 경우  \rLesson 06. 변수를 활용한 데이터 중복 제거 및 재사용  \rLesson 07. 변수에 어떤 값이 들어 있는지 확인하기  \r__01. alert() \r__02. document.write() \r__03. console.log()  \r__04. 정리 \rLesson 08. 주석 \r__01. 주석이란? - 한 줄로 말해요  \r__02. 주석 만드는 방법 2가지  \r__03. 주석 활용  \rLesson 09. 배열  \r__01. 배열이란?  \r__02. 배열 생성  \r__03. 배열 요소 접근  \r__04. 배열을 사용하는 이유 \rLesson 10. 변수 종류  \r__01. 변수 종류  \r__02. 전역변수 \r__03. 지역변수 \r__04. 매개변수 \r__05. 멤버변수  \r__06. 정리  \rLesson 11. 미션 \r__미션 풀이 방법  \r ▣ 02장: 기본 연산자\rLesson 01. 숫자 연산자 \r__01. 숫자 연산자 종류  \r__02. 사용법 \r__03. 예제 \rLesson 02. 문자 연산자  \r__01. 문자열 기본 연산자 종류  \r__02. 사용법  \r__03. 예제  \rLesson 03. 복합 연산자  \r__01. 복합 연산자 종류  \r__02. 사용법  \r__03. 예제  \rLesson 04. 증감 연산자  \r__01. 증감 연산자 종류  \r__02. ++ 연산자  \r__03. -- 연산자  \r__04. 전위 연산자와 후위 연산자  \r__05. 전위 연산자와 후위 연산자 차이점  \rLesson 05. 연산자 우선순위  \rLesson 06. 미션  \r ▣ 부록 01. 초보자를 위한 함수와 클래스\rLesson 01. 초보자를 위한 함수  \r__01. 함수란?  \r__02. 함수는 이럴 때 사용해요.  \r__03. 함수 생김새  \r__04. 함수 호출  \r__05. 매개변수  \r__06. 리턴값  \r__07. 함수 종류  \r__08. 핵심 내용  \rLesson 02. 초보자를 위한 클래스  \r__01. 클래스란?  \r__02. 클래스는 이럴 때 사용해요  \r__03. 클래스 생김새  \r__04. 인스턴스와 객체  \r__05. 메서드와 프로퍼티  \r__06. 클래스 내부에 들어 있는 함수(메서드)를 호출하는 방법  \r__07. 해석하기  \r ▣ 03장: 형변환\rLesson 01. 형변환 소개  \r__01. 형변환이란?  \r__02. 형변환은 이럴 때 사용해요  \r__03. 형변환 종류  \rLesson 02. 암시적 형변환  \r__01. 암시적 형변환이란?  \r__02. 예제  \rLesson 03. 명시적 형변환  \r__01. 명시적 형변환이란?  \r__02. 예제  \rLesson 04. 미션  \r ▣ 부록 02: 초보자를 위한 jQuery\rLesson 01. jQuery 소개  \r__01. jQuery란?  \r__02. jQuery를 사용하는 이유  \rLesson 02. 사용법  \r__01. 준비  \r__02. jQuery를 이용한 노드 찾기  \r__03. jQuery와 CSS와의 관계  \r__04. 초보자가 알아야 할 jQuery 핵심 기능  \r__05. 정리  \r ▣ 04장: 조건문 if\rLesson 01. 조건문 소개  \r__01. 조건문이란?  \r__02. 조건문은 이럴 때 사용해요  \r__03. 조건문 종류  \rLesson 02. if문 소개  \r__01. if문이란?  \r__02. if문 문법  \rLesson 03. 논리 비교 연산자  \r__01. 논리 비교 연산자 용도  \r__02. 논리, 비교 연산자를 사용한 계산 결과값  \r__03. 비교 연산자  \r__04. 논리 연산자  \rLesson 04. if에 논리 비교 연산자 연동하기  \r__01. 사용법  \r__02. if에 비교 연산자 사용하기  \r__03. if에 논리 연산자 사용하기  \rLesson 05. 1단계 if  \r__01. 사용법  \r__02. 예제  \r__03. if 사용 시 주의사항  \rLesson 06. 2단계 if  \r__01. 사용법  \r__02. 예제  \r__03. 1단계 if vs. 2단계 if  \rLesson 07. 3단계 if  \r__01. 문법  \r__02. 예제  \rLesson 08. 조건부 연산자  \r__01. 조건부 연산자란?  \r__02. 사용법  \r__03. 예제  \r__마치며  \rLesson 09. 미션  \r ▣ 05장: 조건문 switch\rLesson 01. switch문 소개  \r__01. switch문이란?  \r__02. 사용법  \r__03. 예제  \rLesson 02. if와 switch 차이점  \r__01. if를 switch로 변경할 수 없는 경우  \r__02. if를 switch로 변경할 수 있는 경우  \rLesson 03. 미션  \r ▣ 06장: 반복문 for\rLesson 01. 반복문 소개  \r__01. 반복문이란?  \r__02. 반복문은 이럴 때 사용해요  \r__03. 반복문 종류  \rLesson 02. for문 소개  \r__01. for문이란?  \r__02. for문은 이럴 때 사용해요  \r__03. for문 종류  \rLesson 03. 단일 for문  \r__01. 사용법  \r__02. 예제  \rLesson 04. for문에서 continue문과 break문  \r__01. continue문  \r__02. break문  \rLesson 05. 다중 for문  \r__01. 사용법  \r__02. 예제  \rLesson 06. 미션  \r ▣ 07장: 반복문 while\rLesson 01. while문 소개  \r__01. while문이란?  \r__02. while문은 이럴 때 사용해요  \r__03. 사용법  \r__04. 예제  \rLesson 02. for와 while 차이점  \r__01. 사용 분야  \r__02. while문을 for문처럼 사용하는 경우  \rLesson 03. while문에서 continue문과 break문  \r__01. continue문  \r__02. break문  \r__마치며  \rLesson 04. 미션  \r [02부] 자바스크립트 함수와 함수 단위 프로그래밍\r ▣ 01장: 함수 기초\rLesson 01. 함수 소개  \r__01. 함수는 이럴 때 사용해요  \r__02. 함수란?  \r__03. 함수 구조 3가지  \rLesson 02. 가장 쉬운 함수 만들기  \r__01. 사용법  \r__02. 예제  \rLesson 03. 지역변수 vs. 전역변수  \r__01. 변수 종류  \r__02. 지역변수와 전역변수 구분하기  \r__03. 지역변수와 전역변수 생명주기  \r__04. 예제  \rLesson 04. 매개변수가 있는 함수 만들기  \r__01. 사용법  \r__02. 예제  \r__03. arguments란?  \rLesson 05. 리턴값이 있는 함수 만들기  \r__01. 사용법  \r__02. 예제  \r__03. return문의 또 다른 용도  \rLesson 06. 함수 이름 만들 때 주의사항  \rLesson 07. 미션  \r ▣ 02장: 함수 기능\rLesson 01. 함수 기능 소개  \r__01. 함수 대표 기능 두 가지  \r__02. 중복코드 제거 및 코드 재사용성  \r__03. 코드 그룹화  \rLesson 02. 함수 기능 1: 중복코드 제거 및 코드 재사용성  \r__01. 중복코드 제거 및 코드 재사용 순서  \r__02. 예제  \rLesson 03. 함수 기능 2: 코드 그룹화  \r__01. 코드 그룹화하는 순서  \r__02. 예제  \r__03. 정리  \rLesson 04. 미션  \r ▣ 03장: 함수 중급\rLesson 01. 변수와 함수와의 관계  \r__01. 변수에 함수 저장하기  \r__02. 매개변수 값으로 함수 사용하기  \r__03. 리턴값으로 함수 사용하기  \rLesson 02. 함수 리터럴과 익명 함수  \r__01. 리터럴이란?  \r__02. 함수 리터럴이란?  \r__03. 익명 함수란?  \rLesson 03. 함수 정의 방법 4가지  \r__01. 첫 번째: function 키워드를 이용하는 방법  \r__02. 두 번째: 함수 리터럴을 이용하는 방법  \r__03. 세 번째: Function 객체를 이용해서 정의하는 방법  \r__04. 네 번째: 익명 함수 확장을 이용해 정의하는 방법  \rLesson 04. 함수 종류  \r__01. 함수 분류  \r__02. 사용 방법에 따른 함수 종류  \rLesson 05. 중첩 함수  \r__01. 중첩 함수란?  \r__02. 중첩 함수는 이럴 때 사용해요  \r__03. 중첩 함수와 중첩 함수를 포함한 함수와의 관계  \rLesson 06. 콜백 함수  \r__01. 콜백 함수란?  \r__02. 예제  \r__03. return vs. 콜백 함수  \r__04. 동기 vs. 비동기  \r__05. 콜백 함수는 실무에서 이렇게 사용해요  \rLesson 07. 클로저 함수  \r__01. 클로저란?  \r__02. 예제  \r__03. 클로저를 사용하면 좋은 점  \rLesson 08. 미션  \r [03부] 자바스크립트 코어 라이브러리\r ▣ 01장: 타이머 함수\rLesson 01. 타이머 함수 소개  \r__01. 타이머 함수란?  \r__02. 주요 기능  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 02장: Math 클래스\rLesson 01. Math 클래스 소개  \r__01. Math 클래스란?  \r__02. 주요 기능  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 03장: String 클래스 소개\rLesson 01. String 클래스 소개  \r__01. String 클래스란?  \r__02. 주요 기능  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 04장: Data 클래스\rLesson 01. Date 클래스 소개  \r__01. Date 클래스란?  \r__02. 주요 기능  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 05장: Array 클래스\rLesson 01. Array 클래스 소개  \r__01. Array 클래스란?  \r__02. 주요 기능  \rLesson 02. 핵심 내용  \rLesson 03. 미션\n",
        "isbn10": "1158390122",
        "isbn13": "9791158390129"
    },
    {
        "title": "열혈강의 자바 웹 개발 워크북 (MVC 아키텍처 마이바티스 스프링으로 만드는 실무형 개발자 로드맵)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7623127",
        "image": "https://bookthumb-phinf.pstatic.net/cover/076/231/07623127.jpg?type=m1&udate=20150715",
        "author": "엄진영",
        "price": "35000",
        "discount": "31500",
        "publisher": "프리렉",
        "pubdate": "20140523",
        "isbn": "8965400678 9788965400677",
        "description": "이 책은 자바 웹 개발 기초에서 프레임워크를 사용하는 실무 내용까지 다루고 있다. JSP에 한정한 웹 프로그래밍이 아니라 변화한 현재의 동적인 웹 개발 환경에 맞도록 서블릿/JSP를 기본으로 웹 개발에 필요한 기술들을 설명하고 있다.",
        "authorIntroContent": "\n엄진영\n저자 : 엄진영저자 엄진영은 1984년에 구입한 MSX 컴퓨터를 통해 베이직을 처음 접한후, 전자계산학을 전공하면서 본격적으로 프로그래밍 세계에 입문합니다. 1995년 현대전자에서 주최한 전국대학생/대학원생 공모전에서 웹 브라우저와 HTML 에디터를 출품하여 동상으로 입상하면서 웹 프로그래밍 세계에 빠지게 되었습니다.2000년 닷컴 광풍이 불던 때 잠깐 벤처에 도전했다가 실패한 후, 현재는 개발과 강의를 넘나들고 있습니다. 개발이 그리우면 프로젝트에 뛰어들고, 여기서 겪었던 실무 개발 경험을 말하고 싶어 입이 근질거리면 다시 강의를 할 수밖에 없는 천상 개발자이며 강사인 사람입니다. 현재는 비트교육센터에서 자바 고급반을 이끄는 수석 강사로 있습니다.\n",
        "bookIntroContent": "이 책은 자바 웹 개발 기초에서 프레임워크를 사용하는 실무 내용까지 다루고 있다. JSP에 한정한 웹 프로그래밍이 아니라 변화한 현재의 동적인 웹 개발 환경에 맞도록 서블릿/JSP를 기본으로 웹 개발에 필요한 기술들을 설명하고 있다.",
        "tableOfContentsContent": "\n제1장 웹 애플리케이션의 이해\r 1.1 데스크톱 애플리케이션\r1.1.1 데스크톱 애플리케이션 실습\r1.1.2 데스크톱 애플리케이션의 문제점\r1.2 클라이언트·서버 애플리케이션\r1.2.1 계산기 서버 실행\r1.2.2 계산기 클라이언트 실행\r1.2.3 계산기 서버의 콘솔창 내용 확인\r1.2.4 클라이언트·서버 구조의 장점\r1.2.5 문제점과 개선방안\r1.3 다중 클라이언트의 요청 처리\r1.3.1 멀티 스레드 적용 실습\r1.3.2 문제점과 개선방안\r1.4 클라이언트·서버 아키텍처의 진화\r1.4.1 전통적인 클라이언트·서버 아키텍처\r1.4.2 개선된 클라이언트·서버 아키텍처\r1.5 웹 애플리케이션 아키텍처의 특징\r1.5.1 웹 애플리케이션 실습\r1.5.2 웹 애플리케이션의 특징\r1.5.3 문제점과 개선방안\r1.6 정리\r 제 2장 웹 프로그래밍 기초 다지기\r2.1 HTTP 프로토콜의 이해\r2.1.1 HTTP 모니터링\r2.1.2 HTTP 프록시 실행\r2.1.3 HTTP 요청\r2.1.4 HTTP 응답\r2.1.5 HTTP 클라이언트 만들기\r2.1.6 콘솔창의 출력 크기를 늘리거나 제한을 없애기\r2.2 GET 요청\r2.2.1 웹 애플리케이션 프로젝트 생성, 배치, 실행\r2.2.2 GET 요청 1 웹 브라우저 주소창에 URL을 입력하는 경우\r2.2.3 GET 요청 2 링크를 클릭하는 경우\r2.2.4 GET 요청 3 입력폼의 method 속성값이 get인 경우\r2.2.5 GET 요청의 데이터 전달 형식\r2.2.6 GET 요청의 쓰임새\r2.2.7 문제점과 개선방안\r2.3 POST 요청\r2.3.1 POST 요청의 장점 - 입력값을 URL에 노출하지 않는다.\r2.3.2 POST 요청의 HTTP 프로토콜 확인\r2.3.3 POST 요청의 단점 - 요청 결과를 공유할 수 없다.\r2.3.4 문제점과 개선방안\r2.4 파일 업로드\r2.4.1 파일 업로드를 위한 「form」 태그 설정\r2.4.2 멀티파트 방식의 POST 요청 프로토콜 분석\r2.5 정리\r 제 3장 서블릿 프로그래밍\r3.1 CGI 프로그램과 서블릿\r3.1.1 CGI의 이해\r3.1.2 서블릿 Servlet\r3.2 서블릿, JSP vs. Java EE vs. WAS\r3.2.1 Java EE 기술들\r3.2.2 WAS의 이해\r3.3 웹 프로젝트 준비\r3.3.1 웹 프로젝트 생성\r3.3.2 웹 프로젝트 폴더 구조\r3.4 서블릿 만들기\r3.4.1 서블릿 작성\r3.4.2 javax.servlet.Servlet 인터페이스\r3.4.3 서블릿 배치 정보 작성\r3.4.4 서블릿 실행\r3.4.5 URL과 서블릿 매핑\r3.4.6 서블릿 구동 절차\r3.4.7 웰컴 파일들(Welcome Files)\r3.5 웹 애플리케이션 배치\r3.5.1 Eclipse를 통한 자동 배치\r3.5.2 톰캣 실행 환경의 임시 배치 폴더\r3.5.3 운영 서버에 배치하기\r3.6 GenericServlet의 사용\r3.6.1 GenericServlet이 없던 시절\r3.6.2 GenericServlet의 용도\r3.6.3 계산기 서블릿 작성\r3.6.4 ServletRequest\r3.6.5 ServletResponse\r3.6.6 CalculatorServlet 배치 및 테스트\r3.6.7 GET 요청으로 넘어온 매개변수 값의 인코딩 설정\r3.6.8 @WebServlet 애노테이션을 이용한 서블릿 배치 정보 설정\r3.6.9 @WebServlet 애노테이션의 주요 속성\r3.7 정리\r 제 4장 서블릿과 JDBC\r4.1 데이터베이스에서 데이터 가져오기\r4.1.1 회원 목록 조회 구현\r4.1.2 서블릿 배치 정보 설정\r4.1.3 '회원 목록 조회' 서블릿 테스트\r4.2 HttpServlet으로 GET 요청 다루기\r4.2.1 회원 목록 화면에 '신규 회원' 링크 추가\r4.3 HttpServlet으로 POST 요청 다루기\r4.3.1 doPost() 오버라이딩\r4.3.2 회원 등록 테스트\r4.4 요청 매개변수의 한글 깨짐 처리\r4.4.1 한글 깨짐 현상\r4.4.2 한글 입력값이 깨진 이유\r4.4.3 한글 깨짐 해결책\r4.4.4 GET 요청 매개변수의 한글 깨짐 해결책\r4.5 리프래시\r4.5.1 자동으로 회원 목록을 출력하기\r4.6 리다이렉트\r4.6.1 리다이렉트 실습하기\r4.7 서블릿 초기화 매개변수\r4.7.1 회원 정보 조회와 변경\r4.7.2 회원 목록 페이지에 상세 정보 링크 추가\r4.7.3 DD파일에 서블릿 초기화 매개변수 설정\r4.7.4 회원 상세 정보 출력하는 서블릿 작성\r4.7.5 회원 정보 변경하기\r4.7.6 애노테이션으로 서블릿 초기화 매개변수 설정\r4.8 컨텍스트 초기화 매개변수\r4.8.1 컨텍스트 초기화 매개변수의 선언\r4.8.2 컨텍스트 초기화 매개변수의 사용\r4.9 필터 사용하기\r4.9.1 필터\r4.9.2 필터 만들기\r4.9.3 필터의 구동\r4.9.4 필터의 배치\r4.10 정리\r 제 5장 MVC 아키텍처\r5.1 MVC 이해하기\r5.1.1 올인원 All-in-one 방식과 문제점\r5.1.2글로벌 환경과 MVC 아키텍처\r5.1.3 MVC 이점\r5.1.4 MVC 구동 원리\r5.2 뷰 컴포넌트와 JSP\r5.2.1 JSP를 사용하는 이유\r5.2.2 JSP 구동 원리\r5.2.3 JSP의 구동 과정 확인\r5.2.4 HttpJspPage 인터페이스\r5.2.5 JSP 객체의 실체 분석\r5.2.6 HttpJspBase 클래스의 소스\r5.2.7 JSP 프리컴파일\r5.3 JSP의 주요 구성 요소\r5.3.1 JSP로 만드는 계산기 실습\r5.3.2 템플릿 데이터\r5.3.3 JSP 전용 태그 - 지시자\r5.3.4 JSP 전용 태그 - 스크립트릿\r5.3.5 JSP 내장 객체\r5.3.6 JSP 전용 태그 - 선언문\r5.3.7 JSP 전용 태그 - 표현식\r5.4 서블릿에서 뷰 분리하기\r5.4.1 값 객체(VO) = 데이터 수송 객체(DTO)\r5.4.2 뷰 분리하기 실습\r5.4.3 값 객체 생성\r5.4.4 서블릿에서 뷰 관련 코드 제거\r5.4.5 뷰 컴포넌트 만들기\r5.4.6 회원 목록 테스트\r5.5 포워딩과 인클루딩\r5.5.1 포워딩과 인클루딩 실습\r5.5.2 포워딩\r5.2.3 인클루딩\r5.6 데이터 보관소\r5.6.1 ServletContext의 활용\r5.6.2 HttpSession의 활용 - 로그인\r5.6.3 HttpSession의 활용 - 로그인 정보 사용\r5.6.4 HttpSession의 활용 - 로그아웃\r5.6.5 ServletRequest의 활용\r5.6.6 JspContext의 활용\r5.7 JSP 액션 태그의 사용\r5.7.1 JSP 액션 태그 - 「jsp:useBean」\r5.7.2 「jsp:useBean」의 활용\r5.7.3 JSP 액션 태그의 존재 의의\r5.8 EL 사용하기\r5.8.1 EL 표기법\r5.8.2 JSP에서 제공하는 EL 기본 객체\r5.8.3 리터럴 표현식Literals\r5.8.4 값 표현식 Value Expression\r5.8.5 연산자\r5.8.6 예약 키워드\r5.8.7 EL 활용 - 회원 정보 페이지\r5.9 JSTL 사용하기\r5.9.1 JSTL 라이브러리 준비\r5.9.2 JSTL 주요 태그의 사용법\r5.9.3 JSTL 활용 - 회원 목록 페이지에서 자바 코드 없애기\r5.10 DAO 만들기\r5.10.1 DAO 사용하기\r5.10.2 DAO 생성\r5.10.3 서블릿에서 DAO 사용하기\r5.11 ServletContextListener와 객체 공유\r5.11.1 ServletContextListener의 활용\r5.11.2 리스너 'ServletContextListener' 만들기\r5.11.3 기존의 서블릿 변경하기\r5.11.4 AppInitServlet 제거\r5.12 DB 커넥션풀\r5.12.1 DB 커넥션풀\r5.12.2 DB 커넥션풀 만들기\r5.12.3 MemberDAO에 DB 커넥션풀 적용하기\r5.12.4 ContextLoaderListener에서 DBConnectionPool 생성 및 DAO에 주입\r5.13 DataSource와 JNDI\r5.13.1 javax.sql 확장 패키지\r5.13.2 DataSource\r5.13.3 DataSource의 적용\r5.13.4 서버에서 제공하는 DataSource 사용하기\r5.14정리\r 제 6장 미니 MVC 프레임워크 만들기\r6.1 프런트 컨트롤러의 도입\r6.1.1 프런트 컨트롤러 패턴\r6.1.2 프런트 컨트롤러를 통해 회원 목록 출력\r6.1.3 프런트 컨트롤러 만들기\r6.1.4 MemberListServlet을 페이지 컨트롤러로 만들기\r6.1.5 프런트 컨트롤러를 통한 회원 목록 페이지 요청\r6.1.6 MemberAddServlet을 페이지 컨트롤러로 만들기\r6.1.7 회원 등록 테스트\r6.2 페이지 컨트롤러의 진화\r6.2.1 프런트 컨트롤러와 페이지 컨트롤러의 호출 규칙 정의\r6.2.2 호출 규칙 정의\r6.2.3 페이지 컨트롤러를 위한 인터페이스 정의\r6.2.4 페이지 컨트롤러 'MemberListServlet'을 일반 클래스로 전환\r6.2.5 프런트 컨트롤러 변경\r6.2.6 회원 등록 페이지 컨트롤러에 Controller 규칙 적용하기\r6.2.7 회원 등록 요청을 처리하기 위해 DispatcherServlet 변경\r6.2.8 회원 등록 페이지의 실행 테스트\r6.3 DI를 이용한 빈 의존성 관리\r6.3.1 의존 객체의 관리\r6.3.2 의존 객체를 외부에서 주입\r6.3.3 MemberDao와 DataSource\r6.3.4 MemberListController에 MemberDao 주입\r6.3.5 페이지 컨트롤러 객체들을 준비\r6.3.6 프런트 컨트롤러의 변경\r6.3.7 인터페이스를 활용하여 공급처를 다변화 하자\r6.3.8 MemberDao 인터페이스 정의\r6.4 리플랙션 API를 이용하여 프런트 컨트롤러 개선하기\r6.4.1 신규 회원 정보 추가 자동화\r6.4.2 DataBinding 인터페이스 정의\r6.4.3 페이지 컨트롤러의 DataBinding 구현\r6.4.4 프런트 컨트롤러의 변경\r6.4.5 ServletRequestDataBinder 클래스 생성\r6.4.6 리플랙션 API\r6.5 프로퍼티를 이용한 객체 관리\r6.5.1 실습 시나리오\r6.5.2 프로퍼티 파일 작성\r6.5.3 ApplicationContext 클래스\r6.5.4 ContextLoaderListener 변경\r6.5.5 web.xml 파일에 프로퍼티 경로 정보 설정\r6.5.6 DispatcherServlet 변경\r6.6 애노테이션을 이용한 객체 관리\r6.6.1 애노테이션 활용\r6.6.2 애노테이션 정의\r6.6.3 애노테이션 적용\r6.6.4 프로퍼티 파일 변경\r6.6.5 ApplicationContext 변경\r6.6.6 Reflections 라이브러리 준비\r6.7 실력 향상 훈련\r6.7.1 데이터베이스 모델\r6.7.2 프로젝트 관리 시스템\r6.7.3 훈련 1 프로젝트 목록 페이지 구현\r6.7.4 훈련 2 프로젝트 등록 구현\r6.7.5 훈련 3 프로젝트 변경 구현\r6.7.6 훈련 4 프로젝트 삭제 구현\r6.7.7 메뉴의 추가\r6.8 정리\r 제 7장 퍼시스턴스 프레임워크의 도입\r7.1 mybatis 소개\r7.1.1 mybatis 사용하기\r7.1.2 mybatis 사용 준비\r7.2 mybatis 적용\r7.2.1 mybatis 구동하기\r7.2.2 mybatis 프레임워크의 핵심 컴포넌트\r7.2.3 DAO에서 SqlSessionFactory 사용\r7.2.4 SQL 맵퍼 파일 작성\r7.2.5 ApplicationContext 변경\r7.2.6 SqlSessionFactory 객체 준비\r7.2.6 mybatis 설정 파일 준비\r7.2.7 db.properties 파일 작성\r7.3 SQL 맵퍼 파일\r7.3.1 SQL 맵퍼 파일 작성\r7.3.2 mybatis의 SELECT 결과 캐싱\r7.3.3 SQL 문의 입력 매개변수 처리\r7.4 mybatis 설정 파일\r7.5 로그 출력 켜기\r7.5.1 mybatis 설정 파일에 로그 설정 추가\r7.5.2 로그 출력 테스트\r7.6 동적 SQL의 사용\r7.6.1 동적 SQL 엘리먼트\r7.6.2 프로젝트 목록 페이지에 정렬 링크 추가\r7.6.3 프로젝트 목록 컨트롤러 변경\r7.6.4 ProjectDao 인터페이스 변경\r7.6.5 「set」 엘리먼트의 활용\r7.6.6 MySqlProjectDao 클래스 변경\r7.6.7 동적으로 생성된 UPDATE 문 확인\r7.7 실력 향상 훈련\r7.7.1 훈련. 회원 관리에 mybatis 적용\r7.8 정리\r 제 8장 스프링 IoC 컨테이너\r8.1 스프링 IoC 컨테이너 사용 준비\r8.1.1 의존성 주입(DI)과 역제어(IoC)\r8.1.2 Gradle 프로젝트 준비\r8.1.3 Gradle 프로젝트를 웹 프로젝트로 만들기\r8.1.4 스프링 프레임워크 관련 라이브러리 가져오기\r8.1.5 실습 프로젝트 정리\r8.1.6 Gradle 빌드\r8.2 Gradle 빌드 파일 분석\r8.2.1 Gradle 플러그인이란?\r8.2.2 Gradle Java 플러그인\r8.2.3 jar 작업과 제어 속성 - jar {}\r8.2.4 의존 라이브러리를 가져올 저장소 설정 - repositories {}\r8.2.5 프로젝트에서 사용할 의존 라이브러리 지정 - dependencies {}\r8.2.6 테스트 정보 설정 - test {}\r8.2.7 아카이브 파일(.jar) 배포 - uploadArchives {}\r8.2.8 Gradle Eclipse 플러그인\r8.3 XML 기반 빈 관리 컨테이너\r8.3.1 ApplicationContext 인터페이스\r8.3.2 스프링 빈 컨테이너 ClassPathXmlApplicationContext 사용\r8.3.3 name 속성으로 빈 이름 지정하기\r8.3.4 익명 빈 선언\r8.4 생성자와 프로퍼티 설정\r8.4.1 호출할 생성자 설정\r8.4.2 프로퍼티 설정\r8.4.3 「bean」의 속성을 이용하여 생성자 및 프로퍼티 설정하기\r8.5 의존 객체 주입\r8.5.1 의존 객체 설정하기\r8.5.2 개별 인스턴스 주입하기\r8.6 컬렉션 값 주입\r8.6.1 배열 프로퍼티의 값 주입\r8.6.2 Map과 Properties 값 주입\r8.7 팩토리 메서드와 팩토리 빈\r8.7.1 스태틱 팩토리 메서드를 이용한 간접 객체 생성\r8.7.2 인스턴스 팩토리 메서드를 이용한 간접 객체 생성\r8.7.3 스프링 규칙에 따라서 팩토리 빈 만들기\r8.8 빈의 범위 설정\r8.8.1 싱글톤과 프로토타입\r8.9 날짜 값 주입\r8.9.1 SimpleDateFormat 클래스와 인스턴스 팩토리 메서드 활용\r8.9.2 커스텀 프로퍼티 에디터 활용\r8.10 애노테이션을 이용한 의존 객체 자동 주입\r8.10.1 @Autowired 적용\r8.10.2 @Autowired의 required 속성\r8.10.3 @Qualifier로 주입할 객체를 지정하기\r8.10.4 @Autowired + @Qualifier = @Resource\r8.11 빈 자동 등록\r8.11.1 @Component가 붙은 클래스를 자동으로 찾기\r8.12 Gradle 적용\r8.12.1 Gradle 적용 준비\r8.12.2 Gradle 설정에 의존 라이브러리 추가\r8.12.3 Gradle 빌드\r8.12.4 톰캣 서버에 웹 애플리케이션 배치 및 실행\r8.13 스프링 IoC 컨테이너 적용\r8.13.1 mybatis 관련 의존 라이브러리 추가\r8.13.2 Gradle 빌드\r8.14 정리\r 부록\n",
        "isbn10": "8965400678",
        "isbn13": "9788965400677"
    },
    {
        "title": "쉽게 배우는 자바 프로그래밍",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12343442",
        "image": "https://bookthumb-phinf.pstatic.net/cover/123/434/12343442.jpg?type=m1&udate=20170911",
        "author": "우종정",
        "price": "27000",
        "discount": "25920",
        "publisher": "한빛아카데미",
        "pubdate": "20170803",
        "isbn": "1156643295 9791156643296",
        "description": "『쉽게 배우는 자바 프로그래밍』은 객체 지향의 핵심과 자바의 현대적 기능을 충실히 다루면서도 초보자가 쉽게 학습할 수 있게 구성했다. 시각화 도구를 활용한 개념 설명과 군더더기 없는 핵심 코드를 통해 개념과 구현을 한 흐름으로 학습할 수 있으며 ‘기초 체력을 다지는 예제 → 셀프 테스트 → 생각을... ",
        "authorIntroContent": "\n우종정\n저자 : 우종정저자 우종정은 경북대학교 컴퓨터공학과에서 학사 과정을 마친 후 UNIVERSITY OF TEXAS AT AUSTIN 에서 공학 석사 및 공학 박사를 취득했다. 산업연구원에서 연구원 및 책임연구원으로 재직했으며, 미국 IBM 에서 POWERPC 개발에도 참여했다. 현재 성신여자대학교 컴퓨터공학과 교수로 재직 중이다. 저서로는 『IT COOKBOOK, 컴퓨터 아키텍처』(한빛아카데미, 2014), 『CDMA 이동통신을 위한 휴대폰 프로그래밍』(홍릉과학출판사, 2007) 등이 있고, 역서로는 『디지털 시스템 설계 및 VHDL』(인터비젼, 1999), 『JAVA 프로그래밍의 이해』(피어슨에듀케이션, 2002 ) 등이 있으며, 임베디드시스템과 모바일 기술 분야의 논문이 다수 있다.\n",
        "bookIntroContent": "『쉽게 배우는 자바 프로그래밍』은 객체 지향의 핵심과 자바의 현대적 기능을 충실히 다루면서도 초보자가 쉽게 학습할 수 있게 구성했다. 시각화 도구를 활용한 개념 설명과 군더더기 없는 핵심 코드를 통해 개념과 구현을 한 흐름으로 학습할 수 있으며 ‘기초 체력을 다지는 예제 → 셀프 테스트 → 생각을 논리적으로 정리하며 한 단계씩 풀어 가는 도전 과제 → 스토리가 가미된 흥미로운 프로그래밍 문제’ 등을 통해 프로그래밍 실력을 차근차근 끌어올릴 수 있다.",
        "tableOfContentsContent": "\nChapter 01 자바 시작하기\r01 프로그래밍 언어와 자바\r02 자바로 할 수 있는 일\r03 자바 가상 머신\r04 JDK 설치와 환경 설정\r05 통합 개발 환경 구축\r06 자바 프로그램 작성과 실행\r07 기타 유용한 기능과 이클립스 단축키\r++ 연습 문제\r Chapter 02 자바 프로그램 구조와 기초 문법 익히기\r01 자바 프로그램 기본 구조\r02 식별자\r03 변수\r04 자바 기본 입출력\r05 연산자\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 03 제어문과 메서드\r01 제어문\r02 조건문\r03 반복문\r04 분기문\r05 메서드\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 04 객체 지향\r01 객체 지향의 개요\r02 객체 지향 프로그래밍\r03 클래스의 선언과 객체 생성\r04 클래스의 구성 요소와 멤버 접근\r05 접근자와 설정자\r06 생성자\r07 정적 멤버\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 05 문자열, 배열, 디버깅\r01 문자열\r02 배열 기초\r03 배열 응용\r04 디버깅\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 06 상속\r01 상속의 개념과 필요성\r02 클래스 상속\r03 메서드 오버라이딩\r04 패키지\r05 자식 클래스와 부모 생성자\r06 상속과 접근 제어\r07 final 클래스와 메서드\r08 타입 변환과 다형성\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 07 추상 클래스와 인터페이스\r01 추상 클래스\r02 인터페이스 기본\r03 인터페이스 응용\r04 인터페이스와 다형성\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 08 내부 클래스와 람다식\r01 내부 클래스와 내부 인터페이스\r02 무명 클래스\r03 람다식\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter 09 기본 패키지\r01 패키지와 API 문서\r02 java . lang 패키지\r03 java . util 패키지\r04 java . text 패키지\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter10 예외 처리와 제네릭 프로그래밍\r01 예외\r02 예외 처리 방법\r03 제네릭 클래스와 인터페이스\r04 제네릭 메서드\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter11 컬렉션 프레임워크\r01 컬렉션 프레임워크\r02 주요 컬렉션\r03 Collections 클래스\r04 컬렉션과 스트림\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter12 입출력 처리\r01 입출력 스트림\r02 바이트 스트림\r03 문자 스트림\r04 파일 관리\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter13 스레드\r01 프로세스와 스레드\r02 스레드 생성과 실행\r03 스레드 상태 및 제어\r04 동기화와 협업\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter14 자바 GUI 기초\r01 GUI 프로그래밍 소개\r02 스윙을 이용한 GUI 기초\r03 컨테이너 생성과 컴포넌트 추가\r04 컴포넌트 배치\r05 주요 스윙 컴포넌트\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter15 이벤트 처리\r01 이벤트 구동 프로그래밍\r02 이벤트 클래스와 이벤트 리스너\r03 이벤트 처리 응용\r04 어댑터 클래스\r05 이벤트와 메뉴\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter16 그래픽 프로그래밍\r01 그래픽 컨텍스트\r02 그래픽 그리기\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r Chapter17 네트워크 및 데이터베이스 프로그래밍\r01 네트워크 기초\r02 소켓을 이용한 클라이언트-서버 통신\r03 클라이언트-서버의 소켓 통신 응용\r04 데이터베이스 기초와 환경 설치\r05 JDBC 프로그래밍\r++도전 과제\r++연습 문제\r++프로그래밍 문제\r 셀프 테스트 해답\r찾아보기\r\n",
        "isbn10": "1156643295",
        "isbn13": "9791156643296"
    },
    {
        "title": "자바로 배우는 리팩토링 입문 (건강한 코드로 소프트웨어 체질을 개선하자!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12685153",
        "image": "https://bookthumb-phinf.pstatic.net/cover/126/851/12685153.jpg?type=m1&udate=20171208",
        "author": "유키 히로시",
        "price": "32000",
        "discount": "28800",
        "publisher": "길벗",
        "pubdate": "20171031",
        "isbn": "1160502854 9791160502855",
        "description": "이 책은 자바로 된 샘플 코드를 하나씩 실습하며 프로그래머라면 꼭 알아야 할 리팩토링 기법을 쉽게 배울 수 있는 입문서다. 또한 리팩토링 전과 후 프로그램을 비교해서 분석한 내용을 일목요연하게 보여주기 때문에 프로그램이 어떻게 달라졌는지를 누구나 쉽게 이해할 수 있다. 그리고 각 장 뒤에는 중요... ",
        "authorIntroContent": "\n유키 히로시\n저자 : 유키 히로시저자 : 유키 히로시저자 유키 히로시는 C 언어, Perl, Java 분야 책을 1990년부터 집필하였다. 국내에 소개된 책으로는 [Java 언어로 배우는 디자인 패턴 입문]과 [Java 언어로 배우는 디자인 패턴 입문: 멀티쓰레드편]이 있다.역자 : 서수환역자 서수환은 일본에서 온라인 쇼핑몰 시스템을 개발하고 운영하는 엔지니어이다. 귀찮은 일이 생기면 대신해 줄 무언가를 찾다가 없으면 만드는 게 취미. 또 뭐하며 놀까 늘 고민 중이다.\n",
        "bookIntroContent": "프로그램은 살아 있다!프로그램은 계획 없이 수정하거나 제대로 살펴보지 않고 기능을 추가하면 점점 읽기도, 수정하기도, 디버깅하기도 어려운 상태가 된다. 마치 건강을 관리하지 않은 사람처럼 상태가 엉망진창이 된다. 시간을 들여 운동과 식사를 관리해서 체질을 개선하듯이 계속 리팩토링하면 버그를 늘리지 않으면서도 깔끔한 코드로 프로그램 체질을 개선할 수 있다.이 책은 자바로 된 샘플 코드를 하나씩 실습하며 프로그래머라면 꼭 알아야 할 리팩토링 기법을 쉽게 배울 수 있는 입문서다. 또한 리팩토링 전과 후 프로그램을 비교해서 분석한 내용을 일목요연하게 보여주기 때문에 프로그램이 어떻게 달라졌는지를 누구나 쉽게 이해할 수 있다. 그리고 각 장 뒤에는 중요 포인트를 재확인하고 프로그램이 풍기는 악취를 탐지하는 연습을 할 수 있게 연습문제가 있다.",
        "tableOfContentsContent": "\n이것만은 알고 시작하자, UML \r 0장 리팩토링이란 \r0.1 리팩토링이란 \r0.2 리팩토링과 악취 \r0.3 리팩토링 카탈로그 \r0.4 리팩토링 에센스 \r0.5 리팩토링 Q&A \r0.6 연습 문제 \r0.7 연습 문제 해답 \r 1장 매직 넘버를 기호 상수로 치환 _소스 코드에 100이라고 적힌 경우 \r1.1 리팩토링 \r1.1.1 매직 넘버를 기호 상수로 치환 \r1.2 예제 프로그램 \r1.2.1 리팩토링 전 \r1.2.2 리팩토링 실행 \r1.2.3 리팩토링 후 \r1.3 한 걸음 더 나아가기 \r1.3.1 분류 코드를 클래스로 치환하기 \r1.3.2 enum \r1.3.3 기호 상수가 적합하지 않은 경우 \r1.3.4 바이트 코드에 내장된 상수에 주의하기 \r1.4 정리 \r1.5 연습 문제 \r1.6 연습 문제 해답 \r 2장 제어 플래그 삭제 _제어 플래그 때문에 코드가 읽기 어려운 경우 \r2.1 리팩토링 \r2.1.1 제어 플래그 삭제 \r2.2 예제 프로그램(FindInt) \r2.2.1 리팩토링 전 \r2.2.2 리팩토링 실행(break 사용) \r2.2.3 리팩토링 실행(return 사용) \r2.3 예제 프로그램(SimpleDatabase) \r2.3.1 리팩토링 전 \r2.3.2 리팩토링 실행 \r2.4 한 걸음 더 나아가기 \r2.4.1 break나 return을 쓰면 가독성이 좋아지는 이유 \r2.4.2 인스턴스 필드로 만든 제어 플래그의 위험성 \r2.4.3 플래그명 \r2.4.4 boolean 이외의 플래그 \r2.4.5 정규 표현식 패키지 사용 \r2.5 정리 \r2.6 연습 문제 \r2.7 연습 문제 해답 \r 3장 어서션 도입 _‘이렇게 될 것이다’라는 주석이 있는 경우 \r3.1 리팩토링 \r3.1.1 어서션 도입 \r3.2 예제 프로그램 \r3.2.1 리팩토링 전 \r3.2.2 리팩토링 실행 \r3.2.3 리팩토링 후 \r3.2.4 컴파일과 실행 \r3.3 어서션 동작 확인 \r3.4 한 걸음 더 나아가기 \r3.4.1 자바 어서션 문법 \r3.4.2 어서션은 에러 처리를 대신할 수 없음 \r3.4.3 자바 어서션은 클래스 라이브러리가 아님 \r3.4.4 어서션 완전 삭제 \r3.4.5 다른 언어 환경의 어서션 \r3.5 정리 \r3.6 연습 문제 \r3.7 연습 문제 해답 \r 4장 널 객체 도입 _null 확인이 너무 많은 경우 \r4.1 리팩토링 \r4.1.1 널 객체 도입 \r4.2 예제 프로그램 \r4.2.1 리팩토링 전 \r4.2.2 리팩토링 실행 \r4.2.3 리팩토링 후 \r4.3 한 걸음 더 나아가기 \r4.3.1 팩토리 메서드 패턴 \r4.3.2 싱글톤 패턴 \r4.3.3 널 객체로 중첩 클래스 사용 \r4.3.4 null 확인은 나쁜가 \r4.3.5 패턴 중독에 빠지지 않기 \r4.3.6 상수와 널 객체 \r4.3.7 isNull 메서드는 필요한가 \r4.3.8 기존 클래스를 수정할 수 없다면 \r4.4 정리 \r4.5 연습 문제 \r4.6 연습 문제 해답\r 5장 메서드 추출 _코드가 너무 길어서 읽기 어려운 경우 \r5.1 리팩토링 \r5.1.1 메서드 추출 \r5.2 예제 프로그램 \r5.2.1 리팩토링 전 \r5.2.2 리팩토링 실행 \r5.2.3 리팩토링 후 \r5.3 한 걸음 더 나아가기 \r5.3.1 역 리팩토링 \r5.3.2 메서드 추출은 당연한가? \r5.3.3 메서드가 길어지는 경우 \r5.4 정리 \r5.5 연습 문제 \r5.6 연습 문제 해답 \r 6장 클래스 추출 _클래스의 책임이 너무 많은 경우 \r6.1 리팩토링 \r6.1.1 클래스 추출 \r6.2 예제 프로그램 \r6.2.1 리팩토링 전 \r6.2.2 리팩토링 실행 \r6.2.3 리팩토링 후 \r6.3 한 걸음 더 나아가기 \r6.3.1 양방향 링크는 피한다 \r6.3.2 기능 추가와 리팩토링 \r6.3.3 불변 인터페이스 \r6.3.4 역 리팩토링: 클래스 인라인화 \r6.4 정리 \r6.5 연습 문제 \r6.6 연습 문제 해답 \r 7장 분류 코드를 클래스로 치환 _int로 객체를 구분하는 경우 \r7.1 리팩토링 \r7.1.1 분류 코드를 클래스로 치환 \r7.2 예제 프로그램 \r7.2.1 리팩토링 전 \r7.2.2 기본 타입을 사용한 분류 코드의 문제점 \r7.2.3 리팩토링 실행 \r7.2.4 리팩토링 후 \r7.3 한 걸음 더 나아가기 \r7.3.1 기본 타입을 사용한 분류 코드의 문제점 \r7.3.2 enum \r7.4 정리 \r7.5 연습 문제 \r7.6 연습 문제 해답 \r 8장 분류 코드를 하위 클래스로 치환 _분류 코드마다 동작이 다른 경우(1) \r8.1 리팩토링 \r8.1.1 분류 코드를 하위 클래스로 치환 \r8.1.2 구조와 동작 \r8.2 예제 프로그램 \r8.2.1 리팩토링 전 \r8.2.2 리팩토링 실행 \r8.2.3 리팩토링 후 \r8.3 한 걸음 더 나아가기 \r8.3.1 switch 문과 instanceof 연산자가 풍기는 악취 \r8.3.2 객체 생성 switch 문 삭제 \r8.3.3 팩토리 메서드 여러 개 준비하기 \r8.3.4 어디까지 리팩토링해야 하나 \r8.4 정리 \r8.5 연습 문제 \r8.6 연습 문제 해답 \r 9장 분류 코드를 상태/전략 패턴으로 치환 _ 분류 코드마다 동작이 다른 경우(2) \r9.1 리팩토링 \r9.1.1 분류 코드를 상태/전략 패턴으로 치환 \r9.2 예제 프로그램 \r9.2.1 리팩토링 전 \r9.2.2 리팩토링 실행 \r9.2.3 리팩토링 후 \r9.3 코드 추가 수정 \r9.3.1 enum 사용 \r9.3.2 상태 의존 코드를 상태 객체로 이동 \r9.3.3 코드 추가 수정 \r9.4 한 걸음 더 나아가기 \r9.4.1 분류 코드를 치환하는 세 가지 방법 비교 \r9.4.2 상태 패턴과 전략 패턴의 차이 \r9.4.3 다형적 해결로 default 제거 \r9.5 정리 \r9.6 연습 문제 \r9.7 연습 문제 해답 \r 10장 에러 코드를 예외로 치환 _에러 처리가 흩어져 있는 경우 \r10.1 리팩토링 \r10.1.1 에러 코드를 예외로 치환 \r10.2 예제 프로그램 \r10.2.1 리팩토링 전 \r10.2.2 리팩토링 실행 \r10.2.3 리팩토링 후 \r10.3 코드 추가 수정 \r10.3.1 분류 코드를 상태/전략 패턴으로 치환 \r10.4 한 걸음 더 나아가기 \r10.4.1 검사 예외와 비검사 예외 \r10.4.2 예외 계층 \r10.4.3 java.io.EOFException에 대해 \r10.4.4 비검사 예외와 사전 확인용 메서드 \r10.4.5 실패 원자성 \r10.5 정리 \r10.6 연습 문제 \r10.7 연습 문제 해답 \r 11장 생성자를 팩토리 메서드로 치환 _클래스 이름이 new로 하드 코딩된 경우 \r11.1 리팩토링 \r11.1.1 생성자를 팩토리 메서드로 치환 \r11.2 예제 프로그램 \r11.2.1 리팩토링 전 \r11.2.2 리팩토링 실행 \r11.2.3 리팩토링 후 \r11.2.4 분류 코드를 하위 클래스로 치환 리팩토링 실행 \r11.2.5 리팩토링 후 \r11.3 한 걸음 더 나아가기 \r11.3.1 프로바이더 \r11.3.2 매개변수 문제 \r11.3.3 팩토리 메서드와 생성 메서드 \r11.4 정리 \r11.5 연습 문제 \r11.6 연습 문제 해답\r 12장 관측 데이터 복제 _모델과 뷰가 뒤섞여 있는 경우 \r12.1 리팩토링 \r12.1.1 관측 데이터 복제 \r12.2 예제 프로그램 \r12.2.1 리팩토링 전 \r12.2.2 리팩토링 실행 \r12.2.3 리팩토링 후 \r12.3 한 걸음 더 나아가기 \r12.3.1 이벤트에 포함된 정보 \r12.3.2 무엇을 이벤트 리스너로 할 것인가 \r12.3.3 무한 반복에 주의 \r12.3.4 다른 이벤트 리스너 추가하기 \r12.4 정리 \r12.5 연습 문제 \r12.6 연습 문제 해답 \r 13장 상속을 위임으로 치환 _IS-A 관계가 아닌데 상속하고 있는 경우 \r13.1 상속과 위임 \r13.1.1 상속 \r13.1.2 위임 \r13.1.3 상속과 위임 비교 \r13.2 리팩토링 \r13.2.1 상속을 위임으로 치환 \r13.3 예제 프로그램 \r13.3.1 리팩토링 전 \r13.3.2 새로운 의문 \r13.3.3 리팩토링 실행 \r13.3.4 리팩토링 후 \r13.4 생성자 연쇄 \r13.5 한 걸음 더 나아가기 \r13.5.1 상속은 최후의 무기 \r13.5.2 리스코프 치환 원칙 \r13.5.3 IS-A 관계와 HAS-A 관계 \r13.6 정리 \r13.7 연습 문제 \r13.8 연습 문제 해답 \r 14장 대리자 은폐 _위임 대상까지 노출되어 있는 경우 \r14.1 리팩토링 \r14.1.1 대리자 은폐 \r14.2 예제 프로그램 \r14.2.1 리팩토링 전 \r14.2.2 1회째 리팩토링 실행 \r14.2.3 1회째 리팩토링 후 \r14.2.4 2회째 리팩토링 실행 \r14.2.5 2회째 리팩토링 후 \r14.3 한 걸음 더 나아가기 \r14.3.1 ‘숨기기’의 중요성 \r14.3.2 다양한 은폐 \r14.3.3 중개자 제거 \r14.3.4 클래스 인라인화 \r14.4 정리 \r14.5 연습 문제 \r14.6 연습 문제 해답 \r 15장 상속 구조 정리 _상속이 엉켜 있는 경우 \r15.1 리팩토링 \r15.1.1 상속 구조 정리 \r15.2 예제 프로그램 \r15.2.1 리팩토링 전 \r15.2.2 의문점 \r15.2.3 리팩토링 실행 \r15.2.4 리팩토링 후 \r15.3 한 걸음 더 나아가기 \r15.3.1 직교성 \r15.3.2 상속과 @Override \r15.4 정리 \r15.5 연습 문제 \r15.6 연습 문제 해답 \r 부록 \r부록 A 리팩토링 목록 \r부록 B JUnit \r부록 C 참고 문헌과 웹 사이트 \r    \n",
        "isbn10": "1160502854",
        "isbn13": "9791160502855"
    },
    {
        "title": "스프링 입문을 위한 자바 객체 지향의 원리와 이해",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=8920762",
        "image": "https://bookthumb-phinf.pstatic.net/cover/089/207/08920762.jpg?type=m1&udate=20170602",
        "author": "김종민",
        "price": "25000",
        "discount": "22500",
        "publisher": "위키북스",
        "pubdate": "20150408",
        "isbn": "8998139944 9788998139940",
        "description": "이 책은 자바에서 스프링으로 나아가기 위한 연결 고리를 제공한다.",
        "authorIntroContent": "\n김종민\n저자 : 김종민저자 김종민은 빅데이터와 GIS 기반 스타트업인 UISCLOUD의 수석 프로그래머이자 동양미래대학교 컴퓨터공학부 겸임 교수다. HTML5와 ANGULARJS, 스프링 MVC, 스프링 부트 등 스프링 관련 프로젝트에 관심이 많고 CLOJURE의 매력에도 푹 빠져 지내고 있으며, 먼 훗날 “개발자로 태어나 개발자로 살다 개발자로 죽었다”라는 문구로 기억되고 싶은 욕망이 있다.\n",
        "bookIntroContent": "이 책은 자바에서 스프링으로 나아가기 위한 연결 고리를 제공한다.",
        "tableOfContentsContent": "\n▣ 01장: 사람을 사랑한 기술\r 신기술은 이전 기술의 어깨를 딛고 \r기계어에서 객체 지향 프로그래밍 언어로 \r기계어-0과 1의 행진 / 너무나 비인간적인 언어 \r어셈블리어-0과 1의 행진을 벗어나 인간 지향으로 / 기계어 니모닉 \rC 언어-강력한 이식성 / One Source Multi Object Use Anywhere \rC++ 언어-정말 인간적인 프로그래밍 방법론, 객체 지향 \r자바 - 진정한 객체 지향 언어 \r신기술은 이전 기술의 어깨를 딛고 개발자를 위해 발전한다 \r신기술이 역사 속에서 환영만 받은 것은 아니다 \r짧은 글, 긴 생각 \rUML을 대하는 자세 \r당신은 CBD, SOA가 어려운가? \r객체 지향의 4대 특성을 누군가에게 설명할 수 있는가? \r스프링 프레임워크는 사상이면서 또 단일 제품이다 \r책 출간의 변 \r ▣ 02장: 자바와 절차적/ 구조적 프로그래밍\r 자바 프로그램의 개발과 구동 \r자바에 존재하는 절차적/구조적 프로그래밍의 유산 \r다시 보는 main() 메서드: 메서드 스택 프레임 \r변수와 메모리: 변수! 너 어디 있니? \r블록 구문과 메모리: 블록 스택 프레임 \r지역 변수와 메모리: 스택 프레임에 갇혔어요! \r메서드 호출과 메모리: 메서드 스택 프레임 2 \r전역 변수와 메모리: 전역 변수 쓰지 말라니까요! \r멀티 스레드 / 멀티 프로세스의 이해 \rSTS(또는 이클립스)를 이용해 T 메모리 영역 엿보기 \r정리 - 객체 지향은 절차적/구조적 프로그래밍의 어깨를 딛고 \r ▣ 03장: 자바와 객체 지향\r 객체 지향은 인간 지향이다 \r객체 지향의 4 대 특성 - 캡! 상추다 \r클래스 vs. 객체 = 붕어빵틀 vs. 붕어빵 ??? \r추상화: 모델링 82\r추상화는 모델링이다 \r추상화와 T 메모리 \r클래스 멤버 vs. 객체 멤버 = static 멤버 vs. 인스턴스 멤버 \r상속: 재사용 + 확장 \r상속의 강력함 \r상속은 is a 관계를 만족해야 한다? \r다중 상속과 자바 \r상속과 인터페이스 \r상속과 UML 표기법 \r상속과 T 메모리 \r다형성: 사용편의성 \r오버라이딩? 오버로딩? \r다형성과 T 메모리\r다형성이 지원되지 않는 언어 \r캡슐화: 정보 은닉 \r객체 멤버의 접근 제어자 \r참조 변수의 복사 \r정리 - 자바 키워드와 OOP 4 대 특성 \r ▣ 04장: 자바가 확장한 객체 지향\r abstract 키워드 - 추상 메서드와 추상 클래스 \r생성자 \r클래스 생성 시의 실행 블록, static 블록\rfinal 키워드 \rfinal 과 클래스 \rfinal 과 변수 \rfinal 과 메서드 \rinstanceof 연산자 \rpackage 키워드 \rinterface 키워드와 implements 키워드 \rthis 키워드 \rsuper 키워드 \r예비 고수를 위한 한마디 \r정리 - 자바 키워드와 OOP 확장 \r ▣ 05장: 객체 지향 설계 5원칙 - SOLID\r SRP - 단일 책임 원칙 \rOCP - 개방 폐쇄 원칙 \rLSP - 리스코프 치환 원칙 \rISP - 인터페이스 분리 원칙 \rDIP - 의존 역전 원칙 \r정리 - 객체 지향 세계와 SOLID \r ▣ 06장: 스프링이 사랑한 디자인 패턴\r 어댑터 패턴(Adapter Pattern) \r프록시 패턴(Proxy Pattern) \r데코레이터 패턴(Decorator Pattern) \r싱글턴 패턴(Singleton Pattern) \r템플릿 메서드 패턴(Template Method Pattern) \r팩터리 메서드 패턴(Factory Method Pattern) \r전략 패턴(Strategy Pattern) \r템플릿 콜백 패턴(Template Callback Pattern - 견본/회신 패턴) \r스프링이 사랑한 다른 패턴들 \r ▣ 07장: 스프링 삼각형과 설정 정보\r IoC/DI - 제어의 역전/의존성 주입 \r프로그래밍에서 의존성이란? \r스프링 없이 의존성 주입하기 1 - 생성자를 통한 의존성 주입 \r스프링 없이 의존성 주입하기 2 - 속성을 통한 의존성 주입 \r스프링을 통한 의존성 주입 - XML 파일 사용 \r스프링을 통한 의존성 주입 - 스프링 설정 파일(XML)에서 속성 주입 \r스프링을 통한 의존성 주입 - @Autowired를 통한 속성 주입 \r스프링을 통한 의존성 주입 - @Resource를 통한 속성 주입 \r스프링을 통한 의존성 주입 - @Autowired vs. @Resource vs. property 태그 \rAOP - Aspect? 관점? 핵심 관심사? 횡단 관심사? \r일단 덤벼 보자 - 실전편 \r일단 덤벼 보자 - 설명편 \r일단 덤벼 보자 - 용어편 \r일단 덤벼 보자 - POJO와 XML 기반 AOP \rAOP 기초 완성 310\rPSA - 일관성 있는 서비스 추상화 \r ▣ 부록A: 스프링 MVC를 이용한 게시판 구축\r A.1 URL과 @RequestMapping 연결하기 \rA.2 인메모리 DB HSQL 사용하기 \rA.3 VO와 MyBatis를 이용한 DAO 구현 \rA.4 서비스(Service) 구현\rA.5 목록 구현 \rA.6 읽기 구현 \rA.7 새 글 구현 \rA.8 수정 구현 \rA.9 삭제 구현 \rA.10 리팩터링 \r ▣ 부록B: 자바 8 람다와 인터페이스 스펙 변화\r B.1 람다가 도입된 이유 \rB.2 람다란 무엇인가? \rB.3 함수형 인터페이스\rB.4 메서드 호출 인자로 람다 사용 \rB.5 메서드 반환값으로 람다 사용 \rB.6 자바 8 API에서 제공하는 함수형 인터페이스 \rB.7 컬렉션 스트림에서 람다 사용 \rB.8 메서드 레퍼런스와 생성자 레퍼런스 \rB.9 인터페이스의 디폴트 메서드와 정적 메서드 \rB.10 정리 \r\n",
        "isbn10": "8998139944",
        "isbn13": "9788998139940"
    },
    {
        "title": "자바 성능 튜닝 이야기 (개발자가 반드시 알아야 할)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7333658",
        "image": "https://bookthumb-phinf.pstatic.net/cover/073/336/07333658.jpg?type=m1&udate=20190204",
        "author": "이상민",
        "price": "28000",
        "discount": "25200",
        "publisher": "인사이트",
        "pubdate": "20131026",
        "isbn": "8966260926 9788966260928",
        "description": "『자바 성능 튜닝 이야기』는 고성능 애플리케이션을 위해 고려 해야 할 복잡한 요소들을 하나하나 짚어 주는 책이다. 장애를 일으키는 반복적인 코딩... 적용 가능한 튜닝 노하우를 전수하고 있다.\n\n▶ 이 책은 2008년에 출간된 &lt;자바 성능을 결정짓는 코딩 습관과 튜닝 이야기&gt;(한빛미디어)의 개정판입니다.",
        "authorIntroContent": "\n이상민\n삼성 SDS에서 개발을 시작하여, Naver의 성능 엔지니어링 팀에서 일했다. 지금은 NHN엔터테인먼트에서 협업 도구인 두레이(Dooray!)를 개발하고 있다. 『자바 성능 튜닝 이야기』, 『자바 개발자와 시스템 운영자를 위한 트러블슈팅 이야기』 등 다수의 IT 서적을 집필하였다.\n",
        "bookIntroContent": "『자바 성능 튜닝 이야기』는 고성능 애플리케이션을 위해 고려 해야 할 복잡한 요소들을 하나하나 짚어 주는 책이다. 장애를 일으키는 반복적인 코딩 이슈부터 시스템 진단, 튜닝 방법에 이르기까지 성능 개선이 필요한 핵심 정보만을 담아 정리하였으며 수년간에 걸친 경험적 사례를 토대로 실무에 적용 가능한 튜닝 노하우를 전수하고 있다.▶ 이 책은 2008년에 출간된 (한빛미디어)의 개정판입니다.",
        "tableOfContentsContent": "\nstory 01. 디자인 패턴, 꼭 써야 한다. 적어도 MVC 모델은 적용해야죠 \rJ2EE 디자인 패턴이란? \rTransfer Object 패턴 \rService Locator 패턴 \r story 02. 내가 만든 프로그램의 속도를 알고 싶다. 프로파일링 툴이란? \rSystem 클래스 \rSystem.currentTimeMillis와 System.nanoTime \r story03. 왜 자꾸 String을 쓰지 말라는 거야? String 클래스를 잘못 사용한 사례\rStringBuffer 클래스와 StringBuilder 클래스\rString vs StringBuffer vs StringBuilder\r버전에 따른 차이 \r story04. 어디에 담아야 하는지…  Collection 및 Map 인터페이스의 이해 \rSet 클래스 중 무엇이 가장 빠를까? \rList 관련 클래스 중 무엇이 빠를까?\rMap 관련 클래스 중에서 무엇이 빠를까? \rCollection 관련 클래스의 동기화 \r story05. 지금까지 사용하던 for 루프를 더 빠르게 할 수 있다고? 조건문에서의 속도는? \r반복 구문에서의 속도는? \r반복 구문에서의 필요 없는 반복 \r story06. static 제대로 한번 써 보자.  static의 특징 \rstatic 잘 활용하기 \rstatic 잘못 쓰면 이렇게 된다. \rstatic과 메모리 릭 \r story07. 클래스 정보, 어떻게 알아낼 수 있나? reflection 관련 클래스들 \rreflection 관련 클래스를 사용한 예 \rreflection 클래스를 잘못 사용한 사례 \r story08. synchronized는 제대로 알고 써야 한다.  자바에서 스레드는 어떻게 사용하나? \rinterrupt() 메서드는 절대적인 것이 아니다. \rsynchronized를 이해하자. \r동기화는 이렇게 사용한다 - 동일 객체 접근 시 \r동기화는 이렇게 사용한다 - static 사용 시\r동기화를 위해서 자바에서 제공하는 것들 \rJVM 내에서 synchronization은 어떻게 동작할까?\r story09. IO에서 발생하는 병목 현상  기본적인 IO는 이렇게 처리한다.\rIO에서 병목이 발생한 사례 \r그럼 NIO의 원리는 어떻게 되는 거지? \rDirectByteBuffer를 잘못 사용하여 문제가 발생한 사례 \rlastModified() 메서드의 성능 저하\r story10. 로그는 반드시 필요한 내용만 찍자. System.out.println()의 문제점 \rSystem.out.format() 메서드 \r로그를 더 간결하게 처리하는 방법 \r로거 사용시의 문제점\r로그를 깔끔하게 처리하게 도와주는 slf4j와 LogBack\r예외 처리는 이렇게\r story11. JSP와 서블릿, Spring에서 발생할 수 있는 여러 문제점  JSP와 Servlet의 기본적인 동작 원리는 꼭 알아야 한다.\r적절한 include 사용하기\r자바 빈즈, 잘 쓰면 약 못쓰면 독 \r태그 라이브러리도 잘 써야 한다.\r스프링 프레임워크의 간단 정리 \r스프링 프레임워크를 사용하면서 발생할 수 있는 문제점들 \r story12. DB를 사용하면서 발생 가능한 문제점들 DB Connection과 Connection Pool, DataSource \rDB를 사용할 때 닫아야 하는 것들 \rJDK 7에서 등장한 AutoClosable 인터페이스 \rResultSet.last() 메소드 \rJDBC를 사용하면서 유의할 만한 몇 가지 팁 \r story13. XML과 JSON도 잘 쓰자.  자바에서 사용하는 XML 파서의 종류는?\rSAX 파서는 어떻게 사용할까? \rDOM 파서는 어떻게 사용할까?\rXML 파서가 문제가 된 사례 \rJSON과 파서들 \r데이터 전송을 빠르게 하는 라이브러리 소개 \r story14. 서버를 어떻게 세팅해야 할까?  설정해야 하는 대상 \r아파치 웹 서버의 설정 \r웹 서버의 Keep Alive \rDB Connection Pool 및 스레드 개수 설정\rWAS 인스턴스 개수 설정 \rSession Timeout 시간 설정\r story15. 안드로이드 개발하면서 이것만은 피하자.  일반적인 서버 프로그램 개발과 안드로이드 개발은 다르다. \r구글에서 이야기하는 안드로이드 성능 개선\r안드로이드 분석에 도움이 되는 기본적인 툴들 \r안드로이드 앱의 상황을 확인 하는 방법은?\rsystrace를 활용하자. \r안드로이드에서는 이미지 처리만 잘해도 성능이 좋아진다. \r story16. JVM은 도대체 어떻게 구동될까?  HotSpot VM은 어떻게 구성되어 있을까? \rJIT Optimizer라는 게 도대체 뭘까? \rJRockit의 JIT 컴파일 및 최적화 절차 \rIBM JVM의 JIT 컴파일 및 최적화 절차 \rJVM이 시작할 때의 절차는 이렇다.\rJVM이 종료될 때의 절차는 이렇다. \r클래스 로딩 절차도 알고 싶어요? \r예외는 JVM에서 어떻게 처리될까?\r story17. 도대체 GC는 언제 발생할까?  GC란? \r자바의 Runtime data area는 이렇게 구성된다. \rGC의 원리 \rGC의 종류 \r5가지 GC 방식 \r강제로 GC 시키기 \r story18. GC가 어떻게 수행되고 있는지 보고 싶다.  자바 인스턴스 확인을 위한 jps \rGC 상황을 확인하는 jstat \rjstat 명령에서 GC 튜닝을 위해서 가장 유용한 옵션은 두 개 \r원격으로 JVM 상황을 모니터링하기 위한 jstatd\rverbosegc 옵션을 이용하여 gc 로그 남기기 \r어설프게 아는 것이 제일 무섭다.\r story19. GC 튜닝을 항상 할 필요는 없다. GC 튜닝을 꼭 해야 할까?\rGC의 성능을 결정하는 옵션들 \rGC 튜닝의 절차\r1, 2 단계: GC 상황 모니터링 및 결과 분석하기 \r3-1단계: GC 방식 지정 \r3-2 단계: 메모리 크기 \r4단계: GC튜닝 결과 분석 \r story20. 모니터링 API인 JMX  JMX란? \rMBean에 대해서 조금만 더 자세히 알아보자. \rVisual VM을 통한 JMX 모니터링 \r원격으로 JMX를 사용하기 위해서는… \r story21. 반드시 튜닝 해야 하는 대상은?  반드시 튜닝해야 하는 대상 선정 \r왜 로그인 화면을 튜닝(분석)해야 하는가? \r쇼핑몰 사이트에서는… \r story22. 어떤 화면이 많이 쓰이는지 알고 싶다.  웹 로그란?\r웹 로그를 통해서 접근 통계를 분석하기 싫다면… \r story23. 튜닝의 절차는 그때 그때 달라요.  성능 튜닝을 위한 아주 기초 법칙 \r성능 튜닝 Step by step \r성능 튜닝의 비법 \r story24. 애플리케이션에서 점검해야 할 대상들  패턴과 아키텍처는 잘 구성되어 있는가?\r기본적인 애플리케이션 코딩은 잘 되어 있는가? \r웹 관련 코딩은 잘 되어 있는가? \rDB 관련 코딩은 잘 되어 있는가?\r서버의 설정은 잘 되어 있는가? \r모니터링은 어떻게 하고 있는가?\r 부록 A. JMH 설치 및 설정 방법 \r부록 B. jstat 옵션 \r부록 C. Cache의 활용\n",
        "isbn10": "8966260926",
        "isbn13": "9788966260928"
    },
    {
        "title": "모던 자바스크립트 개발자를 위한 리액트 프로그래밍 (Node.js와 리액트를 활용한 최신 프런트엔드,백엔드 프로그래밍)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12836386",
        "image": "https://bookthumb-phinf.pstatic.net/cover/128/363/12836386.jpg?type=m1&udate=20190216",
        "author": "쿠지라 히코우즈쿠에",
        "price": "28000",
        "discount": "25200",
        "publisher": "위키북스",
        "pubdate": "20171207",
        "isbn": "1158390831 9791158390839",
        "description": "NODE.JS와 최신 자바스크립트 사양에 대해 소개하며, 페이스북이 개발한 UI 프레임워크인 리액트에 대해 알아봅니다. 또한 프런트엔드 개발에 초점을... 이 책은 자바스크립트와 관련된 기본 지식과 NODE.JS와 관련된 기본 지식이 있어야 원활하게 볼 수 있습니다. 조금 고급 주제를 다루는 책이므로 어렵게... ",
        "authorIntroContent": "\n쿠지라 히코우즈쿠에\n저자 : 쿠지라 히코우즈쿠에저자 쿠지라 히코우즈쿠에（くじらひこうづくえ）는 중학교 시절부터 취미로 하던 프로그래밍이 재미있어 다양한 것들을 만들다가 프로그래머가 되었다. 현재는 소프트웨어 기획 획사 '쿠지라한도'에서 '재미있고 도움되는 도구'를 주제로 윈도우, 안드로이드 등에서 동작하는 앱을 공개하고 있다. 대표작은 도레미로 작곡할 수 있는 음악 소프트웨어 '텍스트 음악 사쿠라'와 '일본어 기반 프로그래밍 언어 나데시코' 등이다. 2001년에는 온라인 소프트웨어 대상을 받았으며, 2004년 IPA 청소년부에서 슈퍼크리에이터로 인정을 받았고, 2010년에 OSS 공헌자 상을 수상했다. 프로그래밍의 즐거움을 전달하기 위해 매일 분투하고 있다.역자 : 윤인성역자 윤인성은 출근하는 게 싫어서 책을 집필/번역하기 시작했다. 일본어는 픽시브에서 웹 코믹을 읽다가 배웠다고 전해진다. 현재 직업 특성상 집에서 나갈 이유가 별로 없다는 것에 굉장히 만족하는 성격이기도 하다. 홍차와 커피를 좋아하며 요리, 음악, 그림, 스컬핑 등이 취미다.  『모던 웹을 위한 JAVASCRIPT+JQUERY 입문』 『모던 웹을 위한 NODE.JS 프로그래밍』 『모던 웹 디자인을 위한 HTML5+CSS3 입문』 등을 저술하였으며, 『최신 표준 HTML+CSS 디자인』 『파이썬을 이용한 머신러닝, 딥러닝 실전 개발 입문』 『스위프트로 시작하는 아이폰 앱 개발 교과서』 『모던 웹사이트 디자인의 정석』 『유니티 게임 이펙트 입문』(이상 위키북스), 『실전 게임 제작으로 배우는 언리얼 엔진 4』 『TOPCODER 알고리즘 트레이닝』 『NATURE OF CODE』(이상 한빛미디어), 『소셜 코딩으로 이끄는 GITHUB 실천 기술』(제이펍) 등을 번역했다.\n",
        "bookIntroContent": "이 책은 NODE.JS와 리액트를 사용한 응용 프로그램 개발 과정을 설명한 해설서입니다.NODE.JS와 최신 자바스크립트 사양에 대해 소개하며, 페이스북이 개발한 UI 프레임워크인 리액트에 대해 알아봅니다. 또한 프런트엔드 개발에 초점을 맞춰 일렉트론을 사용해 데스크톱 애플리케이션을 만들거나, 리액트 네이티브를 사용해 스마트폰 애플리케이션을 만드는 방법도 소개합니다. 이어서 게시판, 실시간 채팅, 위키 시스템, 개인 SNS 등의 웹 애플리케이션을 만들어 보면서 NODE.JS와 리액트를 제대로 활용하는 방법을 살펴봅니다. 더불어 최근 개발 환경을 구축할 때 가상 환경을 사용하는 경우가 많아짐에 따라 이 책에서는 가상 머신을 준비하고, 가상 머신 위에서 프로그램을 동작시키는 방법도 소개합니다.이 책은 자바스크립트와 관련된 기본 지식과 NODE.JS와 관련된 기본 지식이 있어야 원활하게 볼 수 있습니다. 조금 고급 주제를 다루는 책이므로 어렵게 느껴질 수 있는 독자를 위해 역자가 제작한 무료 동영상 강의를 아래 사이트에서 제공하고 있습니다.",
        "tableOfContentsContent": "\n* 01장: Node.js와 환경 설정 \r1.1 모던 자바스크립트 \r___1.1.1 오래됐으면서도 새로운 자바스크립트의 역사 \r___1.1.2 모던 웹 개발을 위한 라이브러리 \r1.2 자바스크립트를 이용한 서버 사이드 처리 - Node.js \r___1.2.1 3분만에 살펴보는 Node.js \r___1.2.2 대량 접근에 강한 Node.js \r1.3 패키지 매니저 npm\r___1.3.1 npm으로 할 수 있는 것\r___1.3.2 npm으로 라이브러리를 설치하는 방법\r___1.3.3 npm을 사용한 프로젝트 생성 방법\r___1.3.4 npm을 사용해 스크립트 실행하기\r___1.3.5 Yarn\r1.4 개발에 사용되는 에디터\r___1.4.1 텍스트 에디터\r___1.4.2 온라인 코드 에디터\r___1.4.3 웹 브라우저의 개발자 도구\r1.5 자바스크립트 표준 스타일 - 코딩 규약\r___1.5.1 자바스크립트 표준 스타일이란?\r___1.5.2 왜 코딩 규약이 필요할까?\r___1.5.3 JS 표준 스타일이란?\r___1.5.4 주목해야 하는 규약\r___1.5.5 자동으로 스타일 확인하고 변환하기\r___1.5.6 아톰 에디터에서 실시간으로 확인하기\r1.6 Node.js로 간단한 웹 애플리케이션 만들기\r___1.6.1 간단한 웹 애플리케이션\r___1.6.2 웹 애플리케이션의 구조\r___1.6.3 접근 URL에 따라 응답 내용 바꾸기\r1.7 Node.js의 비동기 처리\r___1.7.1 동기 처리와 비동기 처리\r___1.7.2 익명 함수란?\r___1.7.3 콜백 지옥이라는 함정\r___1.7.4 ECMAScript 2015에서의 콜백 지옥 해결 방법\r1.8 바벨로 최신 자바스크립트 사용하기\r___1.8.1 바벨이란?\r___1.8.2 바벨 전용 설정 파일 만들기\r___1.8.3 package.json에 여러 가지 명령어 등록하기\r___1.8.4 바벨 - 그 밖의 기능\r1.9 모듈의 구조 이해하기\r___1.9.1 Node.js의 require에 대해\r___1.9.2 ES2015의 import/export 기능\r___1.9.3 모듈의 기본 요소를 지정하는 방법\r * 02장: 리액트 입문\r2.1 리액트의 기본적인 사용법\r___2.1.1 리액트 시작하기\r___2.1.2 자바스크립트 내부에 HTML 작성하기\r2.2 리액트와 JSX의 관계\r___2.2.1 리액트/JSX\r___2.2.2 JSX 태그 내부에 변수를 넣는 방법\r___2.2.3 JSX가 내부적으로 변환되는 형태 \r2.3 리액트의 인기 비결 - 가상 DOM \r___2.3.1 가상 DOM이란? \r___2.3.2 리액트로 DOM 변경하기 \r___2.3.3 바이너리 시계 만들기 \r2.4 리액트로 컴포넌트 만들기 \r___2.4.1 컴포넌트란? \r___2.4.2 리액트를 사용해 컴포넌트를 만드는 방법 \r___2.4.3 조금 더 복잡한 컴포넌트의 경우 \r___2.4.4 리스트 컴포넌트 만들기 \r___2.4.5 화살표 함수로 컴포넌트 정의하기 \r2.5 본격적으로 컴포넌트 만들기 \r___2.5.1 컴포넌트의 상태 관리하기 \r___2.5.2 시계 컴포넌트 만들기 \r2.6 이벤트의 구조와 구현 \r___2.6.1 리액트로 클릭 이벤트를 구현하는 방법 \r___2.6.2 간단한 체크박스 구현하기 \r___2.6.3 리액트로 이벤트를 만드는 방법 \r2.7 리액트 도구를 사용한 자동 빌드 \r___2.7.1 리액트/JSX 컴파일 환경 만들기 \r___2.7.2 create-react-app 설치 \r___2.7.3 기본 애플리케이션 구조 확인하기 \r2.8 웹팩으로 리소스 파일 변환하기 \r___2.8.1 웹팩이란? \r___2.8.2 웹팩으로 리액트/JSX 빌드하기 \r * 3장: 리액트 컴포넌트 만들기 \r3.1 컴포넌트의 라이프사이클 \r___3.1.1 컴포넌트의 라이프사이클 \r___3.1.2 스톱워치 만들기 \r3.2 리액트와 입력 양식 \r___3.2.1 간단한 입력 양식 만들기 \r___3.2.2 숫자만 입력받는 텍스트박스 만들기 \r___3.2.3 여러 개의 입력 항목을 가진 입력 양식 만들기 \r3.3 컴포넌트끼리 연동하기 \r___3.3.1 컴포넌트끼리 연동하는 방법 \r___3.3.2 inch와 cm 단위를 변환하는 컴포넌트 만들기 \r3.4 컴포넌트의 3대 요소 사용 구분 \r___3.4.1 상태와 프로퍼티 \r___3.4.2 색 선택 컴포넌트 만들기 \r3.5 입력 필드와 값의 유효성 검사 \r___3.5.1 우편 번호 입력 컴포넌트 만들기 \r___3.5.2 범용적인 입력 컴포넌트 만들기 \r___3.5.3 URL을 나타내는 정규 표현식 패턴 \r3.6 입력 필드와 값의 유효성 검사 \r___3.6.1 리액트는 직접 DOM을 조작하지 않는 것이 기본 \r___3.6.2 render() 메서드를 사용할 때 고려해야 할 사항 \r3.7 리액트 컴포넌트에서 Ajax 통신 사용하기 \r___3.7.1 Ajax 통신 사용하기 \r___3.7.2 SuperAgent의 기본적인 사용법 \r___3.7.3 리액트 애플리케이션으로 JSON을 읽어 들이고 선택 박스 만들기 \r3.8 리액트에서 입력 양식을 다루는 방법 \r___3.8.1 텍스트박스(input type=\"text\") \r___3.8.2 체크박스(input type=\"checkbox\") \r___3.8.3 텍스트에리어(textarea) \r___3.8.4 라디오버튼(input type=\"radio\") \r___3.8.5 선택박스(select) \r * 04장: 프런트엔드 개발 - 일렉트론과 리액트 네이티브 \r4.1 리액트를 이용한 프런트엔드 개발 \r___4.1.1 프런트엔드란? \r___4.1.2 데스크톱 전용 애플리케이션 개발 - 일렉트론 \r___4.1.3 스마트폰 전용 리액트 네이티브 \r4.2 일렉트론 사용해보기 \r___4.2.1 일렉트론 시작하기 \r___4.2.2 일렉트론에 리액트 개발 환경 추가하기 \r___4.2.3 일렉트론의 구조 이해하기 \r___4.2.4 클립보드 가공 애플리케이션 만들기 \r___4.2.5 애플리케이션 배포하기 \r4.3 마스토돈 클라이언트 만들기 \r___4.3.1 마스토돈이란? \r___4.3.2 마스토돈 웹 API 사용해보기 \r___4.3.3 일렉트론 애플리케이션 마무리하기 \r4.4 리액트 네이티브로 스마트폰 애플리케이션 만들기 (안드로이드 편) \r___4.4.1 리액트와 리액트 네이티브의 차이 \r___4.4.2 안드로이드 개발 환경 설정 \r___4.4.3 프로그램 수정하기 \r___4.4.4 애플리케이션 배포하기 \r4.5 리액트 네이티브로 스마트폰 애플리케이션 만들기(iOS 편) \r___4.5.1 iOS 개발을 위한 리액트 네이티브 설치 \r___4.5.2 리액트 네이티브 프로젝트 만들기 \r___4.5.3 샘플 프로그램 수정하기 \r___4.5.4 실제 iOS 장치에서 실행하는 방법 \r4.6 스마트폰 전용 마스토돈 클라이언트 만들기 \r___4.6.1 예제 미리보기 \r___4.6.2 리액트 네이티브 프로젝트 만들기 \r___4.6.3 리액트 네이티브 전용 스마트폰 클라이언트 \r * 05장: SPA를 위한 프레임워크 \r5.1 SPA: 웹 서버와 리액트의 역할 분담 \r___5.1.1 SPA \r___5.1.2 웹 서버와 리액트의 역할 분담 \r5.2 웹 애플리케이션 전용 프레임워크 익스프레스 \r___5.2.1 익스프레스 설치 \r___5.2.2 Hello World 만들기 \r___5.2.3 다양한 경로에 대응하기 \r___5.2.4 POST 메서드 요청 받기 \r___5.2.5 업로드한 파일 받기 \r___5.2.6 자동으로 파일 응답하기 \r5.3 플럭스의 구조 이해하기\r___5.3.1 리액트에 플럭스가 필요한 이유 \r___5.3.2 플럭스의 구성 요소 \r___5.3.3 구성 요소의 정보 전달 흐름 \r5.4 리액트 라우터를 이용해 조금 복잡한 애플리케이션 만들기 \r___5.4.1 리액트 라우터란? \r___5.4.2 간단한 예제 \r___5.4.3 고정 헤더와 푸터 사용하기 \r___5.4.4 매개변수 사용 \r___5.4.5 리액트 라우터와 관련된 자세한 내용 \r5.5 리액트 + 익스프레스로 게시판 만들기 \r___5.5.1 예제 미리보기 \r___5.5.2 프로젝트 만들기 \r___5.5.3 웹 서버 프로그램 \r___5.5.4 클라이언트(리액트) 프로그램 \r5.6 실시간 채팅 만들기 \r___5.6.1 웹 소켓이란? \r___5.6.2 예제 미리보기 - 실시간 채팅 \r___5.6.3 프로젝트 만들기 \r___5.6.4 웹소켓 통신 \r___5.6.5 프로그램 - 채팅 서버 \r___5.6.6 프로그램 - 채팅 클라이언트 \r___5.6.7 SPA 구현에서 중요한 것 \r * 06장: 실전 애플리케이션 개발 \r6.1 누구나 편집할 수 있는 Wiki 시스템 만들기 \r___6.1.1 위키 시스템\r___6.1.2 위키 애플리케이션 구성하기 \r___6.1.3 프로젝트 만들기 \r___6.1.4 웹 서버 프로그램 - 위키 서버 \r___6.1.5 위키 클라이언트 \r___6.1.6 위키 파서 - PEG.js로 파서 만들기 \r6.2 개인 SNS 만들기 \r___6.2.1 예제 미리보기 \r___6.2.2 프로젝트 만들기 \r___6.2.3 서버 - SNS 서버 \r___6.2.4 클라이언트 - SNS 클라이언트 \r6.3 머신러닝으로 손글씨 숫자 판별하기 \r___6.3.1 예제 미리보기 - 실시간 손글씨 숫자 인식 도구 \r___6.3.2 손글씨 숫자 데이터베이스 다운로드 \r___6.3.3 바이너리 파일 해석하기 \r___6.3.4 머신러닝 적용 \r___6.3.5 문자열 인식 서버 프로그램 \r___6.3.6 문자 인식 클라이언트(리액트) 프로그램 \r___6.3.7 책을 마치면서 - 개발한 애플리케이션 공개하기 \r___6.3.8 마지막으로 \r * 부록A: 개발 환경 구축 \rA-1 Node.js 설치하기 \r___A.1.1 윈도우의 경우 \r___A.1.2 macOS의 경우 \rA-2 버추얼박스로 가상 환경 구축하기 \r___A.2.1 설치 과정 \r___A.2.2 필요한 도구 다운로드 \r___A.2.3 윈도우에 개발 환경 설치하기 \r___A.2.4 macOS에 개발 환경 구축하기 \r___A.2.5 Vagrantfile 수정하기 \r___A.2.6 베이그런트 설정과 조작 방법 \r___A.2.7 가상 환경 충돌 \rA-3 가상 환경 우분투에 Node.js 설치하기 \r___A.3.1 설치하고 사용하기\n",
        "isbn10": "1158390831",
        "isbn13": "9791158390839"
    },
    {
        "title": "처음 해보는 자바 프로그래밍 (JVM 메모리 구조로 이해하는 객체지향)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14474879",
        "image": "https://bookthumb-phinf.pstatic.net/cover/144/748/14474879.jpg?type=m1&udate=20190126",
        "author": "오정임",
        "price": "30000",
        "discount": "27000",
        "publisher": "루비페이퍼",
        "pubdate": "20190201",
        "isbn": "1186710322 9791186710326",
        "description": "입문자와 비전공자가 이해할 수 있는 가장 친절하고 쉬운 자바 입문서이 책은 자바 프로그래밍의 핵심 즉, 객체지향 프로그래밍을 JVM 메모리 구조와 함께 쉽고 친절하게 설명하여 자바 프로그래밍 개념을 완벽히 다집니다. 또한 프로그래밍 기초 문법 역시 꼼꼼하게 설명하여 어느 언어를 접하더라도 쉽게... ",
        "authorIntroContent": "\n오정임\n저자 : 오정임2000년부터 현재까지 멀티캠퍼스(삼성 SDS 멀티캠퍼스) 전임 교수로 활동하고 있으며, ㈜더브레인 개발이사로 재직 중이다. 삼성전자, 썬마이크로시스템즈, 삼성SDS, 공공기관, 기업, 대학에서 프로젝트 및 교육, 콘텐츠 개발에 참여해오고 있으며 2017년부터 멀티캠퍼스 이러닝에서 “업무에 바로 쓰는 자바 프로그래밍 입문” 동영상 강의를 서비스하고 있다.\n",
        "bookIntroContent": "입문자와 비전공자가 이해할 수 있는 가장 친절하고 쉬운 자바 입문서이 책은 자바 프로그래밍의 핵심 즉, 객체지향 프로그래밍을 JVM 메모리 구조와 함께 쉽고 친절하게 설명하여 자바 프로그래밍 개념을 완벽히 다집니다. 또한 프로그래밍 기초 문법 역시 꼼꼼하게 설명하여 어느 언어를 접하더라도 쉽게 친숙해질 수 있도록 구성했습니다. 더 나아가 현업에서 필요한 역량까지 갖출 수 있도록 자바 11에서 제공하는 기본 기술 및 고급 기술들을 충분히 설명합니다.",
        "tableOfContentsContent": "\n1장 자바 소개 및 개발환경 구축  _1.1. 프로그램과 프로그래밍 언어\r_1.2. 자바의 역사 \r_1.3. 프로그램 개발 순서\r__1.3.1. 소스 파일 \r__1.3.2. 컴파일 \r__1.3.3. 자바 실행 파일 \r_1.4. JVM \r__1.4.1. JVM 개요 \r__1.4.2. JVM 실행 환경\r_1.5. 개발환경 구축\r__1.5.1. 자바 플랫폼\r__1.5.2. JDK 설치\r__1.5.3. 자바 환경 설정\r__1.5.4. 자바 개발 도구\r_1.6. 메모장에서 예제 작성\r__1.6.1. 자바 소스 파일 \r__1.6.2. 컴파일 \r__1.6.3. 실행 \r_1.7. 이클립스에서 예제 작성 \r__1.7.1. 이클립스 설치 \r__1.7.2. 자바 소스 작성 \r__1.7.3. 컴파일 \r__1.7.4. 실행\r 2장 데이터 활용  _2.1. 변수 기본\r__2.1.1. 변수란?\r__2.1.2. 변수 선언\r__2.1.3. 변수에 데이터 저장\r__2.1.4. 변수 사용\r_2.2. 데이터 종류\r__2.2.1. 논리 타입 \r__2.2.2. 문자 타입 \r__2.2.3. 정수 타입 \r__2.2.4. 실수 타입 \r__2.2.5. 참조 타입 \r_2.3. 데이터 연산\r__2.3.1. 산술 연산자 \r__2.3.2. 증감 연산자 \r__2.3.3. 비교 연산자 \r__2.3.4. 부호 연산자\r__2.3.5. 복합 대입 연산자\r__2.3.6. 논리 연산자 \r__2.3.7. 부정 연산자 \r__2.3.8. 비트 연산자 \r__2.3.9. 삼항 연산자 \r_2.4. 데이터 타입 변환 \r__2.4.1. 자동 타입 변경 \r__2.4.2. 직접 타입 변경 \r 3장 제어문 : 실행 흐름 제어하기  _3.1. 주석문 : 소스에 메모해두기\r__3.1.1. 주석문 \r__3.1.2. 어노테이션 \r__3.1.3. Javadoc 주석\r_3.2. 조건문 : 조건에 따라 흐름 나누기 \r__3.2.1. if 문 \r__3.2.2. switch~case 문 \r_3.3. 반복문 : 여러 번 실행하기 \r__3.3.1. 반복문의 구성요소 \r__3.3.2. for 문 \r__3.3.3. 제어 변숫값 변경 과정 추적 : 이클립스에서 디버깅하기\r__3.3.4. while 문 \r__3.3.5. do~while 문\r_3.4. 반복문 제어하기 : 멈추거나 계속 진행하기 \r__3.4.1. 실행을 멈추고 반복문 탈출하기 : break 문 \r__3.4.2. 그다음 조건으로 계속 실행하기 : continue 문 \r_3.5. 제어문 중첩하기 \r__3.5.1. if 문 중첩 \r__3.5.2. 반복문 중첩 \r 4장 배열 : 데이터 나열하기  _4.1. 배열, 무엇일까요? 왜 필요할까요? \r_4.2. 배열 기본기를 다져보아요 \r__4.2.1. 배열 생성하기 \r__4.2.2. 배열에 이름 붙이기 \r__4.2.3. 배열에 값을 넣거나 가져오기 \r__4.2.4. 배열 초기화하기 \r__4.2.5. 배열의 길이 구하기: length \r__4.2.6. 확장 for 문 \r__4.2.7. 배열을 활용하는 실습 \r_4.3. 차원이 다른 배열 \r__4.3.1. 2차원 배열의 구조 \r__4.3.2. 2차원 배열 예제 \r__4.3.3. 배열이 저장되는 메모리 구조 \r_4.4. 명령행 매개변수 \r__4.4.1. 명령행 매개변수란 \r__4.4.2. 이클립스에서 명령행 매개변수 이용하기 \r 5장 객체지향 알기  _5.1. 객체지향의 주인공은 '객체' \r__5.1.1. 그러니까 객체란 말이지... \r__5.1.2. 객체를 모델링해보자 \r_5.2. 클래스란 무엇일까? \r__5.2.1. 클래스 다이어그램 \r__5.2.2. 클래스 기본 구조 \r__5.2.3. 접근 제한자 \r_5.3. 자바 소스 파일 파헤치기 \r__5.3.1. 패키지 선언 \r__5.3.2. 클래스 임포트 \r__5.3.3. 클래스 선언 \r_5.4. 필드 \r_5.5. 메서드 \r__5.5.1. 메서드 호출 \r__5.5.2. 메서드 실행을 멈추고 값 반환하기 \r__5.5.3. 매개변수 \r_5.6. 메서드 오버로딩 \r_5.7. 가변 길이 인자 \r 6장 객체지향 구현  _6.1. 클래스와 객체, 그리고 인스턴스 \r__6.1.1. 클래스와 객체 생성 \r__6.1.2. 자바의 메모리 \r__6.1.3. 참조변수를 이용해 인스턴스에 접근 \r_6.2. 정적 멤버 선언 \r__6.2.1. 클래스 필드 \r__6.2.2. 클래스 메서드 \r_6.3. 생성자 \r__6.3.1. 생성자 개요 \r__6.3.2. 생성자 오버로딩 \r__6.3.3. 기본 생성자 \r__6.3.4. 자신을 가리키는 키워드 this \r 7장 상속과 인터페이스  _7.1. 상속 개요 \r__7.1.1. 상속이란? \r__7.1.2. 상속 구현 \r_7.2. 상속 활용 \r__7.2.1. 메서드 오버라이딩 \r__7.2.2. 부모 클래스 멤버에 직접 접근하기 \r__7.2.3. final 제어자 \r_7.3. 추상 개념 \r__7.3.1. 추상 메서드 \r__7.3.2. 추상 클래스 \r_7.4. 인터페이스 \r__7.4.1. 인터페이스란 \r__7.4.2. 인터페이스 상속 \r 8장 다형성과 내부 클래스  _8.1. 다형성 \r__8.1.1. 다형성 개요 \r__8.1.2. 다형성의 원리 \r__8.1.3. 다형성의 필요성 \r__8.1.4. 다형성의 활용 \r_8.2. 내부 클래스 \r__8.2.1. 내부 클래스란 \r__8.2.2. 내부 클래스 종류 \r__8.2.3. 익명 클래스 \r_8.3. 열거형 클래스 \r 9장 기본 API 활용하기  _9.1. API 문서 \r__9.1.1. 라이브러리란 \r__9.1.2. 자바 API \r_9.2. 기본 API \r__9.2.1. Object 클래스 \r__9.2.2. String 클래스 \r__9.2.3. StringBuffer/StringBuilder 클래스 \r__9.2.4. Math 클래스 \r__9.2.5. Wrapper 클래스 \r_9.3. 유틸리티 API \r__9.3.1. StringTokenizer 클래스 \r__9.3.2. Random 클래스 \r__9.3.3. Arrays 클래스 \r9.3.4. Date / Calendar 클래스 \r9.3.5. Pattern 클래스 \r9.3.6. Format 클래스 \r 10장 컬렉션 API 활용하기  _10.1. 컬렉션 개요 \r__10.1.1. 배열의 특성 \r__10.1.2. 컬렉션 프레임워크 \r_10.2. List 계열 \r__10.2.1. ArrayList 클래스 \r__10.2.2. Vector 클래스 \r__10.2.3. LinkedList 클래스 \r_10.3. Map 계열 \r__10.3.1. Entry 인터페이스 \r__10.3.2. HashMap 클래스 \r__10.3.3. Hashtable 클래스 \r__10.3.4. TreeMap 클래스 \r_10.4. Set 계열 \r__10.4.1. HashSet 클래스 \r__10.4.2. TreeSet 클래스 \r 11장 예외 처리하기  _11.1. 예외 처리 개요 \r_11.2. 자바 예외 API \r__11.2.1. 예외 처리 객체 구조 \r__11.2.2. 예외 객체 종류 \r__11.2.3. 예외 발생 원리 \r_11.3. 예외 처리 방법 \r__11.3.1. try-catch 문\r__11.3.2. 예외 처리 메서드 \r11.3.3. finally 문\r11.3.4. try-with-resources \r_11.4. 예외 던지기 : throws 문 \r_11.5. 사용자 정의 예외 객체 \r 12장 입출력 작업하기  _12.1. 입출력 개요 \r__12.1.1. 입출력 원리 \r__12.1.2. 입출력 API \r_12.2. 기본 입출력 작업 \r__12.2.1. 파일 입출력 \r__12.2.3. 필터 스트림 활용 \r_12.3. 파일 처리 \r__12.3.1. File 클래스 \r__12.3.2. Path 클래스 \r__12.3.3. RandomAccessFile 클래스 \r__12.3.4. 프로퍼티 파일 \r__12.3.5. FileChannel 클래스 \r__12.3.6. 압축 파일 \r_12.4. 객체 직렬화 \r__12.4.1. Serializable 인터페이스 \r__12.4.2. serialVersionUID 필드 \r 13장 제네릭과 어노테이션  _13.1. 제네릭 \r__13.1.1. 제네릭 개요 \r__13.1.2. 타입 매개변수 \r__13.1.3. 다양한 적용 \r_13.2. 어노테이션 \r__13.2.1. 어노테이션 개요 \r__13.2.2. 정보 추출 \r__13.2.3. 기본값 지정 \r__13.2.4. 표준 어노테이션 \r 14장 람다식  _14.1. 람다식 이전 프로그램 구현 방식 \r_14.2. 인터페이스 구현 방법 \r__14.2.1. 방법 1 : implements 키워드로 클래스 선언 \r__14.2.2. 방법 2 : 익명 클래스 사용 \r__14.2.3. 방법 3 : 선언, 생성, 호출을 한번에 처리 \r__14.2.4. 매개변수 \r__14.2.5. 리턴 타입 \r_14.3. 람다식 사용하기 \r__14.3.1. 람다식 기본 \r__14.3.2. 람다식 활용 \r__14.3.3. 메서드 참조 \r__14.3.4. 함수형 인터페이스 API \r 15장 스트림 API  _15.1. 스트림이란? \r__15.1.1. 스트림 사용 3단계 \r__15.1.2. 스트림 특징 \r_15.2. 스트림 종류 \r__15.2.1. 스트림 생성 방법 \r__15.2.2. BaseStream 인터페이스 \r__15.2.3. Stream 인터페이스 \r__15.2.4. 기본 타입 스트림 \r__15.2.5. 병렬 스트림 \r_15.3. 스트림 활용 \r__15.3.1. 매핑 작업 \r__15.3.2. 컬렉션 변환 \r__15.3.3. 반복자 \r 16장 멀티태스킹의 첫걸음, 스레드 알기  _16.1. 스레드란? \r_16.2. 스레드 활용 \r__16.2.1. 구현 및 실행 \r__16.2.2. Thread 클래스 \r__16.2.3. Runnable 인터페이스 \r__16.2.4. 스레드 설정 \r_16.3. 동기화 \r__16.3.1. 동기화란? \r__16.3.2. 동기화 처리 \r_16.4. 스레드 제어 \r__16.4.1. 스레드 상태 \r__16.4.2. 스레드 제어 \r_16.5. 스레드 풀 \r__16.5.1. ExecutorService 인터페이스 \r__16.5.2. Future 인터페이스 \r 17장 모듈  _17.1. 모듈이란? \r_17.2. 모듈화 \r__17.2.1. 모듈 선언 \r__17.2.2. 모듈 시스템\r__17.2.3. java.base 모듈\r__17.2.4. 자동 모듈 변환\r_17.3. 모듈 지시자\r__17.3.1. exports-to 문\r__17.3.2. transitive 지시자\r__17.3.3. provides-with, uses\r 18장 Networking  _18.1. 개요 \r__18.1.1. 용어 \r_18.2. Socket 통신 \r__18.2.1. Socket \r__18.2.2. ServerSocket \r_18.3. NIO 통신 \r__18.3.1. SocketChannel \r__18.3.2. ServerSocketChannel \r 19장 JShell 사용하기  _19.1. JShell이란? \r_19.2. JShell 실행 방법\r_19.3. JShell 기본 \r__19.3.1. 자바 코드 \r__19.3.2. 명령어 \r__19.3.3. 기본 사용법 \r__19.3.4. 클래스 작업 \r__19.3.5. 패키지 사용 \r_19.4. JShell 부가 기능 \r__19.4.1. 편집기 \r__19.4.2. 도움말 \r__19.4.3. 실행과 삭제 \r__19.4.4. JShell 실행환경\n",
        "isbn10": "1186710322",
        "isbn13": "9791186710326"
    },
    {
        "title": "속 깊은 JavaScript (ECMAScript 표준 문서를 바탕으로 펼치는 속 깊은 자바스크립트)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11282182",
        "image": "https://bookthumb-phinf.pstatic.net/cover/112/821/11282182.jpg?type=m1&udate=20171028",
        "author": "양성익",
        "price": "28000",
        "discount": "25200",
        "publisher": "루비페이퍼",
        "pubdate": "20161111",
        "isbn": "1186710098 9791186710098",
        "description": "어디서 쉽게 들어볼 수 없었던 자바스크립트의 깊은 내용, ECMASCRIPT 표준을 바탕으로 담다!『속 깊은 자바스크립트』는 자바스크립트 개발자로서 기본으로 알아야 하는 개념과 동작 원리를 ECMASCRIPT라고 하는 자바스크립트 표준을 바탕으로 자세하게 다룬다. 그리고 C나 JAVA 등 다른 언어로... ",
        "authorIntroContent": "\n양성익\n저자 : 양성익저자 양성익은 현재 미국 아마존(AMAZON) 본사에서 소프트웨어 엔지니어로 일하고 있는 그는 2001년부터 웹 개발과 자바스크립트를 시작하였다. 이후 2005년에 스탠드얼론(STAND ALONE) 프로그램이었던 군병자력관리 시스템을 AJAX를 활용하여 웹으로 옮기는 등 자바스크립트를 다양하게 활용하였다. 이후 모바일, 통신, 서버 개발 등 다양한 분야에서 개발직을 수행하면서, 각종 프로그래밍 언어나 표준, 프레임워크 등을 공부하고 연구하여 이를 블로그나 SNS를 통해 공유하는 것을 즐긴다.\n",
        "bookIntroContent": "어디서 쉽게 들어볼 수 없었던 자바스크립트의 깊은 내용, ECMASCRIPT 표준을 바탕으로 담다!『속 깊은 자바스크립트』는 자바스크립트 개발자로서 기본으로 알아야 하는 개념과 동작 원리를 ECMASCRIPT라고 하는 자바스크립트 표준을 바탕으로 자세하게 다룬다. 그리고 C나 JAVA 등 다른 언어로 프로그래밍을 시작한 사람을 위해 브라우저 환경이라서 발생하는 자바스크립트만의 특징을 소개하고, 이에 맞게 코딩하는 방법을 살펴본다.자바스크립트 개발에서 핵심인 클로저와 변수를 깊이 있게 다루고, 자바스크립트로 객체지향을 구현하는 방법과 실용적인 자바스크립트 디자인 패턴을 통하여 바로 활용할 수 있는 예제를 제시한다. 또한, 변수 표기법이나 공백과 탭, 중괄호 여는 위치, 엄격(STRICT) 모드 등 소소하지만 결코 무시할 수 없는 코딩 스타일을 소개하고, 소스코드 크기를 줄이거나(MINIFICATION) 압축하기(GZIP과 DEFLATE), 합치기 등으로 사용자 경험을 개선하는 방법, 개발 환경을 편리하게 구성하는 방법 등 어디서 쉽게 들어볼 수 없었던 자바스크립트의 깊은 내용을 담았다.",
        "tableOfContentsContent": "\n1장. 웹과 자바스크립트\r1.1. 자바스크립트의 어제와 오늘\r1.2. 웹 개발 방법론의 변화\r 2장. 자바스크립트의 스코프와 클로저\r2.1. 스코프란?\r__2.1.1. 스코프의 생성\r__2.1.2. 스코프의 지속성\r__2.1.3. with 구문\r__2.1.4. with 구문을 자제해야 하는 이유\r2.2. 클로저란?\r__2.2.1. 클로저 쉽게 이해하기\r__2.2.2. 클로저의 실제 활용 예\r__2.2.3. 클로저의 단점\r 3장. 자바스크립트의 변수\r3.1. 자바스크립트의 기본형과 typeof\r3.2. new String(\"\")과 \"\", 그리고 String(\"\")의 차이\r3.3. 글로벌 변수\r3.4. 글로벌 변수 정의\r3.5. window 객체\r3.6. 글로벌 변수 선언 방법과 차이\r3.7. var 키워드의 효율적인 사용\r3.8. 글로벌 변수 최소화하기\r3.9. 변수 사용 방법과 성능\r 4장. 프로토타입과 객체지향, 그리고 상속\r4.1. 프로토타입을 통한 객체지향\r__4.1.1. 프로토타입이란?\r__4.1.2. 자바스크립트와 자바에서의 객체 생성\r__4.1.3. this의 이해\r__4.1.4. new 키워드\r__4.1.5. 프로토타입에 대한 표준 정의\r__4.1.6. 프로토타입의 사용 예\r__4.1.7. 프로토타입과 생성자\r__4.1.8. 객체 내의 속성 탐색 순서\r__4.1.9. 프로토타입의 장단점\r4.2. 자바스크립트에서의 상속 활용\r__4.2.1. 기존의 상속 구현 방법\r__4.2.2. instanceof 동작 원리\r__4.2.3. Object.create 함수\r__4.2.4. Object.create 함수의 상속 여부 확인\r__4.2.5. Object.create의 객체 초기화\r__4.2.6. Object.create와 new 키워드 조합\r__4.2.7. class와 extends를 통한 상속\r__4.2.8. Object.create 함수 크로스브라우저 호환성 보완\r__4.2.9. 생성자 vs Object.create 성능 비교\r 5장. 디자인 패턴 실용\r5.1. 모듈 패턴\r5.2. 이벤트 델리게이션 패턴\r5.3. 프락시 패턴\r5.4. 데커레이터 패턴\r5.5. Init-time branching 패턴\r5.6. Self-defining function 패턴\r5.7. 메모이제이션 패턴\r5.8. Self-invoking constructor 패턴\r5.9. 콜백 패턴\r5.10. 커링 패턴\r 6장. 브라우저 환경에서의 자바스크립트\r6.1. 단일 스레드 환경\r6.2. requestAnimationFrame( ) 함수\r6.3. DOM과 자바스크립트\r__6.3.1. DOM repaint\r__6.3.2. DOM reflow\r__6.3.3. DOM 탐색 횟수 최소화를 통한 성능 개선\r6.4. 웹 워커\r 7장. 자바스크립트 성능과 사용자 경험 개선\r7.1. 〈script〉 태그 위치와 레이지 로드\r7.2. 인터넷 환경에서의 HTTP GET 최적화\r__7.2.1. 소스 미니피케이션으로 GET 용량 최소화\r__7.2.2. 파일을 압축해서 GET 용량 최소화(gzip과 deflate)\r__7.2.3. GET 요청 횟수 최소화(파일 합치기)\r__7.2.4. 캐시 설정\r 8장. 자바스크립트 코딩과 개발 환경\r8.1. 자바스크립트 코딩 스타일\r__8.1.1. 변수 이름 표기법\r__8.1.2. 공백과 탭\r__8.1.3. 중괄호 여는 위치\r__8.1.4. strict mode\r8.2. 자바스크립트 검증 도구 - JSLint\r8.3. 자바스크립트 빌드 환경\r 9장. 자바스크립트 표준\r9.1. ECMAScript 6 표준\r__9.1.1. 변수, 상수 선언 키워드(let, const)\r__9.1.2. 함수 화살표 표현식\r__9.1.3. 클래스(class) 키워드\r__9.1.4. 객체 표현식 기능 확대\r__9.1.5. 템플릿 문자열 표현식\r__9.1.6. Destructuring\r__9.1.7. 함수 인자 기능 확대\r__9.1.8. iterator와 for-of 기능\r__9.1.9. Map과 Set 기능 추가\r__9.1.10. Binary/Octal 표현식 추가\r__9.1.11. TypedArray 기능 추가\r__9.1.12. 모듈 기능 표준화\r__9.1.13. 프락시 모듈\r__9.1.14. Symbol 모듈\r__9.1.15. Promise 모듈\r9.2. ECMAScript 2016\r__9.2.1. Array.prototype.includes 함수\r__9.2.2. 지수 연산자\r 10장. 자바스크립트 프레임워크\r10.1. jQuery\r10.2. AngularJS\r10.3. React\r10.4. ExtJS\r10.5. RequireJS\r10.6. Backbone.js\r10.7. Ember\r10.8. Underscore.JS\r10.9. Node.js\r10.10. Cylon.js\n",
        "isbn10": "1186710098",
        "isbn13": "9791186710098"
    },
    {
        "title": "자바스크립트+jQuery 완전정복 스터디 3 (중급/고급/활용편)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=9650886",
        "image": "https://bookthumb-phinf.pstatic.net/cover/096/508/09650886.jpg?type=m1&udate=20190706",
        "author": "김춘경",
        "price": "32000",
        "discount": "28800",
        "publisher": "위키북스",
        "pubdate": "20151016",
        "isbn": "1158390149 9791158390143",
        "description": "구성된 『자바스크립트+JQUERY 완전정복 스터디』 제3권 중급 고급 활용편. 한 단계 높은 수준의 웹프로그래밍을 구현하기 위해 자바스크립트를 활용한 클래스와 객체지향을 다룬다. 또한 1, 2편에서 배운 내용을 바탕으로 실무에서 한 번쯤 만들게 되는 UI콘텐츠를 제작해 보면서 다양한 실무 팁과 테크닉도... ",
        "authorIntroContent": "\n김춘경\n저자 : 김춘경저자 김춘경(딴동네)는 웹 분야 중 주로 웹프론트엔드 개발과 웹앱 & 모바일웹앱 개발자로 활동하고 있으며 책 집필과 IT학원에서 웹 기술과 관련된 강의를 하고 있습니다. 또한 웹프론트엔드 개발자를 위한 온오프라인 공간인 웹동네를 운영하고 있습니다.웹동네는 웹앱과 웹프론트엔드 분야를 전문으로 연구하고 학습하는 그룹으로서, 온라인에서는 온라인 동영상 강의, 소셜 스터디, 정보공유 등을 진행하는 웹동네(HTTP://WWW.WEBDONGNE.COM) 사이트를 운영 중이며 오프라인에서는 맞춤형 스터디, 정보 공유 세미나, 실무 특강을 진행할 수 있는 웹동네 모임 공간을 운영하고 있습니다.\n",
        "bookIntroContent": "이제 막 시작하는 초급자를 위한 초급 단계와 일반 실무자의 실력 향상을 위한 중급/고급/실무 단계로 구성돼 있으며 개인의 실력과 목적에 맞게 선택해서 스터디를 진행할 수 있도록 구성된 『자바스크립트+JQUERY 완전정복 스터디』 제3권 중급 고급 활용편. 한 단계 높은 수준의 웹프로그래밍을 구현하기 위해 자바스크립트를 활용한 클래스와 객체지향을 다룬다. 또한 1, 2편에서 배운 내용을 바탕으로 실무에서 한 번쯤 만들게 되는 UI콘텐츠를 제작해 보면서 다양한 실무 팁과 테크닉도 알려준다.",
        "tableOfContentsContent": "\n[05부] 자바스크립트 클래스와 클래스 단위 프로그래밍\r ▣ 01장: 자바스크립트 클래스 기초\rLesson 01. 클래스 소개  \r__01. 클래스를 이해하기 위해 반드시 알고 있어야 하는 내용  \r__02. 클래스란?  \r__03. 자바스크립트에서 클래스란?  \rLesson 02. 클래스 관련 기본 개념과 용어정리  \r__01. 인스턴스  \r__02. 객체란?  \r__03. 프로퍼티  \r__04. 메서드  \rLesson 03. 오브젝트 리터럴 방식으로 클래스 만들기  \r__01. 사용법  \r__02. 예제  \r__03. 특징  \r__04. 실무에서 오브젝트 리터럴 사용 예  \rLesson 04. 함수 방식으로 클래스 만들기  \r__01. 사용법  \r__02. 예제  \r__03. 특징  \rLesson 05. 프로토타입 방식으로 클래스 만들기  \r__01. 사용법  \r__02. 예제  \r__03. 특징  \rLesson 06. 클래스 정의 방법 3가지 비교  \r__01. 특징  \r__02. 클래스 정의 방법(포장법) 비교  \r__03. 인스턴스 생성 방법  \r__04. 객체 외부에서 프로퍼티와 메서드 접근 방법\r__05. 객체 내부에서 프로퍼티와 메서드 접근 방법\rLesson 07. 미션\r ▣ 02장: 클래스 중급\rLesson 01. this의 정체\r__01. this란?\r__02. 일반 함수에서의 this\r__03. 일반 중첩 함수에서의 this\r__04. 이벤트 리스너에서의 this\r__05. 메서드에서의 this\r__06. 메서드 내부의 중첩 함수에서의 this\rLesson 02. 함수호출() vs. new 함수호출()\r__01. 함수호출()\r__02. new 함수호출()\rLesson 03. 함수 단위 코딩 vs. 클래스 단위 코딩\r__01. 함수 단위 코딩 1\r__02. 함수 단위 코딩 2\r__03. 클래스 단위 코딩\rLesson 04. 인스턴스 프로퍼티와 메서드 vs. 클래스 프로퍼티와 메서드\r__01. 인스턴스 프로퍼티와 메서드  \r__02. 클래스 프로퍼티와 메서드  \rLesson 05. 패키지  \r__01. 패키지란?  \r__02. 일반 프로그래밍에서 패키지  \r__03. 자바스크립트에서 패키지  \r ▣ 03장: jQuery 플러그인 제작 \rLesson 01. jQuery 확장 소개  \r__01. jQuery 확장이란?  \r__02. jQuery 확장 요소 종류 \rLesson 02. jQuery 유틸리티 만들기  \r__01. 유틸리티 소개 \r__02. 유틸리티 구조  \r__03. 사용자 정의 jQuery 유틸리티 만들기  \rLesson 03. jQuery 플러그인 만들기  \r__01. jQuery 플러그인 소개  \r__02. jQuery 플러그인 구조\r__03. jQuery 플러그인 구조 분석 \r__04. 사용자 정의 jQuery 플러그인 만들기\r__05. 다음 내용 예고\rLesson 04. 함수 기반 플러그인 만들기\r__01. 구문\r__02. 예제\r__03. 정리\rLesson 05. 클래스 기반 플러그인 만들기\r__01. 문법\r__02. 예제\r__03. 정리\rLesson 06. 플러그인 그룹 만들기\r__01. 소개\r__02. 예제\r__03. 결론\rLesson 07. extend() 메서드를 활용한 플러그인 옵션 처리\r__01. 기본 옵션값\r__02. jQuery의 extend() 메서드 소개\r__03. extend() 메서드를 활용한 플러그인 옵션 처리\rLesson 08. 미션\r [06부] 자바스크립트 객체지향 프로그래밍\r ▣ 01장: 객체지향 프로그래밍 기초\rLesson 01. 절차지향 프로그래밍 vs. 객체지향 프로그래밍\r__01. 절차지향 프로그래밍\r__02. 객체지향 프로그래밍\r__03. 절차지향 프로그래밍 vs. 객체지향 프로그래밍\rLesson 02. 객체지향 프로그래밍의 특징\r__01. 객체지향 프로그래밍이란?\r__02. 객체지향 프로그래밍 언어란?\r__03. 객체지향 프로그래밍 언어 학습법\r__04. 자바스크립트는 객체지향 프로그래밍 언어인가요?\rLesson 03. 객체지향 프로그래밍 언어에서 제공하는 기본 기능\r__01. 기본 기능 종류\r__02. 선언 부분과 구현 부분\r__03. 클래스\r__04. 인터페이스\r__05. 추상 클래스(abstract class)\r__06. UML 소개\rLesson 04. 이번 장을 마치며 \r ▣ 02장: 객체지향 프로그래밍 특징 01-추상화\rLesson 01. 추상화 소개\r__01. 추상화란?\r__02. 예제\rLesson 02. 자바스크립트에서 추상화\r__01. 일반 OOP에서 지원하는 추상화\r__02. 자바스크립트에서 추상화\rLesson 03. 미션\r ▣ 03장: 객체지향 프로그래밍 특징 02-캡슐화\rLesson 01. 캡슐화 소개\r__01. 캡슐화란?\r__02. 예제\rLesson 02. 자바스크립트에서의 캡슐화\r__01. 일반 OOP에서 지원하는 캡슐화 관련 기능\r__02. 자바스크립트에서 캡슐화\rLesson 03. 미션\r ▣ 04장: 객체지향 프로그래밍 특징 03-클래스 상속 기초 \rLesson 01. 클래스 상속 소개\r__01. 클래스 상속이란?\r__02. 상속은 이럴 때 사용해요\rLesson 02. 클래스 상속 기능\r__01. 코드 재사용\r__02. 중복 코드 제거\r__03. 확장\rLesson 03. 자바스크립트에서 클래스 상속\r__01. 일반 OOP에서 클래스 상속\r__02. 자바스크립트에서 클래스 상속\rLesson 04. 미션\r ▣ 05장: 객체지향 프로그래밍 특징 03-클래스 상속 중급\rLesson 01. 자식 클래스와 부모 클래스 연동처리\r__01. 자바스크립트 최상위 부모 Object 클래스\r__02. 자바스크립트에서 부모생성자 호출하기\rLesson 02. 자바스크립트에서 메서드 오버라이드\r__01. 메서드 오버라이드란?\r__02. 부모 클래스의 기능을 자식 클래스에서 재정의\r__03. 부모 클래스의 기능을 자식 클래스에서 확장\rLesson 03. 자바스크립트에서 메서드 오버로딩\r__01. 자바스크립트에서 메서드 오버로딩\r__02. 문법\r__03. 예제\rLesson 04. constructor 프로퍼티 활용\r__01. constructor 프로퍼티 소개\r__02. 예제\rLesson 05. 클래스 상속 규칙\r__01. 클래스 상속은 이럴 때 사용하면 안 되요\r__02. 예제\r ▣ 06장: 객체지향 프로그래밍 특징 04-다형성\rLesson 01. 다형성 소개\r__01. 다형성이란?\r__02. 예제\rLesson 02. 다형성과 데이터 타입과의 관계\r__01. 일반 객체지향 프로그래밍에서 데이터 타입의 의미\r__02. 일반 객체지향 프로그래밍에서 다형성의 의미\r__03. 정리\rLesson 03. 자바스크립트에서 다형성\r__01. 일반 객체지향 프로그래밍의 다형성 관련 문법\r__02. 자바스크립트에서 다형성\rLesson 04. 미션\r ▣ 07장: 합성\rLesson 01. 합성 소개\r__01. 합성이란?\r__02. 예제\rLesson 02. 클래스 상속 vs. 합성\r__01. 공통점\r__02. 사용 용도\r__03. 실무에서는 상속보다는 합성을 많이 사용합니다\r__04. 정리\r [07부] 실무활용! OOP를 적용한 UI 콘텐츠 제작\r ▣ 01장: 1단 바메뉴\rLesson 01. 분석하기\r__01. 소개 및 미리보기\r__02. 요구사항\r__03. 용어정리\r__04. 출력효과 \r__05. 동작효과\rLesson 02. 구현하기\r ▣ 02장: 폴더 아코디언\rLesson 01. 분석하기\r__01. 소개 및 미리보기\r__02. 요구사항\r__03. 용어정리\r__04. 출력효과\r__05. 동작 효과\rLesson 02. 구현하기\r ▣ 03장: 이미지 슬라이더 \rLesson 01. 분석하기\r__01. 소개 및 미리보기\r__02. 요구사항\r__03. 용어정리\r__04. 출력효과\r__05. 동작효과\rLesson 02. 구현하기\r ▣ 04장: 탭패널\rLesson 01. 분석하기\r__01. 소개 및 미리보기\r__02. 요구사항\r__03. 용어정리\r__04. 출력효과\r__05. 동작효과\rLesson 02. 구현하기\n",
        "isbn10": "1158390149",
        "isbn13": "9791158390143"
    },
    {
        "title": "웹디자이너를 위한 자바스크립트",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15560124",
        "image": "https://bookthumb-phinf.pstatic.net/cover/155/601/15560124.jpg?type=m1&udate=20191108",
        "author": "매트 마키스",
        "price": "18000",
        "discount": "16200",
        "publisher": "웹액츄얼리코리아",
        "pubdate": "20191021",
        "isbn": "118588520X 9791185885209",
        "description": "자바스크립트의 기본 문법과 핵심 원리를 알기 쉽게 설명하여 자바스크립트의 기초를 튼튼하게 해준다. 객체에 대한 상세한 설명부터 문법 규칙... 스크립트 작성 중에도 수시로 변하는 자바스크립트의 특성 때문에 이해하기 힘들었던 동작과 오류를 알기 쉽게 설명해준다. 자바스크립트의 문장을 간결하고... ",
        "authorIntroContent": "\n매트 마키스\n저자 : 매트 마키스반응형 이슈 커뮤니티 회장이며 《어 리스트 어파트》 편집자다. HTML5 명세에 반응형 이미지와 관련된 문제를 해결하기 위해 노력했으며 이를 브라우저에 구현할 수 있도록 주도했다. 주요 콘텐츠 관리 시스템에 반응형 이미지 기술의 추가 작업을 감독했다. 웹 콘퍼런스인 ‘언 이벤트 어파트’에서 종종 강연을 하기도 한다. 저서로는 전자책 《IMAGE PERFORMANCE》가 있다. 신속하고 접근성 있는 반응형 웹사이트를 만들지 않을 때는 앤티크 오토바이 정비사로 지낸다.역자 : 이태상자바와 웹 전문가로 교육과 컨설팅을 주로 했으며 오랜 기간 전자금융 업무를 담당했다. 현재 금융기관의 재무회계 시스템 구축 프로젝트에 참여하고 있다. 옮긴 책으로는 《인간다운 GIT》을 비롯해 다수의 IT 서적이 있다.\n",
        "bookIntroContent": "자바스크립트의 기본 문법과 핵심 원리를 알기 쉽게 설명하여 자바스크립트의 기초를 튼튼하게 해준다. 객체에 대한 상세한 설명부터 문법 규칙, 프로토타입 속성, 함수 사용법, 루프를 처리하는 방법, DOM의 개념과 기능에 이르기까지 다양한 예제를 통해 고급 기술이나 응용 프레임워크의 실행 코드 작성 방법을 알려준다. 스크립트 작성 중에도 수시로 변하는 자바스크립트의 특성 때문에 이해하기 힘들었던 동작과 오류를 알기 쉽게 설명해준다. 자바스크립트의 문장을 간결하고 명확한 문장으로 만들 수 있는 방법, 코드의 복잡함을 제거하면서도 새로운 기능을 추가할 수 있는 코드 작성 방법 등을 제시한다. 기초에 충실한 책으로 기본기가 부족한 디자이너나 개발자에게 훌륭한 가이드가 될 것이다.",
        "tableOfContentsContent": "\n한국어판 출간에 앞서\r추천의 글\r서문\rchapter 1 개발 준비\rchapter 2 자료형\rchapter 3 조건문\rchapter 4 루프\rchapter 5 DOM 스크립트\r결론\r감사의 글\r옮긴이의 글\r참고 자료\r참고 URL\r찾아보기\n",
        "isbn10": "118588520X",
        "isbn13": "9791185885209"
    },
    {
        "title": "자바스크립트 패턴과 테스트 (견고한 프로그램을 개발하는 원리)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11262780",
        "image": "https://bookthumb-phinf.pstatic.net/cover/112/627/11262780.jpg?type=m1&udate=20170802",
        "author": "래리 스펜서|세스 리처즈",
        "price": "38000",
        "discount": "34200",
        "publisher": "길벗",
        "pubdate": "20161110",
        "isbn": "1160500258 9791160500257",
        "description": "『자바스크립트 패턴과 테스트』는 자바스크립트만의 독특한 문법 구조를 이해하고 견고한 프로그램을 개발하는 데 필요한 기술과 원리를 설명한다. 콜백 패턴, 프라미스 패턴, 싱글톤 패턴, 장식자 패턴 같은 패턴과 단위 테스팅을 활용해서 오류 없고 견고한 프로그램을 개발하는 방법을 예제와 함께... ",
        "authorIntroContent": "\n래리 스펜서\n저자 : 래리 스펜서저자 : 래리 스펜서저자 래리 스펜서는 매사추세츠 서드베리에 있는 ScerIS사 애플리케이션 개발 본부 부사장이며, C#/웹 API/SQL 서버 백엔드에 앵귤러JS를 조합한, 브라우저 기반의 애플리케이션 제작팀 리더다. 35년 동안 코볼, C, C++, C#, 메인프레임 어셈블리어에 이르기까지 다양한 프로그래밍을 경험했지만, 자바스크립트가 가장 재미있다. 코드 캠프(Code Camps) 같은 모임에 자주 연사로 초빙되고 자신의 소프트웨어 열정을 개발 커뮤니티와 공유하기를 즐긴다. 매사추세츠 말버러에 살고 있으며 개인 블로그 주소는 http://FascinatedWithSoftware.com이다. 철학, 체스, 클래식 기타에도 관심이 많다.저자 : 세스 리처즈저자 세스 리처즈는 2002년 이후 소프트웨어 전문가로 활약 중이다. 처음엔 술집, 나이트클럽 업계에서 임베디드 프로그래밍을 시작했고 2007년에 웹 애플리케이션 개발자로 전향했다. 엔터프라이즈급 지리 정보 시스템(중앙 물적 자산 관리 시스템), 상품 찾기 및 추천 관련 소셜 네트워크 등 다양한 웹 기반 애플리케이션 제작에 참여했다. 뉴햄프셔 소재 플리머스 주립 대학(현재는 대학교)에서 컴퓨터 공학, 수학을 전공했으며 지금은 조지아 공과대학에서 컴퓨터 공학 석사 학위를 밟고 있다. 개인 블로그 주소는 http://blog.shrichards.com, 트위터 계정은 @shrichards다.역자 : 이일웅역자 이일웅은 10년 넘게 국내와 미국 등지에서 대기업/공공기관 프로젝트를 수행한 웹 개발자이자 두 딸의 사랑을 한 몸에 받고 사는 행복한 딸바보다. 자바 기반의 서버 플랫폼 구축, 데이터 연계 그리고 다양한 자바스크립트 프레임워크를 응용한 프런트엔드 화면 개발을 주로 담당해왔다. 시간이 날 땐 피아노를 연주한다(개인 홈페이지: http://www.bullion.pe.kr).\n",
        "bookIntroContent": "『자바스크립트 패턴과 테스트』는 자바스크립트만의 독특한 문법 구조를 이해하고 견고한 프로그램을 개발하는 데 필요한 기술과 원리를 설명한다. 콜백 패턴, 프라미스 패턴, 싱글톤 패턴, 장식자 패턴 같은 패턴과 단위 테스팅을 활용해서 오류 없고 견고한 프로그램을 개발하는 방법을 예제와 함께 보여준다. 이 책을 읽고 나면 패턴과 테스트는 물론 SOLID, DRY 같은 소프트웨어 공학 원칙과 테스트 주도 개발(TDD) 철학에 대한 통찰도 얻게 될 것이다.",
        "tableOfContentsContent": "\n1부 기초 다지기\r __1장. 좋은 소프트웨어 만들기\r____1.1 바르게 시작하는 코드 작성하기\r____1.2 바르게 유지되는 코드 작성하기\r____1.3 정리하기\r __2장 도구 다루기\r____2.1 테스팅 프레임워크\r____2.2 의존성 주입 프레임워크\r____2.3 애스팩트 툴킷\r____2.4 코드 검사 도구\r____2.5 정리하기\r __3장 객체를 바르게 만들기\r____3.1 원시형\r____3.2 객체 리터럴\r____3.3 모듈 패턴\r____3.4 객체 프로토타입과 프로토타입 상속\r____3.5 new 객체 생성\r____3.6 클래스 상속\r____3.7 함수형 삭속\r____3.8 멍키 패칭\r____3.9 정리하기\r 2부 패턴을 응용한 코드 테스팅\r __4장 패턴이 좋은 점\r____4.1 사례 연구\r____4.2 어휘력을 늘려 더 멋진 코드 만들기\r____4.3 잘 다듬고 테스트한 블록을 쌓아 믿음직한 코드 작성하기\r____4.4 정리하기\r __5장 콜백 패턴\r____5.1 단위 테스트\r____5.2 문제 예방\r____5.3 정리하기\r __6장 프라미스 패턴\r____6.1 단위 테스트\r____6.2 프라미스 체이닝\r____6.3 프라미스 래퍼\r____6.4 상태와 숙명\r____6.5 표준 프라미스가 제이쿼리 프라미스와 다른 점\r____6.6 정리하기\r __7장 부분 적용 함수\r____7.1 단위 테스트\r____7.2 부분 적용 함수 만들기\r____7.3 부분 적용 함수와 커링 구별하기\r____7.4 정리하기\r __8장 메모이제이션 패턴\r____8.1 단위 테스트\r____8.2 AOP로 메모이제이션 추가하기\r____8.3 정리하기\r __9장 싱글톤 패턴\r____9.1 단위 테스트\r____9.2 정리하기\r __10장 팩토리 패턴\r____10.1 단위 테스트 \r____10.2 팩토리 패턴 구현 \r____10.3 다른 팩토리 유형 \r____10.4 정리하기 \r __11장 샌드박스 패턴\r____11.1 단위 테스트\r____11.2 정리하기\r __12장 장식자 패턴\r____12.1 단위 테스트\r____12.2 정리하기\r __13장 전략 패턴\r____13.1 단위 테스트\r____13.2 정리하기\r __14장 프록시 패턴\r____14.1 단위 테스트\r____14.2 정리하기\r __15장 체이너블 메서드\r____15.1 단위 테스트\r____15.2 체이닝 덴\r____15.3 정리하기\r 3부 자바스크립트 고급 특성을 응용한 테스팅과 코딩\r __16장 인터페이스 없는 언어에서 인터페이스에 맞추기\r____16.1 인터페이스가 좋은 점\r____16.2 인터페이스 분리 원칙 \r____16.3 TDD 방식으로 규약 레지스트리 생성하기 \r____16.4 정리하기\r __17장 인자 타입 확실히 하기\r____17.1 자바스크립트는 인자 타입이 따로 없다! \r____17.2 ContractRegistry를 확장하여 인자 체크하기\r____17.3 규약 라이브러리 지원 \r____17.4 모두 합치기 \r____17.5 애스팩트 지향 솔루션 vs 정적 솔루션 \r____17.6 정리하기\r __18장 call, apply, bind 삼인방\r____18.1 this 바인딩 원리\r____18.2 call, apply, bind를 응용한 코드의 작성과 테스팅\r____18.3 정리하기\r __19장 메소드 빌림\r____19.1 빌리는 객체가 알맞은가? \r____19.2 빌리는 객체에 미치는 부수 효과 \r____19.3 빌려주는 객체에 미치는 부수 효과 \r____19.4 정리하기\r __20장 믹스인\r____20.1 믹스인 만들어 스기\r____20.2 정리하기\r __21장 고급 프로그램 아키텍처 테스팅\r____21.1 관찰자 패턴\r____21.2 중재자 패턴\r____21.3 정리하기\r 4부 고급 테스팅\r__22장 DOM 접근 테스팅\r____22.1 UI 단위 테스팅 \r____22.2 프로파일러로 코드 최적화 \r____22.3 정리하기 \r __23장 표준에 맞추기\r____23.1 ESLint \r____23.2 아키텍처 틀에 맞추기 \r____23.3 정리하기\r 5부 총정리\r__24장 테스트 주도 개발 원칙 정리\r____24.1 TDD의 의미를 다시 음미하자\r____24.2 TDD 실천\r____24.3 정리하기\r __25장 자바스크립트 관용 구문 정리\r____25.1 객체\r____25.2 변수\r____25.3 함수\r____25.4 불 연산\r____25.5 정리하기\n",
        "isbn10": "1160500258",
        "isbn13": "9791160500257"
    },
    {
        "title": "자바 프로젝트 필수 유틸리티 (깃/깃허브,메이븐,그레이들,젠킨스,SBT로 버전 관리에서 자동 배포까지)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13550940",
        "image": "https://bookthumb-phinf.pstatic.net/cover/135/509/13550940.jpg?type=m1&udate=20190401",
        "author": "쇼다 츠야노|전민수",
        "price": "35000",
        "discount": "31500",
        "publisher": "한빛미디어",
        "pubdate": "20180501",
        "isbn": "1162240709 9791162240700",
        "description": "“소스 관리에서 자동 배포까지\n일하기 편한 지속적인 통합 개발 환경을 만드는 자바 개발 도구 활용서”이 책은 자바 프로젝트를 수행하는 데 유용한 깃/깃허브, 젠킨스, 메이븐, 그레이들, SBT를 협업 관점에서 소개합니다. 단순히 기능만 소개하는 것이 아니라 현업에 유용한 플러그인들을 활용하고, 다른... ",
        "authorIntroContent": "\n쇼다 츠야노\n저자 : 쇼다 츠야노저자 쇼다 츠야노일본 첫 MAC 전문 월간지 『MAC＋』를 비롯해 주로 MAC 관련 잡지에 기고를 해왔습니다. 애플에서 하이퍼카드(HYPERCARD)가 등장한 후부터 초보자를 위한 프로그래밍 서적을 집필하기로 마음먹었습니다. MACOS, 원도우, 웹, 안드로이드, 아이폰 초보자를 대상으로 하는 서적을 꾸준히 집필하고 있습니다.저자 : 전민수저자 전민수2006년에 일본 라쿠텐에 입사해서 현재 수석 아키텍트로 근무하고 있습니다. 라쿠텐 그룹의 자바 교육 커리큘럼 작성과 새로운 시스템의 검증과 튜닝을 주 업무로 하며, 웹 검색 전문 그룹의 매니저도 맡고 있습니다. ‘RT:FM, 나는프로그래머다 콘퍼런스 2016’과 ‘테크 플래닛 2016’에서 프로세스와 검색 시스템을 주제로 발표했습니다. 이 책의 한국어판 7장 ‘깃/깃허브 입문과 활용하기’와 8장 ‘젠킨스 입문과 활용하기’를 집필했습니다.역자 : 배효진역자 배효진2007년부터 일본 코마스니주이치에서 개발자로 근무하고 있습니다. 전자 상거래 분야의 제품 설계, 개발, 기술 지원 업무를 해왔고, 최근에는 야후! 재팬의 입점자용 유료 서버 스페이스 서비스의 개발 및 운영 업무 전반을 담당하고 있습니다. 가치 있는 소프트웨어를 만드는 데 도움을 주는 기법과 도구에 관심이 많습니다.\n",
        "bookIntroContent": "“소스 관리에서 자동 배포까지일하기 편한 지속적인 통합 개발 환경을 만드는 자바 개발 도구 활용서”이 책은 자바 프로젝트를 수행하는 데 유용한 깃/깃허브, 젠킨스, 메이븐, 그레이들, SBT를 협업 관점에서 소개합니다. 단순히 기능만 소개하는 것이 아니라 현업에 유용한 플러그인들을 활용하고, 다른 도구와 연계하여 사용하는 방법을 알려줍니다. 따라서 지속적 통합 및 배포를 구축하는 데 큰 도움을 줍니다.* 1장부터 6장까지는 이 책의 원서를 번역한 내용입니다. 한국어판의 7장과 8장은 새롭게 집필하여 추가한 내용입니다.",
        "tableOfContentsContent": "\n[1장 빌드 도구 입문] \r1.1 빌드 도구란? \r__1.1.1 개발 환경의 변화와 빌드 \r__1.1.2 빌드 도구의 역할 \r__1.1.3 자바 개발 환경과 사용 언어에 대해 \r__1.1.4 빌드 도구 사용 방법 \r__1.1.5 개발 도구와 빌드 도구 \r1.2 빌드 도구 선택하기 \r [2장 메이븐 입문하기]\r2.1 메이븐 기초 지식 \r__2.1.1 앤트에서 메이븐으로 \r__2.1.2 메이븐 특징 \r__2.1.3 메이븐 설치 \r__2.1.4 프로그램 배치와 환경설정 \r__2.1.5 메이븐 프로젝트 생성 \r__2.1.6 메이븐 프로젝트 구성 \r__2.1.7 이클립스에서 메이븐 이용하기 \r__2.1.8 이클립스에서 메이븐 프로젝트 조작하기 \r__2.1.9 메이븐 pom 편집기에 대해 \r__2.1.10 자바 프로젝트를 메이븐 프로젝트로 변환하기 \r__2.1.11 Run 컨피그레이션 작성하기 \r__2.1.12 인텔리제이에서 메이븐 이용하기 \r__2.1.13 pom.xml 편집하기 \r__2.1.14 Run 컨피그레이션 작성하기 \r__2.1.15 넷빈즈에서 메이븐 이용하기 \r__2.1.16 메이븐 명령어 실행하기 \r__2.1.17 pom.xml 편집하기 \r__2.1.18 개발 환경과 메이븐 \r2.2 pom.xml 기본 \r__2.2.1 App.java 수정하기 \r__2.2.2 빌드 파일 pom.xml 알아보기 \r__2.2.3 [project]와 기본 속성 \r__2.2.4 [dependencies]와 의존성 설정 \r2.3 기본적인 ‘골’ \r__2.3.1 ‘compile’로 컴파일하기 \r__2.3.2 ‘test’로 테스트 실행하기 \r__2.3.3 프로그램 패키징 \r__2.3.4 프로젝트 클린업 \r__2.3.5 프로그램 실행하기 \r__2.3.6 빌드 플러그인 알아보기 \r__2.3.7 메이븐의 골 그리고 플러그인 \r__2.3.8 이클립스에서 사용하기 \r__2.3.9 인텔리제이에서 사용하기 \r__2.3.10 실행 가능한 JAR 파일 만들기 \r2.4 중앙 저장소 \r__2.4.1 메이븐 중앙 저장소 소개 \r__2.4.2 검색 엔진 사이트 이용하기 \r__2.4.3 등록 프로그램 정보에 대해 \r__2.4.4 메이븐 이외의 빌드 도구에서 사용하기 \r [3장 메이븐 활용하기]\r3.1 저장소 이용 \r__3.1.1 로컬 저장소 \r__3.1.2 원격 저장소 이용하기 \r__3.1.3 AspectJ 이용하기 \r__3.1.4 메이븐으로 라이브러리 만들기 \r__3.1.5 pom.xml 수정하기 \r__3.1.6 로컬 저장소에 라이브러리 추가하기 \r__3.1.7 라이브러리 이용하기 \r__3.1.8 pom.xml 수정하기 \r__3.1.9 프로젝트 실행하기 \r__3.1.10 로컬 저장소의 위치 알아보기 \r3.2 데스크톱 애플리케이션 개발 \r__3.2.1 archetype:generate 알아보기 \r__3.2.2 자바 애플리케이션의 기본 아키타입 \r__3.2.3 자바FX 애플리케이션 개발 \r__3.2.4 프로그램 실행하기 \r__3.2.5 프로젝트의 구성 \r__3.2.6 애플리케이션 소스 코드 \r3.3 웹 애플리케이션 개발 \r__3.3.1 웹 애플리케이션 작성하기 \r__3.3.2 프로젝트 구성 확인하기 \r__3.3.3 웹 애플리케이션 실행하기 \r__3.3.4 JAX-RS로 REST 개발하기 \r__3.3.5 MyResource.java 확인하기 \r__3.3.6 pom.xml 확인하기 \r__3.3.7 maven-jetty-plugin 사용하기 \r__3.3.8 스프링 부트 애플리케이션 개발 \r__3.3.9 생성된 클래스 확인하기 \r__3.3.10 pom.xml 내용 확인하기 \r3.4 메이븐 확장하기 \r__3.4.1 dependency 이용하기 \r__3.4.2 라이브러리 검색하기 \r__3.4.3 pom.xml 완성하기 \r__3.4.4 persistence.xml 준비하기 \r__3.4.5 엔티티 클래스 작성하기 \r__3.4.6 App 클래스 수정하기 \r__3.4.7 프로그램 실행하기 \r__3.4.8 프로젝트 모듈화하기 \r__3.4.9 모듈의 pom.xml \r__3.4.10 빌드 실행하기 \r__3.4.11 아키타입 작성하기 \r__3.4.12 아키타입 프로젝트의 구성 \r__3.4.13 pom.xml 템플릿 작성 \r__3.4.14 자바 소스 코드 준비하기 \r__3.4.15 persistence.xml 작성하기 \r__3.4.16 README 작성하기 \r__3.4.17 archetype.xml 수정하기 \r__3.4.18 프로젝트의 pom.xml 확인하기 \r__3.4.19 아키타입 사용하기 \r3.5 마치며 \r [4장 그레이들 입문하기]\r4.1 그레이들 기초 지식 \r__4.1.1 그루비와 그레이들 \r__4.1.2 그레이들이란 \r__4.1.3 그루비 준비하기 \r__4.1.4 환경 변수 \r__4.1.5 그레이들 준비하기 \r__4.1.6 환경 변수 설정 \r__4.1.7 그레이들로 자바 프로젝트 만들기 \r__4.1.8 jCenter와 저장소 \r4.2 개발 환경에서 이용하기 \r__4.2.1 이클립스에서 이용하기 \r__4.2.2 이클립스에서 그레이들 프로젝트 생성하기 \r__4.2.3 생성된 프로젝트 살펴보기 \r__4.2.4 인텔리제이에서 이용하기 \r__4.2.5 프로젝트 임포트하기 \r__4.2.6 태스크 실행 \r__4.2.7 넷빈즈에서 이용하기 \r__4.2.8 그레이들 프로젝트 작성 \r__4.2.9 그레이들 프로젝트 이용하기 \r__4.2.10 기본값으로 포함되는 빌드 파일 알아보기 \r__4.2.11 개발 환경에서 그레이들 이용하기 \r4.3 build.gradle의 기본 익히기 \r__4.3.1 그레이들은 ‘Groovy의 DSL’ \r__4.3.2 그레이들은 태스크를 실행한다 \r__4.3.3 doLast와 액션 리스트 \r__4.3.4 매개변수 이용 \r__4.3.5 동적 태스크 생성 \r__4.3.6 java 플러그인 사용하기 \r__4.3.7 java 플러그인의 태스크 \r__4.3.8 java 플러그인의 태스크 이용하기 \r__4.3.9 실행할 수 있는 클래스 준비하기 \r__4.3.10 유닛 테스트에 관해 알아보기 \r__4.3.11 gradle test 이용하기 \r__4.3.12 메이븐 저장소 이용하기 \r__4.3.13 테스트 리포트 \r [5장 그레이들 활용하기]\r5.1 다양한 프로그램 작성 \r__5.1.1 일반적인 애플리케이션 개발 \r__5.1.2 자바FX 애플리케이션 개발 \r__5.1.3 자바 소스 코드 파일 작성 \r__5.1.4 build.gradle 이용하기 \r__5.1.5 네이티브 빌드 알아보기 \r__5.1.6 웹 애플리케이션 작성 \r__5.1.7 서블릿 작성하기 \r__5.1.8 build.gradle 준비하기 \r5.2 다양한 애플리케이션 작성하기 \r__5.2.1 이클립스에서 웹 애플리케이션 개발하기 \r__5.2.2 인텔리제이/넷빈즈에서 웹 애플리케이션 개발하기 \r__5.2.3 REST 애플리케이션 개발 \r__5.2.4 build.gradle 작성하기 \r__5.2.5 스프링 부트 애플리케이션 개발하기 \r__5.2.6 build.gradle 준비하기 \r__5.2.7 build.gradle 내용 확인하기 \r__5.2.8 그루비 애플리케이션 살펴보기 \r__5.2.9 App.groovy 작성하기 \r__5.2.10 build.gradle 작성하기 \r__5.2.11 그루비로 웹 애플리케이션 개발하기 \r__5.2.12 web.xml 작성하기 \r__5.2.13 build.gradle 작성하기 \r5.3 아파치 앤트 이용하기 \r__5.3.1 ant 객체 사용하기 \r__5.3.2 앤트 태스크로 컴파일하기 \r__5.3.3 build.xml 이용하기 \r__5.3.4 그레이들에서 build.xml 이용하기 \r__5.3.5 path와 fileset \r__5.3.6 파일을 모아서 ZIP 파일로 압축하기 \r5.4 마치며 \r [6장 SBT 입문과 활용하기] \r6.1 SBT의 기본 지식 \r__6.1.1 SBT 설치 \r__6.1.2 스칼라 알아보기 \r__6.1.3 스칼라 설치하기 \r__6.1.4 SBT 설치하기 \r__6.1.5 프로젝트 만들기 \r__6.1.6 프로젝트의 구성 \r__6.1.7 소스 코드 파일 준비하기 \r__6.1.8 build.sbt 작성하기 \r__6.1.9 컴파일과 실행 \r__6.1.10 프로그램 실행하기 \r__6.1.11 프로그램 패키징\r__6.1.12 이클립스와 스칼라 IDE 플러그인 \r__6.1.13 인텔리제이에서 이용하기 \r6.2 SBT 자유자재로 다루기 \r__6.2.1 build.sbt 설정 알아보기 \r__6.2.2 태스크 이용하기 \r__6.2.3 libraryDependencies 알아보기 \r__6.2.4 JUnit으로 유닛 테스트하기 \r__6.2.5 Dependencies.scala 알아보기 \r__6.2.6 웹 애플리케이션 프로젝트 알아보기 \r__6.2.7 JSP/서블릿 작성하기 \r__6.2.8 빌드 파일 작성하기 \r__6.2.9 동작 확인하기 \r__6.2.10 스프링 부트 애플리케이션 작성하기 \r6.3 마치며 \r [7장 깃/깃허브 입문하기 ]\r7.1 버전 관리 시스템 소개 \r7.2 깃 입문하기 \r__7.2.1 깃의 파일 관리 방법 \r__7.2.2 깃의 상태 관리 \r__7.2.3 깃 클라이언트 설치 \r__7.2.4 깃 저장소 만들기\r__7.2.5 커밋하기 \r7.3 깃허브 활용하기 \r__7.3.1 깃허브 가입하기 \r__7.3.2 첫 저장소 만들기 \r__7.3.3 원격 저장소에서 가져오기 \r__7.3.4 버전 관리 대상에서 제외하기\r7.4 브랜치 활용하기 \r__7.4.1 브랜치란? \r__7.4.2 병합 \r__7.4.3 HEAD란? \r__7.4.4 충돌 \r__7.4.5 병합 해결 : non fast-forward \r7.5 깃에서 자주 쓰는 명령어 정리 \r__7.5.1 설정 관련\r__7.5.2 저장소 생성\r__7.5.3 브랜치관련\r__7.5.4 파일 관련\r__7.5.5 작업 일시저장\r__7.5.6 로그 확인\r__7.5.7 커밋 변경\r__7.5.8 변경 동기\r7.6 마치며 \r [8장 젠킨스 입문과 활용하기] \r8.1 젠킨스 입문하기 \r__8.1.1 젠킨스 설치 \r__8.1.2 젠킨스의 기본 구성 \r__8.1.3 윈도우에 유니코드 적용 \r8.2 젠킨스 활용하기 \r__8.2.1 첫 잡 만들어보기 \r__8.2.2 정적 분석하기 \r__8.2.3 로컬 환경에서 애플리케이션 배포하기 \r__8.2.4 원격 환경에 배포하기 \r__8.2.5 빌드 파이프라인 만들기 \r__8.2.6 깃허브 훅 \r__8.2.7 매개변수 전달하기 \r8.3 소나큐브 \r__8.3.1 소나큐브 개요 \r__8.3.2 소나큐브 설치 \r__8.3.3 젠킨스 사용자 생성 \r__8.3.4 소나큐브 스캐너 설정 \r__8.3.5 소나큐브 빌드 \r8.4 마치며 \r 에필로그 빌드 도구의 미래\n",
        "isbn10": "1162240709",
        "isbn13": "9791162240700"
    },
    {
        "title": "자바 프로그래밍 for Beginner",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14197212",
        "image": "https://bookthumb-phinf.pstatic.net/cover/141/972/14197212.jpg?type=m1&udate=20181115",
        "author": "우재남",
        "price": "26000",
        "discount": "24960",
        "publisher": "한빛아카데미",
        "pubdate": "20181110",
        "isbn": "1156644062 9791156644064",
        "description": "쉽게 배워 제대로 만드는 자바 프로그램!\n자바는 C 언어와 함께 모든 스포츠 선수가 필수로 갖춰야 할 ‘체력’과 같습니다. 체력이 좋은 선수는 어떤 종목을 선택하더라도 금방 적응해서 좋은 결과를 얻을 수 있듯이 자바에 익숙해진다면 앞으로 어떤 프로그래밍 언어를 만나더라도 쉽게 익힐 수... ",
        "authorIntroContent": "\n우재남\n저자 : 우재남서강대학교에서 정보시스템 전공으로 석사 학위를 취득한 후 다양한 IT 관련 분야에서 실전 경험을 쌓고 여러 대학에서 프로그래밍, 데이터베이스 등의 과목을 강의했다. 공간 정보와 IT 융합 학문인 유시티 분야의 공학박사 학위를 취득했으며, 현재 디티솔루션에서 공간데이터베이스연구소장으로 재직 중이다. 대학과 삼성, LG, 현대 등의 기업에서 IT 전문 분야를 강의하고 있으며, 다양한 IT 실무 경험과 관련 지식을 독자와 수강생에게 최대한 쉽고 빠르게 전달하는 것을 모토로 강의 및 집필 중이다.\n",
        "bookIntroContent": "쉽게 배워 제대로 만드는 자바 프로그램!자바는 C 언어와 함께 모든 스포츠 선수가 필수로 갖춰야 할 ‘체력’과 같습니다. 체력이 좋은 선수는 어떤 종목을 선택하더라도 금방 적응해서 좋은 결과를 얻을 수 있듯이 자바에 익숙해진다면 앞으로 어떤 프로그래밍 언어를 만나더라도 쉽게 익힐 수 있습니다.모든 문법을 배워야만 프로그램을 짤 수 있다는 생각을 버리고 일단 프로그램을 입력하고 실행하는 것부터 시작해 보세요.《GOOD JAVA》 개정판이 책은 2016년 2월에 출간된 《GOOD JAVA》의 제목과 내용 일부를 수정한 개정판으로, JAVA 11 및 이클립스 최신 버전으로 업그레이드하였습니다. JAVA SE 11뿐만 아니라 JAVA SE 8에서도 실습이 가능합니다.※ 본 도서는 대학 강의용 교재로 개발되었으므로 연습문제 해답은 제공하지 않습니다.",
        "tableOfContentsContent": "\nChapter 01 JAVA 들여다보기 SECTION 01 JAVA의 개요\rSECTION 02 JAVA 개발 환경 구축 \rSECTION 03 JAVA 프로그램 맛보기\r Chapter 02 JAVA 프로그래밍 시작하기 SECTION 01 실무에서 사용하는 JAVA 개발 환경 \rSECTION 02 JAVA 프로그램 작성 \rSECTION 03 계산기 프로그램\r Chapter 03 변수와 데이터 형식 SECTION 01 System.out의 기본 \rSECTION 02 System.out.printf( ) 메소드의 서식 지정 \rSECTION 03 변수\rSECTION 04 데이터 형식과 배열\r Chapter 04 연산자 SECTION 01 산술 연산자 \rSECTION 02 관계 연산자\rSECTION 03 논리 연산자 \rSECTION 04 비트 연산자 \rSECTION 05 연산자 우선순위\r Chapter 05 조건문 SECTION 01 if 문 \rSECTION 02 중첩 if 문 \rSECTION 03 switch~case 문\r Chapter 06 반복문의 기본, for 문 SECTION 01 단순 for 문 \rSECTION 02 중첩 for 문 \rSECTION 03 기타 for 문\r Chapter 07 반복문의 심화, while 문 SECTION 01 while 문 \rSECTION 02 do~while 문 \rSECTION 03 기타 제어문\r Chapter 08 배열 SECTION 01 배열의 이해\rSECTION 02 2차원 배열 \rSECTION 03 배열의 활용 : 스택\r Chapter 09 문자열과 메소드 SECTION 01 문자열 \rSECTION 02 메소드 \rSECTION 03 지역변수와 전역변수 \rSECTION 04 메소드의 반환 값과 매개변수\r Chapter 10 예외 처리와 파일 입출력 SECTION 01 예외 처리 \rSECTION 02 표준 입출력 \rSECTION 03 파일 입출력\r Chapter 11 객체지향 프로그래밍의 기초 SECTION 01 클래스 \rSECTION 02 생성자 \rSECTION 03 인스턴스 변수와 클래스 변수\r Chapter 12 객체지향 프로그래밍의 응용 SECTION 01 클래스의 상속\rSECTION 02 추상 클래스 \rSECTION 03 인터페이스\r Chapter 13 GUI 프로그래밍 SECTION 01 GUI 화면 구성 \rSECTION 02 GUI 이벤트 처리 \rSECTION 03 GUI 메뉴와 툴바\r Chapter 14 고급 프로그래머로 나아가기 SECTION 01 패키지 \rSECTION 02 JAVA 클래스 라이브러리 \rSECTION 03 스레드\r Chapter 15 실전 프로젝트 SECTION 01 친구 연락처 관리 프로그램 \rSECTION 02 사진 처리 프로그램\r  \n",
        "isbn10": "1156644062",
        "isbn13": "9791156644064"
    },
    {
        "title": "자바스크립트+jQuery 완전정복 스터디 2 (jQuery편)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=9650875",
        "image": "https://bookthumb-phinf.pstatic.net/cover/096/508/09650875.jpg?type=m1&udate=20190709",
        "author": "김춘경",
        "price": "24000",
        "discount": "21600",
        "publisher": "위키북스",
        "pubdate": "20151016",
        "isbn": "1158390130 9791158390136",
        "description": "『자바스크립트+JQUERY 완전정복 스터디. 2: JQUERY편』에서는 웹프로그래밍 초보자와 개발 실무자라면 반드시 알아야 할 JQUERY 기초 문법과 노드, 스타일, 속성, 이벤트, 효과 등 핵심 내용을 다룬다.",
        "authorIntroContent": "\n김춘경\n저자 : 김춘경저자 김춘경(딴동네)은 웹 분야 중 주로 웹프론트엔드 개발과 웹앱 & 모바일웹앱 개발자로 활동하고 있으며 책 집필과 IT학원에서 웹 기술과 관련된 강의를 하고 있습니다. 또한 웹프론트엔드 개발자를 위한 온오프라인 공간인 웹동네를 운영하고 있습니다.웹동네는 웹앱과 웹프론트엔드 분야를 전문으로 연구하고 학습하는 그룹으로서, 온라인에서는 온라인 동영상 강의, 소셜 스터디, 정보공유 등을 진행하는 웹동네(HTTP://WWW.WEBDONGNE.COM) 사이트를 운영 중이며 오프라인에서는 맞춤형 스터디, 정보 공유 세미나, 실무 특강을 진행할 수 있는 웹동네 모임 공간을 운영하고 있습니다.\n",
        "bookIntroContent": "『자바스크립트+JQUERY 완전정복 스터디. 2: JQUERY편』에서는 웹프로그래밍 초보자와 개발 실무자라면 반드시 알아야 할 JQUERY 기초 문법과 노드, 스타일, 속성, 이벤트, 효과 등 핵심 내용을 다룬다.",
        "tableOfContentsContent": "\n[4부] jQuery 기초와 활용\r ▣ 01장: 자바스크립트 DOM\rLesson 01. 자바스크립트 DOM과 jQuery와의 관계\r__01. 자바스크립트를 배운다는 건?  \r__02. 자바스크립트와 jQuery와의 관계  \rLesson 02. DOM 소개와 기능?  \r__01. DOM이란?  \r__02. DOM 기능  \rLesson 03. DOM 구조\r__01. W3C DOM vs. 브라우저 DOM \r__02. IDL이란?  \rLesson 04. DOM과 HTML 페이지와의 관계 \r__01. DOM과 HTML 페이지와의 관계 \r__02. DOM과 노드와의 관계  \rLesson 05. 핵심 DOM 객체?  \r__01. 핵심 DOM 객체 소개  \r__02. Node 객체  \r__03. Element 객체  \r__04. HTMLElement 객체  \r__05. Document 객체  \r__06. HTMLDocument 객체  \r ▣ 02장: jQuery 소개\rLesson 01. jQuery 기능 \r__01. jQuery란?  \r__02. jQuery 기능 1  \r__03. jQuery 기능 2  \rLesson 02. jQuery 학습 방법 \r__01. jQuery의 정체  \r__02. 초보자가 반드시 할 줄 알아야 하는 jQuery 핵심 내용 정리  \r__03. jQuery 학습 순서  \rLesson 03. jQuery를 사용하는 이유  \r__01. jQuery vs. 자바스크립트  \r__02. jQuery와 CSS와의 관계  \rLesson 04. jQuery 개발 환경 설정  \r__01. jQuery 라이브러리 삽입  \r__02. 진입점인 ready() 메서드 설정  \r__03. DOMContentLoaded 이벤트 vs. load 이벤트  \r__04. 정리  \rLesson 05. jQuery의 정체  \r__01. $() 기본 사용법  \r__02. $()의 의미  \r__03. $() 함수의 리턴값  \r__04. jQuery의 정체 \r ▣ 03장: 노드 다루기 - 노드 찾기\rLesson 01. 일반 노드 찾기  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 02. 찾은 노드 다루기  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 03. 자식 노드 찾기  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 04. 부모 노드 찾기  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 05. 형제 노드 찾기  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 06. 미션  \r ▣ 04장: 노드 다루기 - 노드 생성/추가/삭제/이동\rLesson 01. 노드 생성 및 추가  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 02. 노드 이동  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 03. 노드 삭제  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 04. 노드 내용 읽기 및 변경  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 05. 미션  \r__01. 진행 순서  \r__02. 화면 구조  \r ▣ 05장: 스타일 다루기\rLesson 01. 스타일 소개  \r__01. 스타일 종류  \r__02. 스타일을 다루는 방법  \r__03. jQuery를 활용한 스타일 다루는 방법의 특징  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 06장: 속성 다루기\rLesson 01. 속성 소개  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 07장: 이벤트 다루기\rLesson 01. 이벤트 소개  \r__01. 이벤트란?  \r__02. 이벤트 종류  \r__03. 이벤트 단계  \r__04. Event 객체  \rLesson 02. 핵심 내용  \rLesson 03. 미션  \r ▣ 08장: 위치/크기 관련 기능 다루기\rLesson 01. 요소의 위치 및 크기 관련 기능  \r__01. 요소의 위치 및 크기 관련 속성 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 02. 문서의 위치 및 크기 관련 기능  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 03. 화면의 위치 및 크기 관련 기능  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 04. 윈도우의 위치 및 크기 관련 기능  \r__01. 소개  \r__02. 핵심 내용 \r__03. 정리  \rLesson 05. 마우스의 위치 및 크기 관련 기능  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 06. 미션  \r ▣ 09장: 애니메이션 효과 다루기\rLesson 01. jQuery 애니메이션 효과 소개  \r__01. 애니메이션 방법 정리  \r__02. jQuery 애니메이션 효과 종류  \rLesson 02. 기본 애니메이션 효과 다루기  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 03. 사용자 정의 애니메이션 효과  \r__01. 소개  \r__02. 핵심 내용  \r__03. 정리  \rLesson 04. 미션\n",
        "isbn10": "1158390130",
        "isbn13": "9791158390136"
    },
    {
        "title": "모두의 알고리즘 with 자바스크립트 (세상을 움직이는 기초 알고리즘)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14365724",
        "image": "https://bookthumb-phinf.pstatic.net/cover/143/657/14365724.jpg?type=m1&udate=20190405",
        "author": "스즈키 코이치",
        "price": "20000",
        "discount": "18000",
        "publisher": "길벗",
        "pubdate": "20181225",
        "isbn": "1160506809 9791160506808",
        "description": "[모두의 알고리즘 WITH 자바스크립트]는 일상 속에서 흔히 접할 수 있는 기초 알고리즘부터 실제로 현장에서 자주 사용되는 알고리즘까지 다양한 배경 지식과 함께 설명한다. 또한, 알고리즘을 만들 때 주의해야 할 점, 알고리즘의 메커니즘 등을 일러스트로 표현해서 이해하기 쉽다. 이 책을 통해 알고리즘이... ",
        "authorIntroContent": "\n스즈키 코이치\n저자 : 스즈키 코이치아이치현 카스가이시 출신으로 현재 지바현 이치카와시에 거주 중이다. IT 연수 교사로서 30년 동안 총 1만 명 이상의 수강자에게 컴퓨터 기초, 프로그래밍, 시스템 개발, 정보 보안, 디지털 포렌식 등을 가르쳤다. 특히 자바나 리눅스는 초창기부터 연수에 참여했다. 중학교 1학년 때 컴퓨터를 처음 접했고, NEC PC-8001로 베이직 언어를 사용해 직접 프로그램을 만들었다. 최근에는 안드로이드 스마트폰용 앱 ‘병아리 시계’를 개발했다. 좋아하는 프로그래밍 언어는 코틀린, 루비, 스킴, 하스켈, AWK이다.역자 : 김은철(주)아이티에스 대표이며, AWS 기반 IOT 실시간 서비스를 개발했다. 일본법인 (주)아이티에스 대표 및 엘피에이캠퍼스 전임강사였고, 한화S&C(주)에서 근무했다. 저서로는 [초보자를 위한 C 언어 300제], 역서로는 [유니티 교과서] 외 다수가 있다.역자 : 유세라일본 전문 번역가로 활동하고 있으며, 현재 (주)컴온히어 기업 대표로 앱, 인공 지능을 하고 있다. 한국에서 영상 처리, 게임 회사를 거쳐 일본에서 IT 엔지니어로 활동했다. 역서로는 [유니티 교과서] 외 다수가 있다.감수 : 서재원웹 프런트엔드 개발자와 번역가로 활동 중이다. 최근에는 함수형 자바스크립트 프로그래밍과 블록체인 기술에 관심이 많다. 역서로는 [모던 자바스크립트 입문], [그림으로 배우는 알고리즘] 외 다수가 있다.\n",
        "bookIntroContent": "세상을 움직이는 알고리즘에는 어떤 것이 있을까?일상 속에 숨겨진 기초 알고리즘을 배워 보자!길을 모르면 네이버 지도 혹은 다음 지도와 같은 지도 서비스를 이용해 길을 찾고, 궁금한 것이 있으면 인터넷에 접속해 바로 검색할 수 있다. 또 음성이나 영상, 이미지 등을 한 번에 보내기 위해 파일을 압축하고 압축된 파일을 열어보기 위해 압축을 해제한다. 이렇게 일상에서 흔히 하는 이 모든 활동들은 바로 ‘알고리즘’ 덕분에 가능한 것이다. 일상 속에 숨겨진 알고리즘에는 어떤 것이 있으며, 우리 주변에서 어떻게 동작하고 있을까? [모두의 알고리즘 WITH 자바스크립트]는 일상 속에서 흔히 접할 수 있는 기초 알고리즘부터 실제로 현장에서 자주 사용되는 알고리즘까지 다양한 배경 지식과 함께 설명한다. 또한, 알고리즘을 만들 때 주의해야 할 점, 알고리즘의 메커니즘 등을 일러스트로 표현해서 이해하기 쉽다. 이 책을 통해 알고리즘이 무엇이며, 어디에 어떻게 사용되고 있는지 배워 보자.",
        "tableOfContentsContent": "\n첫째 마당 알고리즘이 뭐지? \rMISSION 01 익숙한 알고리즘을 체험해보자 \rMISSION 02 알고리즘을 생각해보자 \rMISSION 03 영원히 멈추지 않는 알고리즘을 체험해보자\r 둘째 마당 알고리즘과 만나자 \rMISSION 04 검색 알고리즘을 체험해보자 \rMISSION 05 지도 서비스로 길을 알아보자 \rMISSION 06 스마트폰에 말을 걸어보자 \rMISSION 07 자신이 있는 위치의 위도와 경도를 알아보자 \r 셋째 마당 알고리즘과 프로그램의 관계 \rMISSION 08 자바스크립트로 나눗셈 알고리즘을 구현해보자 \rMISSION 09 정렬 알고리즘을 체험해보자 \rMISSION 10 자바스크립트로 원주율을 계산해보자 \r 넷째 마당 웹 검색 알고리즘을 살펴보자\rMISSION 11 문자열 검색 알고리즘을 체험해보자 \r 다섯째 마당 압축과 해제, 암호화 알고리즘을 살펴보자\rMISSION 12 압축과 해제 알고리즘을 체험해보자 \rMISSION 13 암호화를 체험해보자 \rMISSION 14 디지털 인증서를 살펴보자 \r 여섯째 마당 이미지 처리 알고리즘을 살펴보자 \rMISSION 15 이미지 인식을 체험해보자 \r 일곱째 마당 머신 러닝과 신경망 \rMISSION 16 손글씨 인식 프로그램을 체험해보자\n",
        "isbn10": "1160506809",
        "isbn13": "9791160506808"
    },
    {
        "title": "프론트엔드 개발자를 위한 자바스크립트 프로그래밍",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7204207",
        "image": "https://bookthumb-phinf.pstatic.net/cover/072/042/07204207.jpg?type=m1&udate=20190204",
        "author": "니콜라스 C. 자카스",
        "price": "48000",
        "discount": "43200",
        "publisher": "인사이트",
        "pubdate": "20130516",
        "isbn": "8966260764 9788966260768",
        "description": "자바스크립트 웹 개발에 필요한 모든 것 『자바스크립트 프로그래밍』. 자바스크립트 구루이자 노련한 저자인 니콜라스 자카스는 이 책에서 자바스크립트의 기초부터 DOM, AJAX, HTML5까지를 설명한다. 상황에 따라 자바스크립트를 어떤 식으로 확장할 수 있는지, 역동적인 사용자 인터페이스는 어떻게 만들... ",
        "authorIntroContent": "\n니콜라스 C. 자카스\n저자 : 니콜라스 C. 자카스저자 니콜라스 자카스(NICHOLAS C. ZAKAS)는 10년 이상 웹 관련 일을 해왔다. 이 기간 동안 니콜라스는 세계에서 가장 큰 웹사이트 중 하나인 마이 야후!와 야후! 홈페이지, 대기업 인트라넷 애플리케이션을 만들었다. 야후!에서는 선임 기술자로 일하면서 세계에서 가장 방문자 수가 많은 웹사이트들의 프론트 엔드 개발 가이드와 표준을 제시했다. 니콜라스는 유명한 강연자이며 정기적으로 여러 회사와 각종 컨퍼런스, 회합 등에 참여해 프론트 엔드 개발의 모범 사례와 신기술에 대해 강연한다. 또한 『MAINTAINABLE JAVASCRIPT』『HIGH PERFORMANCE JAVASCRIPT』 같은 유명한 책의 저자이기도 하며, 정기적으로 블로그 NCZONLINE에 글을 남긴다. 트위터 주소는 @SLICKNET이다.역자 : 한선용역자 한선용은 2008년부터 웹 관련 일을 했으며 웹 표준과 자바스크립트에 관심이 많다. 「WCAG 2.0을 위한 일반적 테크닉들」을 번역했으며, 「HTML5 명세」를 번역해서 TRANBOT에 공유하고 있다. 역서로는 『JQUERY MOBILE』『자바스크립트 성능 최적화』(이상 한빛미디어), 『HTML5 & CSS3: 오늘 구현하는 내일의 웹 표준』『에릭마이어의 CSS 노하우』(이상 인사이트)가 있다.\n",
        "bookIntroContent": "자바스크립트 웹 개발에 필요한 모든 것 『자바스크립트 프로그래밍』. 자바스크립트 구루이자 노련한 저자인 니콜라스 자카스는 이 책에서 자바스크립트의 기초부터 DOM, AJAX, HTML5까지를 설명한다. 상황에 따라 자바스크립트를 어떤 식으로 확장할 수 있는지, 역동적인 사용자 인터페이스는 어떻게 만들 수 있는지를 풍부한 예제를 곁들여 알려준다.",
        "tableOfContentsContent": "\n옮긴이의 글\r추천의 글\r개요\r 1장자바스크립트란 무엇인가 __1.1 간추린 역사\r__1.2 자바스크립트 구현\r__1.3 자바스크립트 버전\r__1.4 요약\r 2장HTML 속의 자바스크립트 __2.1 [script] 요소\r__2.2 인라인 코드와 외부 파일\r__2.3 문서 모드\r__2.4 [noscript] 요소\r__2.5 요약\r 3장언어의 기초 __3.1 문법\r__3.2 키워드와 예약어\r__3.3 변수\r__3.4 데이터 타입\r__3.5 연산자\r__3.6 문장\r__3.7 함수\r__3.8 요약\r 4장변수와 스코프, 메모리 __4.1 원시 값과 참조 값\r__4.2 실행 컨텍스트와 스코프\r__4.2 가비지 콜렉션\r__4.4 요약\r 5장참조 타입 __5.1 Object 타입\r__5.2 Array 타입\r__5.3 Date 타입\r__5.4 RegExp 타입\r__5.5 Function 타입\r__5.6 원시 래퍼 타입\r__5.7 내장된 싱글톤 객체\r__5.8 요약\r 6장객체 지향 프로그래밍 __6.1 객체에 대한 이해\r__6.2 객체 생성\r__6.3 상속\r__6.4 요약\r 7장함수 표현식 __7.1 재귀\r__7.2 클로저\r__7.3 블록 스코프 흉내내기\r__7.4 고유 변수\r__7.5 요약\r 8장브라우저 객체 모델 __8.1 window 객체\r__8.2 location 객체\r__8.3 navigator 객체\r__8.4 screen 객체\r__8.5 history 객체\r__8.6 요약\r 9장클라이언트 탐지 __9.1 기능 탐지\r__9.2 퀵스 탐지\r__9.3 브라우저 탐지\r__9.4 요약\r 10장 DOM __10.1 노드의 계층 구조\r__10.2 DOM 다루기\r__10.3 요약\r 11장 DOM 확장 __11.1 선택자 API\r__11.2 요소 간 이동\r__11.3 HTML5\r__11.4 전용 확장\r__11.5 요약\r 12장 DOM 레벨 2와 레벨 3 __12.1 DOM의 변경점\r__12.2 스타일\r__12.3 이동\r__12.4 범위\r__12.5 요약\r 13장 이벤트 __13.1 이벤트 흐름\r__13.2 이벤트 핸들러\r__13.3 event 객체\r__13.4 이벤트 타입\r__13.5 메모리와 성능\r__13.6 이벤트 시뮬레이션\r__13.7 요약\r 14장 폼 스크립트 __14.1 폼 기본\r__14.2 텍스트 박스 스크립트\r__14.3 [select] 요소 스크립트\r__14.4 폼 직렬화\r__14.5 리치 텍스트 편집\r__14.6 요약\r 15장 캔버스와 그래픽 __15.1 기본 사용법\r__15.2 2D 컨텍스트\r__15.3 WebGL\r__15.4 요약\r 16장 HTML5 스크립트 __16.1 문서 간 메시징\r__16.2 네이티브 드래그 앤 드롭\r__16.3 미디어 요소\r__16.4 히스토리 상태 관리\r__16.5 요약\r 17장 에러 처리와 디버깅 __17.1 브라우저의 에러 보고\r__17.2 에러 처리\r__17.3 디버그 테크닉\r__17.4 흔한 인터넷 익스플로러 에러\r__17.5 요약\r 18장 자바스크립트와 XML __18.1 브라우저의 XML DOM 지원\r__18.2 브라우저의 XPath 지원\r__18.3 브라우저의 XSLT 지원\r__18.4 요약\r 19장 XML을 위한 ECMAScript __19.1 E4X 타입\r__19.2 일반적인 사용\r__19.3 다른 변경점\r__19.4 E4X 기능 모두 사용\r__19.5 요약\r 20장 JSON __20.1 문법\r__20.2 파싱과 직렬화\r__20.3 요약\r 21장 Ajax와 코멧 __21.1 XMLHttpRequest 객체\r__21.2 XMLHttpRequest 레벨 2\r__21.3 진행상태 이벤트\r__21.4 소스 간 자원 공유\r__21.5 기타 크로스 도메인 테크닉\r__21.6 보안\r__21.7 요약\r 22장 고급 테크닉 __22.1 고급 함수\r__22.2 쉽게 조작할 수 없는 객체\r__22.3 고급 타이머\r__22.4 커스텀 이벤트\r__22.5 드래그 앤 드롭\r__22.6 요약\r 23장 오프라인 애플리케이션과 클라이언트 사이드 스토리지 __23.1 오프라인 탐지\r__23.2 애플리케이션 캐시\r__23.3 데이터 스토리지\r__23.4 요약\r 24장 모범 사례 __24.1 관리의 용이성\r__24.2 성능\r__24.3 배포\r__24.4 요약\r 25장 새로운 API __25.1 requestAnimationFrame()\r__25.2 페이지 가시성 API\r__25.3 지오로케이션 API\r__25.4 파일 API\r__25.5 웹 타이밍\r__25.6 웹 워커\r__25.7 요약\r 부록 A ECMAScript 하모니 __A.1 일반적인 변경점\rA.__1.1 상수\r__A.2 함수\r__A.3 배열과 기타 구조\r__A.4 새로운 객체 타입\r__A.5 클래스\r__A.6 모듈\r 부록 B 스트릭트 모드 __B.1 선언\r__B.2 변수\r__B.3 객체\r__B.4 함수\r__B.5 eval()\r__B.6 eval과 매개변수\r__B.7 this와 타입 강제\r__B.8 다른 변경점\r 부록 C 자바스크립트 라이브러리 __C.1 일반 라이브러리\r__C.2 인터넷 애플리케이션\r__C.3 애니메이션과 효과\r__C.4 암호화\r 부록 D 자바스크립트 도구 __D.1 유효성 검사기\r__D.2 압축기\r__D.3 단위 테스트\r__D.4 문서 생성기\r__D.5 보안 실행 환경\r 부록 E 인터넷 익스플로러를 위한 ECMAScript 5 배열 메서드 __E.1 map\r__E.2 forEach\r__E.3 filter\r__E.4 every와 some\n",
        "isbn10": "8966260764",
        "isbn13": "9788966260768"
    },
    {
        "title": "함수형 자바스크립트 (모던 웹 개발에 충실한 실전 함수형 프로그래밍 안내서)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13242075",
        "image": "https://bookthumb-phinf.pstatic.net/cover/132/420/13242075.jpg?type=m1&udate=20180426",
        "author": "루이스 아텐시오",
        "price": "27000",
        "discount": "24300",
        "publisher": "한빛미디어",
        "pubdate": "20180201",
        "isbn": "1162240423 9791162240427",
        "description": "ES6와 로대시, 람다JS, RxJS와 함께하는 함수형 프로그래밍\n\n함수형 프로그래밍은 먼 나라 이야기가 아닙니다. 특히 사소한 부분 하나가 시스템 전체를 망가뜨릴 수 있는 웹 애플리케이션에서 함수형과 리액티브 프로그래밍의 이점이 더욱 주목받고 있습니다. 함수형 프로그래밍의 원칙을 따르면 성능은 물론... ",
        "authorIntroContent": "\n루이스 아텐시오\n저자 : 루이스 아텐시오저자 루이스 아텐시오는 시트릭스 시스템즈의 선임 소프트웨어 엔지니어. 컴퓨터 과학 학사 및 석사 학위를 취득하고 10년간 자바, PHP, 자바스크립트 등으로 엔터프라이즈 애플리케이션을 구축해왔습니다. 왕성한 커뮤니티 활동을 하면서 지역 모임과 콘퍼런스에 자주 참가합니다. 본서 외 저서로 『RxJS in Action』(Manning, 2017), 『Functional PHP』(Leanpub, 2016) 등이 있습니다.역자 : 이일웅역자 이일웅은 12년 동안 자바/스칼라 개발자, 애플리케이션 아키텍트로 활동하며 엔터프라이즈 프로젝트 현장을 누벼온 야전형 정보 기술자. 동시에 한 여인과 두 딸의 사랑을 한 몸에 받고 사는 행복한 딸바보입니다. 한양대학교에서 기계공학을 전공했고, 미국 조지아 공과대학교에서 산업시스템공학 석사 학위를 마쳤습니다. 2014년 이후로 십수 권의 IT 전문서를 번역하며 동료, 후배 개발자와 지식, 경험을 나누는 일에도 힘쓰고 있습니다. 시간이 나면 피아노를 연주합니다.\n",
        "bookIntroContent": "ES6와 로대시, 람다JS, RxJS와 함께하는 함수형 프로그래밍함수형 프로그래밍은 먼 나라 이야기가 아닙니다. 특히 사소한 부분 하나가 시스템 전체를 망가뜨릴 수 있는 웹 애플리케이션에서 함수형과 리액티브 프로그래밍의 이점이 더욱 주목받고 있습니다. 함수형 프로그래밍의 원칙을 따르면 성능은 물론 확장, 모듈화, 재사용, 테스트 등 많은 측면에서 개선을 꾀할 수 있습니다. 이 책은 웹의 미래인 ES6와 떠오르는 함수형 라이브러리 로대시, 람다JS, RxJS 등을 활용하여 실무에 강한 함수형 프로그래밍의 세계에 안착하게 도와줍니다.",
        "tableOfContentsContent": "\nPart I 함수형으로 사고하기\r CHAPTER 1 함수형 길들이기 \r1.1 함수형 프로그래밍은 과연 유용한가?\r1.2 함수형 프로그래밍이란?\r1.3 함수형 프로그래밍의 좋은 점\r1.4 마치며\r CHAPTER 2 고계 자바스크립트 \r2.1 왜 자바스크립트인가?\r2.2 함수형 대 객체지향 프로그래밍\r2.3 함수\r2.4 클로저와 스코프\r2.5 마치며\r Part II 함수형으로 전환하기\r CHAPTER 3 자료구조는 적게, 일은 더 많이 \r3.1 애플리케이션의 제어 흐름\r3.2 메서드 체이닝\r3.3 함수 체이닝\r3.4 코드 헤아리기\r3.5 재귀적 사고방식\r3.6 마치며\r CHAPTER 4 재사용 가능한, 모듈적인 코드로 \r4.1 메서드 체인 대 함수 파이프라인\r4.2 함수 호환 요건\r4.3 커리된 함수를 평가\r4.4 부분 적용과 매개변수 바인딩\r4.5 함수 파이프라인을 합성\r4.6 함수 조합기로 제어 흐름을 관리\r4.7 마치며\r CHAPTER 5 복잡성을 줄이는 디자인 패턴 \r5.1 명령형 에러 처리의 문제점\r5.2 더 나은 방안: 함수자\r5.3 모나드를 응용한 함수형 에러 처리\r5.4 모나드 체인 및 합성\r5.5 마치며\r Part III 함수형 스킬 갈고닦기\r CHAPTER 6 빈틈없는 코드 만들기 \r6.1 함수형 프로그래밍과 단위 테스트\r6.2 명령형 프로그램 테스트의 어려움\r6.3 함수형 코드를 테스트\r6.4 속성 기반 테스트로 명세 담기\r6.5 코드 실행률로 효율 측정\r6.6 마치며\r CHAPTER 7 함수형 최적화 \r7.1 함수 실행의 내부 작동 원리\r7.2 느긋한 평가로 실행을 늦춤\r7.3 ‘필요할 때 부르리’ 전략\r7.4 재귀와 꼬리 호출 최적화\r7.5 마치며\r CHAPTER 8 비동기 이벤트와 데이터를 관리 \r8.1 골칫덩이 비동기 코드\r8.2 비동기 로직을 프라미스로 일급화\r8.3 느긋한 데이터 생성\r8.4 RxJS를 응용한 함수형 리액티브 프로그래밍\r8.5 마치며\r APPENDIX A 이 책에서 사용한 자바스크립트 라이브러리\rA.1 함수형 자바스크립트 라이브러리\r__A.1.1 로대시JS\r__A.1.2 람다JS\r__A.1.3 RxJS\rA.2 기타 라이브러리\r__A.2.1 Log4js\r__A.2.2 QUnit\r__A.2.3 시논JS\r__A.2.4 블랭킷JS\r__A.2.5 JSCheck\r APPENDIX B 한국어판 부록: 예제 실습 안내\rB.1 노드JS 설치 및 QUnit 테스트\rB.2 브라우저 콘솔창에서 실습\r\n",
        "isbn10": "1162240423",
        "isbn13": "9791162240427"
    },
    {
        "title": "알쏭달쏭 자바 200제 (텍스트 출력부터 예외 처리까지 하나씩 만들어보는 기초 자바 프로그래밍)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14965417",
        "image": "https://bookthumb-phinf.pstatic.net/cover/149/654/14965417.jpg?type=m1&udate=20190710",
        "author": "시바타 보요|유리 가오루",
        "price": "28000",
        "discount": "25200",
        "publisher": "한빛미디어",
        "pubdate": "20190530",
        "isbn": "1162241934 9791162241936",
        "description": "모르는 건 없는지, 정말 제대로 아는지\n초보자도 경력자도 다시 한번 확인하는 자바 사용 백서 A to Z\n이 책은 프로그래밍 문제를 풀며 자연스럽게 자바를 배울 수 있는 초/중급 개발자를 위한 코드 중심의 자바 입문서입니다. 총 16개 장, 200개의 프로그램 문제와 1,115개 실전 문제로 구성되어 있습니다. 각... ",
        "authorIntroContent": "\n시바타 보요\n저자 : 시바타 보요저자 : 시바타 보요규슈 대학 공학부 및 동대학원 공학 연구과 수료 후 규슈 대학 조교, 국립특수교육 종합연구소 연구원으로 근무했으며, 후쿠오카 대학교 정보공학부 정보공학과 부교수, 후쿠오카 태극권 연구회 회장 등을 역임한 공학 박사다. 2000년에는 『알기 쉬운 C언어 교과서/참고서』를 집필했으며 이 책으로 일본공학교육협회에서 저작권 상을 수상했다. 대학에서 교육 연구 활동 외에도 프로그래밍이나 무술, 건강 지도법 등에 몰두하며 하루하루를 보내고 있다.저자 : 유리 가오루언어과학연구소 주임연구원역자 : 김완섭네덜란드 ITC에서 Geoinformation for Disaster Risk Management 석사 학위를 취득했다. 약 9년간 일본과 우리 나라의 기업에서 IT 및 GIS/LBS 분야 업무를 담당했으며, 일본에서는 세콤(SECOM) 계열사인 파스코(PASCO)에서 일본 외무부, 국토지리정보원 같은 정부기관을 대상으로 한 시스템 통합(SI) 업무를 담당했다. 이후 야후 재팬으로 직장을 옮겨 야후맵 개발 담당 시니어 엔지니어로 근무했으며, 한국으로 돌아와 SK에서 내비게이션 지도 데이터 담당 매니저로 근무했다. 현재는 싱가포르에 있는 일본계 회사에서 은행 관련 IT 프로젝트를 담당하고 있다. 저서로는 『나는 도쿄 롯폰기로 출근한다』(삶과지식, 2014)가 있으며, 역서로는 『모어 이펙티브 C#』(한빛미디어, 2019), 『알고리즘 도감』(이하 제이펍), 『처음 만나는 HTML5 & CSS3』, 『인공지능 70』, 『처음 만나는 자바스크립트』, 『정규표현식』, 『IT 인프라 구조』, 『시스템 성능 구조』 등 30여 권이 있다. 블로그(https://blog.naver.com/itbk100)에 IT 번역 관련 이야기와 싱가포르 직장 생활을 소개한다.\n",
        "bookIntroContent": "모르는 건 없는지, 정말 제대로 아는지초보자도 경력자도 다시 한번 확인하는 자바 사용 백서 A to Z이 책은 프로그래밍 문제를 풀며 자연스럽게 자바를 배울 수 있는 초/중급 개발자를 위한 코드 중심의 자바 입문서입니다. 총 16개 장, 200개의 프로그램 문제와 1,115개 실전 문제로 구성되어 있습니다. 각 장에서 출제되는 코드를 작성해보며 개념을 익히고 직접 푼 코드를 응용해 완성도 있는 프로그램을 만들다 보면 어느덧 실력이 향상됩니다. 단순히 용어나 문법을 암기하는 데서 벗어나 다양한 문제를 통해 자바를 이해해봅시다.",
        "tableOfContentsContent": "\n1장 화면에 문자 표시하기 \r2장 변수 사용 \r3장 프로그램의 흐름 : 분기 \r4장 프로그램의 흐름 : 반복 \r5장 기본 자료형과 연산 \r6장 배열 \r7장 메서드 \r8장 클래스의 기본 \r9장 간단한 클래스 작성 \r10장 클래스 변수와 클래스 메서드 \r11장 패키지 \r12장 클래스의 상속과 다형성 \r13장 추상 클래스 \r14장 인터페이스 \r15장 문자와 문자열 \r16장 예외 처리\n",
        "isbn10": "1162241934",
        "isbn13": "9791162241936"
    },
    {
        "title": "프로젝트로 배우는 자바 웹 프로그래밍 (Servlet, JSP, JDBC)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7409686",
        "image": "https://bookthumb-phinf.pstatic.net/cover/074/096/07409686.jpg?type=m1&udate=20161223",
        "author": "황희정",
        "price": "26000",
        "discount": "23400",
        "publisher": "한빛아카데미",
        "pubdate": "20140106",
        "isbn": "8998756684 9788998756680",
        "description": "JSP에 한정한 웹 프로그래밍을 설명하는 것이 아닌, 변화하고 있는 웹 개발 환경에 맞도록 자바, JSP를 기본으로 웹 개발에 필요한 기술들을 설명한다. 웹 프로그래밍의 전체적인 큰 그림을 이해하고 새로운 기술 요소를 적극적으로 수용할 수 있도록 해주는 책이다.\n\n핵심역량 강화를 위해 실습 비중을... ",
        "authorIntroContent": "\n황희정\n저자 : 황희정저자 황희정은 대학 3학년 시절 우연히 한 인터넷 벤처 회사에서 초짜 프로그래머로 직장 생활을 시작해서 능력을 인정받고 사내 연구소로 스카우트되었다. 당시 외부에는 재학생 신분을 숨기고 개발팀장으로서 초창기 국내 웹 개발 시장에서 굵직한 프로젝트를 다수 수행했다. 평생 프로그래머가 되길 희망했으나, 현재는 가천대학교 IT대학 컴퓨터공학과 교수로 재직하면서 변화하는 시대에 핵심 역량을 갖춘 IT 인재 양성에 힘쓰고 있다. 저서로 『IT COOKBOOK, JAVA FOR BEGINNER』(한빛미디어, 2008)가 있고, 주요 연구 분야는 IT의료 분야이다. 유헬스(U-HEALTH) 및 의료정보 분야의 소프트웨어 전문가로 국가과학기술로드맵 연구 등 여러 국가정책 수립에 참여하고 있으며, 2009년에는 IT의료 분야 소프트웨어 산업 발전에 기여한 공로로 지식경제부 장관 표창을 받았다. 몇 년 전부터는 사이클에 빠져서 동호인 모임을 이끌고 있으며, 여러 사이클 관련 대회에 참여하고 있다.\n",
        "bookIntroContent": "IT Cookbook 한빛 교재 시리즈 155권. JSP에 한정한 웹 프로그래밍을 설명하는 것이 아닌, 변화하고 있는 웹 개발 환경에 맞도록 자바, JSP를 기본으로 웹 개발에 필요한 기술들을 설명한다. 웹 프로그래밍의 전체적인 큰 그림을 이해하고 새로운 기술 요소를 적극적으로 수용할 수 있도록 해주는 책이다.핵심역량 강화를 위해 실습 비중을 확대했다. 기본실습과 응용실습으로 나누어 배운 내용을 확실하게 이해하고 활용할 수 있도록 구성했다. 또한, HTML5, CSS, jQuery와 같은 최신 웹 클라이언트 기술을 포함해 실제 수업에서 활용할 수 있도록 구성을 강화했다. 특히 프로젝트의 구현 결과물로 웹 클라이언트 기술을 포함한 주소록 프로그램과 트위터와 유사한 SNS 프로그램을 만들어볼 수 있다.",
        "tableOfContentsContent": "\nPart 01 준비학습 : Beginning JSP  Chapter 01 웹 프로그래밍에 대한 이해\r01 네트워크, 인터넷, 웹\r02 웹 프로그래밍 언어와 주요 기술 \r03 스마트 시대의 웹 프로그래밍 \r요약 / 연습문제 \r Chapter 02 자바 웹 프로그래밍 개발환경 구축 \r01 JSP 개발환경 개요 \r02 JSP 개발환경 구축 \r03 이클립스 기본 환경 설정 \r요약 / 연습문제 \r Chapter 03 JSP와의 첫 만남 \r01 JSP 개요 \r02 JSP 처리 과정의 이해 \r03 JSP 프로그램 기술 변천 \r04 [기본실습] JSP 프로그래밍 : Hello World JSP \r요약 / 연습문제 \r Part 02 기본학습 : Servlet, JSP, JDBC  Chapter 04 서블릿의 이해 \r01 서블릿 개요 \r02 서블릿 구조와 생명주기 \r03 [기본실습] 서블릿 프로그래밍 : Hello World \r04 [응용실습] 서블릿 프로그래밍 : 계산기 서블릿 구현 \r05 JSP와 서블릿의 관계 \r요약 / 연습문제 \r Chapter 05 JSP 기본 문법 \r01 주석 \r02 지시어 \r03 액션 \r04 선언과 표현식 \r05 스크립트릿 \r요약 / 연습문제 \r Chapter 06 JSP 내장객체 \r01 JSP 내장객체 개요 \r02 request \r03 response \r04 out \r05 session \r06 그 밖의 내장객체 \r07 JSP 내장객체와 속성 관리\r08 [기본실습] JSP 내장객체 : 세션을 이용한 장바구니 구현 \r09 [응용실습] JSP 내장객체 : 트위터 구현 \r요약 / 연습문제 \r Chapter 07 JSP와 자바 빈즈 \r01 빈즈 개요 \r02 JSP와 빈즈 연동 \r03 [기본실습] JSP 빈즈 프로그래밍 : 사용자 로그인 구현 \r04 [응용실습] JSP 빈즈 프로그래밍 : 주소록 구현 \r요약 / 연습문제 \r Chapter 08 데이터베이스와 JDBC \r01 데이터베이스 개요 \r02 MySQL 데이터베이스 설치와 설정 \r03 SQL문 기본기 다지기 \r04 JDBC 기본 구조와 API 이해 \r05 [기본실습] JDBC 프로그래밍 : MySQL 연동 JSP 프로그래밍 \r요약 / 연습문제 \r 체험학습\rProject 01 주소록 프로그램 개발  01 주소록 프로그램 분석 \r02 화면 구성과 데이터베이스 구성\r03 컨트롤러 기본 구조와 오류 페이지 구현 \r04 빈즈 클래스(모델) 구현 \r05 세부 기능 구현 \r Part 03 심화학습 : Advanced JSP  Chapter 09 웹 애플리케이션 아키텍처 \r01 웹 애플리케이션 \r02 컨테이너 배포 개념의 이해 \r03 아파치 톰캣 시스템 관리 \r04 웹 애플리케이션 배포하기 \r요약 / 연습문제 \r Chapter 10 표현 언어와 커스텀 태그 \r01 표현 언어 \r02 [기본실습] 표현 언어의 기본 이해 \r03 커스텀 태그 \r04 태그 파일 기반 커스텀 태그 \r05 [기본실습] 태그 파일 기반 커스텀 태그 : 기본 태그 구현 \r06 [응용실습] 태그 파일 기반 커스텀 태그 : 복합 태그 구현 \r07 태그 핸들러 기반 커스텀 태그 \r08 [기본실습] 태그 핸들러 기반 커스텀 태그 : 기본 태그 구현 \r09 [응용실습] 태그 핸들러 기반 커스텀 태그 : 복합 태그 구현 \r요약 / 연습문제 \r Chapter 11 JSTL의 이해와 활용 \r01 JSTL의 개념과 구성 \r02 핵심 라이브러리의 주요 태그 \r03 [응용실습] 스크립트릿을 JSTL로 변환 \r요약 / 연습문제 \r Chapter 12 데이터베이스 커넥션 풀과 트랜잭션 \r01 커넥션과 트랜잭션 \r02 데이터베이스 커넥션 관리 \r03 [응용실습] 커넥션 풀 : DBCP 설정 및 클라이언트 구현 \r04 트랜잭션 처리 \r05 [응용실습] 트랜잭션 관리 : 계좌이체 구현\r요약 / 연습문제 \r Chapter 13 리스너와 필터\r01 웹 애플리케이션 초기화 매개변수 관리 \r02 [기본실습] 초기화 매개변수 관리 \r03 리스너 \r04 [기본실습] 리스너 개발 : ServletContextListener 구현 \r05 필터\r06 [기본실습] 필터 개발 : 한글 처리 필터 구현\r07 [응용실습] 리스너 및 필터 : 애플리케이션 설정 관리 구현 \r요약 / 연습문제 \r Chapter 14 웹 애플리케이션 로그와 오류 관리 \r01 로그 관리 개요 \r02 [기본실습] SLF4J와 Log4j를 연동한 로깅 구현 \r03 웹 애플리케이션 로깅 기법 \r04 [응용실습] 시스템 전반에 걸친 로깅 정책 구현 \r05 웹 애플리케이션 오류 관리 \r06 [기본실습] 서버 기반 오류 처리 \r요약 / 연습문제 \r 실전학습\rProject 02 SNS 프로그램 개발  01 SNS 프로그램 요구사항 분석과 설계 \r02 프로젝트 설정과 테이블 생성 \r03 뷰(View) 구현 \r04 모델(Model) 구현 \r05 컨트롤러(Controller) 구현 \r06 통합과 뷰 보완\r07 테스트 \r08 실전학습을 마무리하며 \r 찾아보기\n",
        "isbn10": "8998756684",
        "isbn13": "9788998756680"
    },
    {
        "title": "애프터스킬 자바스크립트 프론트엔드 프로젝트 가이드 (술술 잘 읽히는 JavaScript 필독서)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13673304",
        "image": "https://bookthumb-phinf.pstatic.net/cover/136/733/13673304.jpg?type=m1&udate=20190328",
        "author": "심준식|이창욱",
        "price": "24000",
        "discount": "21600",
        "publisher": "아이콕스",
        "pubdate": "20180610",
        "isbn": "1186886781 9791186886786",
        "description": "이 책은 실제 프로젝트에 쓰일 법한 예제들을 차근차근 다루어 나가면서 자바스크립트의 기초를 익히고, 좋은 코딩 습관들이 몸에 밸 수 있도록 돕고... 자바스크립트를 다루고자 하는 웹 디자이너/퍼블리셔, 웹 개발을 시작해 보려는 입문자는 물론 프론트엔드 개발을 해보고 싶은 서버 개발자 등 다양한... ",
        "authorIntroContent": "\n심준식\n저자 : 심준식저자 : 심준식저자 심준식은 미국 위스콘신 주립대에서 컴퓨터 과학을 전공하고, 티맥스소프트, 여러 스타트업 등을 거쳐 현재 NHN 엔터테인먼트에서 데이터 플랫폼의 프론트엔드를 개발하고 있습니다. 보다 편리한 UX와 직관적인 데이터 시각화를 제공하기 위해 성능 최적화 및 기술 연구에 매진하고 있습니다.저자 : 이창욱저자 이창욱은 SK컴즈, NHN 엔터테인먼트에서 프론트엔드&서버 개발, 현재는 카카오에서 서버 개발자로 근무하고 있습니다. 기계가 아닌 사람이 읽기 쉬운 코드를 잘 작성하는 것이 목표인 평범한 개발자입니다.\n",
        "bookIntroContent": "술술 잘 읽히는 JavaScript Frontend 필독서현업 개발자처럼 생각하자!이 책은 실제 프로젝트에 쓰일 법한 예제들을 차근차근 다루어 나가면서 자바스크립트의 기초를 익히고, 좋은 코딩 습관들이 몸에 밸 수 있도록 돕고 있습니다. 그리고, 프론트엔드 개발의 트렌드 속에서 앞으로 어떤 기술들을 습득해야 하고, 그 기술들이 왜 필요한지에 대한 가이드를 제공합니다.자바스크립트를 다루고자 하는 웹 디자이너/퍼블리셔, 웹 개발을 시작해 보려는 입문자는 물론 프론트엔드 개발을 해보고 싶은 서버 개발자 등 다양한 분야의 많은 분들이 책 속의 예제를 함께 따라하면서 보다 쉽게 이해할 수 있도록 만들었습니다.",
        "tableOfContentsContent": "\n머리말\r이 책의 사용법\r부록 다운로드\r 01장 시작하기\r1.1 자바스크립트가 뭐지?\r1.2 자바스크립트의 발전 과정\r1.3 자바스크립트의 역할\r1.4 자바스크립트의 활용\r1.5 자바스크립트 개발을 위한 환경 구축\r1.6 예제 다운로드 받기\r 02장 Hello, World!\r2.1 Hello, World!를 화면에 출력하기\r2.2 이름을 입력 받아 출력하기\r 03장 평균값 계산기 만들기\r3.1 숫자 두 개의 평균값 구하기\r3.2 숫자 10개의 평균값 구하기\r 04장 가위, 바위, 보! 만들기\r4.1 가위, 바위, 보! 게임 설계하기\r4.2 사용자와 컴퓨터의 패 입력 받기\r4.3 조건문을 사용한 로직 구현하기\r4.4 사용자의 입력 검증하기\r4.5 가위, 바위, 보! 게임의 승패 정하기\r4.6 결과 출력하기\r4.7 switch 키워드 알아보기\r 05장 GUI 기반 가위, 바위, 보! 만들기\r5.1 [bottom]태그로 사용자 입력 받기\r5.2 코드 개선하기\r 06장 로또 번호 생성기 만들기\r6.1 로또 번호 생성기 만들기 - 첫 시도\r6.2 로또 번호 생성기 만들기 - 재도전\r 07장 농구 게임 만들기\r7.1 프로젝트 설계하기\r7.2 프로젝트 준비하기\r7.3 점수판 UI 만들기\r7.4 조작부 UI 만들기\r7.5 게임 로직 만들기\r7.6 코드 리팩토링하기\r 08장 농구 게임 AI 개선하기\r8.1 컴퓨터 AI 개선하기\r8.2 코드 리팩토링하기\r8.3 브라우저의 기본 오브젝트 살펴보기\r 09장 보다 생동감 있는 농구 게임 만들기\r9.1 제이쿼리(jQuery) 알아보기\r9.2 제이쿼리 사용하기\r9.3 점수판 UI 개선하기\r9.4 게임 시작 부분 개선하기\r 10장 패스트푸드점 찾기(상)\r10.1 프로젝트 설계하기\r10.2 프로젝트 준비하기\r10.3 패스트푸드점 목록 조회를 위한 서버 API 알아보기\r10.4 리턴된 API 결과로 목록 UI 만들기\r 11장 패스트푸드점 찾기(하)\r11.1 API에 검색 관련 인자 전달하기\r11.2 키보드 입력 처리하기\r11.3 페이징 추가하기\r 12장 마이트립 어드바이저\r12.1 프로젝트 설계하기\r12.2 프로젝트 준비하기\r12.3 헤더 만들기\r12.4 메인 입력 폼 만들기\r12.5 여행지 목록 가져오기\r 13장 마이트립 어드바이저 상세보기\r13.1 [상세보기] 페이지 설계하기\r13.2 여행지 상세 정보 가져오기\r13.3 이미지 갤러리 추가하기\r13.4 지도 추가하기\r13.5 여행지 등록 기능 구현하기\r 14장 마이트립 어드바이저 완성하기\r14.1 [마이트립] 페이지 만들기\r14.2 [마이트립] 페이지의 목록 구현하기\r14.3 [회원가입] 페이지 만들기\r 부록\r- 프론트엔드 개발자로 성장하기\r- 찾아보기\n",
        "isbn10": "1186886781",
        "isbn13": "9791186886786"
    },
    {
        "title": "자바스크립트 Java Script 1학년",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14262016",
        "image": "https://bookthumb-phinf.pstatic.net/cover/142/620/14262016.jpg?type=m1&udate=20181124",
        "author": "리브로웍스",
        "price": "17000",
        "discount": "15300",
        "publisher": "성안당",
        "pubdate": "20181122",
        "isbn": "8931555679 9788931555677",
        "description": "누구에게나 가볍고 쉬운 자바스크립트 입문서!\n  자바스크립트\nJAVASCRIPT 1학년\n\n 미래의 화두인 4차산업혁명과 인공지능으로 인해 창의력 교육과 아울러... 그 가운데 가장 먼저 선보인 자바스크립트 편은 어린 세대들도 쉽게 하는 인터넷, 그 애플리케이션을 만드는 데 필요한 자바스크립트라는 프로그래밍... ",
        "authorIntroContent": "\n리브로웍스\n저자 : 리브로웍스서적 기획, 편집, 디자인을 하는 편집 프로덕션으로, 취급하는 서적은 프로그래밍에서 EXCEL까지 IT 계열을 중심으로 폭넓은 분야에 걸쳐있다. 최근 저서로는 , (기 술평론사) 등이 있다.역자 : 김성훈주로 IT 관련 서적을 번역하는 번역가로, 주요 번역서는 다음과 같다. , , , , , , , , , , , ,  등 다수.\n",
        "bookIntroContent": "만화처럼 빨려 들어가는 비주얼한 프로그래밍 입문서 1학년 시리즈!야옹 선생님, 쥐돌이와 함께라면 뮤직플레이어 웹 앱도 뚝딱!누구에게나 가볍고 쉬운 자바스크립트 입문서!  자바스크립트JAVASCRIPT 1학년 미래의 화두인 4차산업혁명과 인공지능으로 인해 창의력 교육과 아울러 전 세계적인 코딩 교육 열풍이 일고 있다. 당장 우리나라만 해도 2018년부터 이미 중학교 정보 교과서가 보급되었고  2019년부터 초등학교부터 코딩이 영어 과목처럼 수업 시간표에 포함된다. 창의적이고 논리적인 힘을 기르는데 프로그래밍 만한 공부가 없기 때문에 세계 각국에서도 미래 세대들에게 프로그래밍 공부를 어떻게 하면 잘 시킬 수 있을까 골몰하고 있다. 이런 목적에 맞게 탄생한 것이 바로 1학년 시리즈이다. 그 가운데 가장 먼저 선보인 자바스크립트 편은 어린 세대들도 쉽게 하는 인터넷, 그 애플리케이션을 만드는 데 필요한 자바스크립트라는 프로그래밍 언어로 시작한다. 자바스크립트는 사실 여러분이 늘 보고 있는 웹 페이지의 브라우저를 열어 ‘[보기]-[소스]’만 실행해도 소스를 한눈에 들여다 볼 수 있는 언어이다. 조금만 관심을 가지면 남녀노소를 불문하고 공부할 수 있는 언어인 셈이다. 그런 언어를 누구나 쉽게 접할 수 있는 책이 바로 이 이다. 예쁘고 시원 시원한 성격의 야옹 선생님과 소심하지만 약간은 건방진 쥐돌이가 간단한 덧셈 곱셈부터 차근차근 단계를 밟아 뮤직 플레이어 앱까지 완성해 본다. 조금 어려워지거나 설명이 길어져 쥐돌이가 비명을 지르면 걸음을 멈추고 차근차근 설명하기도 한다. 웹페이지를 만들 때 HTML과 CSS에 관한 지식이 없으면 자바스크립트를 활용할 수 없다. 그런 이유에서 이 책은 4분의 1 정도를 HTML과 CSS에 대한 설명에 할애한다. 재미있는 일러스트와 만화, 아기자기한 구성이 독자 여러분을 사로잡을 것이다.  중학생 이상이면 누구나 아무 지식이 없어도 자바스크립트라는 웹 프로그래밍 언어에 쉽고 가볍게 접근할 수 있는 책으로 추천 드린다.",
        "tableOfContentsContent": "\n예제 프로그램 시험 환경과 예제 파일에 대해  시작하며  옮긴이의 말  이 책의 대상 독자와 1학년 시리즈에 대해  이 책은 이렇게 구성돼 있어요   1장 JavaScript로 무엇을 할 수 있을까? 01 웹앱이 뭘까?  웹페이지, 웹앱, 프로그램의 관계  웹브라우저가 할 수 없는 기능을 프로그램으로 추가한다  서버 사이드와 클라이언트 사이드  02 프로그래밍 언어란 뭘까?  프로그래밍 언어란?  다양한 종류의 프로그래밍 언어  클라이언트 사이드에서 사용하는 JavaScript  JavaScript로 할 수 있는 일  03 프로그램을 만들 준비를 하자  Chrome(크롬) 웹브라우저 설치하기  Atom(아톰) 편집기 설치하기  Atom 메뉴를 한글로 바꾸기  Atom 화면은 어떻게 생겼을까?   2장 프로그래밍을 가볍게 체험해 보자 04 콘솔을 사용해 보자  콘솔을 표시하자  콘솔에 명령을 입력하자  05 더하기, 빼기, 곱하기, 나누기  컴퓨터에게 계산을 시킨다  06 계산 순서를 바꿔 보자  연산자의 우선순위  괄호를 사용해 우선순위를 바꾼다  07 문자를 표시해 보자  따옴표로 에워싸 문자열로 만든다  08 숫자와 문자열을 조합한다  숫자와 문자열을 연결한다  숫자와 문자열 식의 함정  여전히 남아 있는 숫자와 문자열 식의 함정  09 데이터를 기억하는 변수를 사용해 보자  변수에 데이터 저장하기  변수 이용하기  변수 내용 변경하기  변수명은 어떻게 지을까?  10 프로그램을 파일로 저장하자  웹페이지를 만들어 보자  Atom으로 HTML을 입력해 보자  HTML을 작성해 보자  JavaScript를 작성해 보자  HTML 안에 넣는 프로그램  문의 마지막엔 ;(세미콜론)을 쓴다   3장 JavaScript ‘문법'을 배워 보자 11 함수와 메소드를 사용해 보자  함수와 메소드의 역할이란?  함수의 사용법  함수와 조금 다른 메소드  메소드를 사용해 보자  12 if문으로 조건에 따라 처리를 전환한다  if문과 조건 분기  조건식의 결과는 true나 false가 된다  조건식이 false일 때 실행한다  13 for문으로 처리를 반복한다  for문과 반복 처리  for문을 시험해 보자  식을 표시해 결과를 이해하기 쉽게 한다  14 배열을 사용해 처리를 반복하자  배열을 사용해 보자  날짜 데이터와 배열을 조합해 보자  15 함수를 직접 만들어 보자  함수를 만들면 무엇이 편리할까?  함수를 만드는 방법  return문 뒤는 실행되지 않는다  반환값과 인수는 생략할 수 있다   4장 웹앱의 겉모양을 만들자 16 HTML과 CSS가 대체 뭐지?  HTML은 웹페이지의 내용을 나타낸다  CSS는 웹페이지를 꾸민다  17 HTML 태그란 무엇일까?  텍스트 곳곳에 태그를 삽입한다  폴더를 만들어 HTML 파일을 저장하자  Atom이 자동으로 입력해 주는 태그의 의미  18 제목과 본문을 작성해 보자  제목을 입력한다  일반 문장을 입력해 보자  19 이미지를 넣어 보자  이미지 파일을 준비한다  img 태그를 입력한다  20 뮤직 플레이어를 추가하자  음악 파일을 찾아보자  audio 태그를 입력하자  21 목록을 만들자  ul 태그와 li 태그를 입력하자  독자적인 속성을 추가한다  22 CSS의 구조를 이해하자  CSS의 기본 구조  CSS 파일을 만든다  23 문자 서식을 변경해 보자  color-picker 패키지로 색을 지정한다  문자를 가운데 정렬한다  24 요소에 폭과 배경색을 설정하자  개발자 도구로 HTML 구조를 확인한다  앱의 테두리를 설정하자  인덴트(들여쓰기) 기능으로 HTML을 읽기 쉽게 하자  25 목록을 메뉴 리스트로 변경하자  행 시작 기호를 지운다  메뉴 리스트 항목에 괘선을 그린다  선택 중인 항목만 색을 바꾼다  마우스 포인터를 위에 올려 놓았을 때만 배경색이 바뀐다   5장 뮤직 플레이어를 완성해 보자 26 JS 파일을 만들어 HTML로 읽어들인다  JS 파일을 만든다  script 태그로 읽어들인다  27 플레이 리스트를 클릭해 곡을 바꾼다  HTML 요소를 JavaScript로 가져온다  click 이벤트를 설정한다  클릭된 요소를 알아 낸다  재생할 음악 파일을 변경한다  클래스명을 변경해 재생 중인 곡을 파악하기 쉽게 한다  28 재생 중과 정지 중 그림을 바꾼다  audio 요소의 이벤트에 대응한다  29 연속으로 재생해 보자  ‘다음 곡’을 가져오려면?  음악 재생 부분을 함수로 만든다  30 랜덤 선곡 기능을 추가하자  랜덤 링크를 추가한다  링크에 click 이벤트를 설정한다  곡을 랜덤하게 선택한다  31 앞으로 무엇을 공부하면 좋을까?  Mozilla(모질라) 개발자 네트워크에서 조사한다  ‘JavaScript로 하고 싶은 일’로 검색해 본다\n",
        "isbn10": "8931555679",
        "isbn13": "9788931555677"
    },
    {
        "title": "엔터프라이즈 자바 마이크로서비스 (JVM 기반 대규모 애플리케이션을 마이크로서비스로 설계,구축,관리하는 기술)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15258214",
        "image": "https://bookthumb-phinf.pstatic.net/cover/152/582/15258214.jpg?type=m1&udate=20190807",
        "author": "켄 피니건",
        "price": "27000",
        "discount": "24300",
        "publisher": "한빛미디어",
        "pubdate": "20190725",
        "isbn": "1162242094 9791162242094",
        "description": "마이크로서비스 아키텍처로 전환하려는 개발자를 위한 본격 활용 안내서\n\nJVM 기반 마이크로서비스 애플리케이션을 설계하고 구축하는 방법을 알려준다. 전통적인 Java EE 애플리케이션과 마이크로서비스 설계를 비교한 후 마이크로서비스를 이루는 각 요소를 설명하는 방식으로 독자의 이해를 돕는다. 이를... ",
        "authorIntroContent": "\n켄 피니건\n저자 : 켄 피니건저자 : 켄 피니건20년 넘게 전 세계 여러 기업에서 컨설턴트와 소프트웨어 엔지니어로 일했다. 자바와 Java  EE에서 클라우드 마이크로서비스를 더 쉽게 개발하는 데 도움을 주는 손테일 프로젝트를 이끌고 있다. 라이브오크와 다른 여러 제이보스 프로젝트도 담당했다.역자 : 오현석KAIST에서 전산학 학사와 석사 학위(프로그래밍 언어 연구실)를 취득했다. 삼성메디슨, 비트앤펄스 등에서 UI 개발자와 개발 팀장을 지냈고, 현재 호주 JNF Soft에서 풀스택 개발자 및 컨설턴트로 일하고 있다. 매일 조금씩 번역과 저술을 통해 조금이나마 동료 프로그래머에게 도움을 주고자 노력하고 있다. 웹이나 모바일 등의 분야에서 값 중심 프로그래밍을 통해 오류 발생 가능성이 적으면서 유지보수가 편한 프로그램을 작성하는 방법과 이를 지원하는 여러 도구를 만드는 일에 관심이 많다. 최근에는 블록체인을 활용한 서비스를 개발한다. 블록체인 스마트 계약에 프로그래밍 언어의 정적 분석 기법과 타임 이론 등을 적용해서 여러 노드에서 스마트 계약을 매번 실행하지 않고도 계약 결과를 블록체인에 안전하게 공유하는 방법을 고민한다. 『코어 파이썬 애플리케이션 프로그래밍 3판』, 『프로그래밍 인 스칼라 3판』, 『코틀린 인 액션』(이상 에이콘), 『함수형 반응형 프로그래밍』, 『러닝 리액트』(이상 한빛미디어) 등 20여 권을 번역했다.\n",
        "bookIntroContent": "마이크로서비스 아키텍처로 전환하려는 개발자를 위한 본격 활용 안내서JVM 기반 마이크로서비스 애플리케이션을 설계하고 구축하는 방법을 알려준다. 전통적인 Java EE 애플리케이션과 마이크로서비스 설계를 비교한 후 마이크로서비스를 이루는 각 요소를 설명하는 방식으로 독자의 이해를 돕는다. 이를 바탕으로 마이크로서비스를 구현하는 도구와 기법을 설명한다. 마이크로서비스를 매끄럽게 운용하는 모니터링, 보안, 테스팅, 클라우드 전개 방법도 함께 살펴본다.",
        "tableOfContentsContent": "\nPart 1 마이크로서비스 기초  CHAPTER 1 엔터프라이즈 자바 마이크로서비스\r__1.1 엔터프라이즈 자바의 역사\r__1.2 마이크로서비스와 분산 아키텍처\r__1.3 마이크로서비스로 마이그레이션할 때 사용할 수 있는 패턴들\r__1.4 엔터프라이즈 자바 마이크로서비스란 무엇인가?\r__1.5 요약\r CHAPTER 2 간단한 RESTful 마이크로서비스 개발하기\r__2.1 카얌베 모노리스\r__2.2 새로운 관리 사이트\r__2.3 요약\r CHAPTER 3 마이크로서비스를 위한 애플리케이션 서버\r__3.1 꼭 필요한 만큼의 애플리케이션 서버\r__3.2 JeAS 선택하기\r__3.3 요약\r CHAPTER 4 마이크로서비스 테스트\r__4.1 어떤 유형의 테스트가 필요한가?\r__4.2 단위 테스트\r__4.3 불변성이란 무엇인가?\r__4.4 통합 테스트\r__4.5 소비자 중심 계약 테스트\r__4.6 추가 읽기 목록 \r__4.7 추가 연습문제\r__4.8 요약\r CHAPTER 5 클라우드 네이티브 개발\r__5.1 클라우드란 무엇인가?\r__5.2 서비스 모델\r__5.3 클라우드 네이티브 개발\r__5.4 클라우드에 전개하기\r__5.5 미니시프트 시작하기\r__5.6 마이크로서비스 클라우드 전개\r__5.7 클라우드에서 테스트하기\r__5.8 추가 연습문제\r__5.9 요약\r Part 2 엔터프라이즈 자바 마이크로서비스 구현  CHAPTER 6 마이크로서비스 소비하기\r__6.1 자바 클라이언트 라이브러리를 통해 마이크로서비스 소비하기\r__6.2 JAX-RS 클라이언트 라이브러리로 마이크로서비스 소비하기\r__6.3 요약\r CHAPTER 7 소비할 마이크로서비스 발견하기\r__7.1 왜 마이크로서비스를 발견할 수 있어야 하는가?\r__7.2 손테일로 마이크로서비스 등록하기\r__7.3 손테일을 통해 등록한 마이크로서비스 소비하기\r__요약\r CHAPTER 8 내고장성과 모니터링 전략\r__8.1 분산 아키텍처에서 발생하는 마이크로서비스의 실패\r__8.2 네트워크 실패\r__8.3 실패 영향 경감시키기\r__8.4 히스트릭스를 지불 마이크로서비스에 추가하기\r__8.5 요약\r CHAPTER 9 마이크로서비스 보안\r__9.1 마이크로서비스 보안의 중요성\r__9.2 키클록 사용하기\r__9.3 스트라이프 마이크로서비스에 보안 적용하기\r__9.4 사용자 인증 획득하기\r__9.5 요약\r CHAPTER 10 마이크로서비스 하이브리드 아키텍처 구성하기\r__10.1 카얌베 모노리스\r__10.2 카얌베 모노리스 실행하기\r__10.3 카얌베 하이브리드 - 마이크로서비스를 사용하는 모노리스\r__10.4 하이브리드 클라우드에 전체 전개하기\r__10.5 요약\r CHAPTER 11 아파치 카프카를 이용한 데이터 스트리밍\r__11.1 아파치 카프카가 할 수 있는 일은 무엇인가?\r__11.2 모노리스 아키텍처를 스트리밍을 사용해 단순하게 만들기\r__11.3 데이터 스트리밍을 위해 카프카 전개하고 사용하기\r__11.4 추가 연습문제\r__11.5 요약\r 부록스프링 부트 마이크로서비스\r__A.1 스프링 부트 프로젝트 해부도\r__A.2 애플리케이션 프로퍼티 설정하기\r__A.3 스프링 부트 스타터 의존관계\r__A.4 스프링 부트 애플리케이션 개발하기\r__A.5 스프링 부트 테스트\n",
        "isbn10": "1162242094",
        "isbn13": "9791162242094"
    },
    {
        "title": "자바 데이터 분석 (자바로 배우는 데이터 분석과 빅데이터 처리, 데이터 시각화 방법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15344879",
        "image": "https://bookthumb-phinf.pstatic.net/cover/153/448/15344879.jpg?type=m1&udate=20190818",
        "author": "존 R. 허바드",
        "price": "35000",
        "discount": "31500",
        "publisher": "에이콘출판",
        "pubdate": "20190828",
        "isbn": "1161753354 9791161753355",
        "description": "자바를 사용해 다양한 데이터 분석 기법을 구현하는 방법을 알려주는 책이다. 자바를 사용한 기본적인 데이터 처리 방법과 데이터 시각화 방법, 다양한 통계치를 도출하는 프로그램 구현 방법이 예제로 쉽게 구현돼 있다. 또한 관계형 데이터베이스와 NoSQL 데이터베이스를 활용한 데이터 분석 방법 등... ",
        "authorIntroContent": "\n존 R. 허바드\n저자 : 존 R. 허바드(JOHN R. HUBBARD)40년 동안 펜실베이니아와 버지니아의 대학교에서 컴퓨터 기반의 데이터 분석을 해 왔다. 펜실베이니아 주립 대학교에서 컴퓨터 과학 석사 학위를 취득하고 미시간 대학교에서 수학 박사학위를 취득했다. 현재는 리치몬드 대학교의 수학, 컴퓨터 과학 명예교수로 데이터 구조와 데이터베이스 시스템, 수치 해석과 빅데이터를 가르치고 있다.컴퓨터 관련 6권의 책을 비롯해 다양한 책과 연구 논문을 편찬했다. 그 중 일부는 독일어, 프랑스어, 중국어 등 5개 언어로 번역됐다. 또한 아마추어 팀파니 연주가이기도 하다.역자 : 김명훈대학 시절 산업공학을 전공했으나 프로그래밍이 좋아 프로그래머의 길로 뛰어든 후천적 프로그래머다. 삼성SDS에서 소프트웨어 아키텍트로 근무 중이며 사내벤처인 차자줌에서 개발 리더로 근무하고 있다. 개발 리더지만 기술 영업에 더 많은 시간을 보내고 있어 직무 변경을 해야 할지 고민하고 있다.\n",
        "bookIntroContent": "자바를 사용해 다양한 데이터 분석 기법을 구현하는 방법을 알려주는 책이다. 자바를 사용한 기본적인 데이터 처리 방법과 데이터 시각화 방법, 다양한 통계치를 도출하는 프로그램 구현 방법이 예제로 쉽게 구현돼 있다. 또한 관계형 데이터베이스와 NoSQL 데이터베이스를 활용한 데이터 분석 방법 등 데이터베이스 기반의 분석 프로그래밍 방식도 다루고 있다. 일반적으로 데이터 분석 문제에서 많이 접근하는 회귀 분석, 분류 분석, 군집 분석 등을 아파치 커먼즈(Apache Commons)나 웨카(Weka) 같은 오픈소스를 활용해 구현하는 방법도 소개한다. 그 외에 추천 알고리즘, 빅데이터 분석 등의 이슈도 함께 다룬다.",
        "tableOfContentsContent": "\n1장. 데이터 분석 개론 __데이터 분석의 기원\r__과학적 방법\r__보험학\r__증기로 계산\r__멋진 예시\r__허먼 홀러리스\r__에니악\r__비지칼크\r__데이터, 정보, 지식\r__왜 자바인가?\r__자바 통합 개발 환경\r__요약\r __2장. 데이터 처리 __데이터 유형\r__변수\r__데이터 요소와 데이터 셋\r__데이터 요소와 데이터 셋\r____널 값\r__관계형 데이터베이스 테이블\r____키 필드\r____키-값 쌍\r__해시 테이블\r__파일 형식\r____마이크로소프트 엑셀 데이터\r____XML과 JSON 데이터\r__테스트 데이터 셋 생성\r____메타데이터\r____데이터 클리닝\r____데이터 스케일링\r____데이터 필터링\r____정렬\r____병합\r____해싱\r__요약\r 3장. 데이터 시각화 __테이블과 그래프\r____산점도\r____선그래프\r____막대그래프\r____히스토그램\r__시계열 데이터\r__자바 구현체\r__이동 평균\r__데이터 순위\r__도수 분포\r__정규 분포\r____사고 실험\r__지수 분포\r__자바 예제\r__요약\r 4장. 통계 __기술 통계\r__임의 추출\r__확률 변수\r__확률 분포\r__누적 분포\r__이항 분포\r__다변량 분포\r__조건부 확률\r__확률적 이벤트의 독립\r__분할표\r__베이즈 정리\r__상관계수와 공분산\r__표준 정규 분포\r__중심 극한 정리\r__신뢰 구간\r__가설 검정\r__요약\r 5장. 관계형 데이터베이스 __관계 데이터 모델\r__관계형 데이터베이스\r__외래키\r__관계형 데이터베이스 디자인\r____데이터베이스 생성\r____SQL 명령문\r____데이터베이스에 데이터 입력\r____데이터베이스 쿼리\r____SQL 데이터 유형\r____JDBC\r____JDBC의 PreparedStatement 사용하기\r____배치 처리\r____데이터베이스 뷰\r____서브쿼리\r____테이블 인덱스\r__요약\r 6장. 회귀 분석 __선형 회귀\r____엑셀에서의 선형 회귀\r____회귀 상관계수 계산\r____분산 분석\r____선형 회귀 자바 구현\r____앤스콤 쿼텟\r__다항식 회귀\r____다중선형회귀분석\r____아파치 커먼즈 구현\r____곡선 적합\r__요약\r 7장. 분류 분석 __의사 결정 트리\r____의사결정 트리와 엔트로피와의 관계\r____ID3 알고리즘\r__웨카 플랫폼\r____ARFF 파일 유형\r____웨카를 사용한 자바 구현\r__베이지안 분류기\r____웨카를 사용한 자바 구현\r____서포트 벡터 머신 알고리즘\r__로지스틱 회귀\r____K-최근접 이웃 알고리즘\r____퍼지 분류 알고리즘\r__요약\r 8장. 클러스터 분석 __거리 측정\r__차원의 저주\r__계층적 클러스터링\r____웨카 구현\r____K-평균 클러스터링\r____K-중간점 클러스터링\r____유사성 전파 클러스터링\r__요약\r 9장. 추천 시스템 __유틸리티 행렬\r__유사도 측정\r__코사인 유사도\r__간단한 추천 시스템\r__아마존 아이템 기반 협업 필터링\r__사용자 등급 구현\r__거대 희소 행렬\r__임의 접근 파일 사용\r__넷플릭스 경진대회\r__요약\r 10장. NoSQL 데이터베이스 __맵 데이터 구조\r__SQL과 NoSQL\r__몽고 데이터베이스 시스템\r__도서관 데이터베이스\r__몽고DB를 사용한 자바 개발\r__지리 정보 데이터베이스를 위한 몽고DB 확장\r__몽고DB에서의 인덱스\r__왜 NoSQL인가? 왜 몽고DB인가?\r__타 NoSQL 데이터베이스 시스템\r__요약\r 11장. 빅데이터 분석 __확장, 데이터 스트라이핑, 샤딩\r__구글 페이지랭크 알고리즘\r__구글 맵 리듀스 프레임워크\r__맵 리듀스 애플리케이션 예제\r__워드카운트 예제\r__확장성\r__맵 리듀스를 사용한 행렬 곱\r__몽고DB에서의 맵 리듀스\r__아파치 하둡\r__하둡 맵 리듀스\r__요약\r 부록. 자바 도구 __명령창\r__자바\r__이클립스\r__MySQL\r__MySQL 워크벤치\r__이클립스에서 MySQL 데이터베이스 접근\r__몽고DB\n",
        "isbn10": "1161753354",
        "isbn13": "9791161753355"
    },
    {
        "title": "BBC micro:bit 프로그래밍 with 자바스크립트 블록 에디터 (사물인터넷을 위한)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12547671",
        "image": "https://bookthumb-phinf.pstatic.net/cover/125/476/12547671.jpg?type=m1&udate=20191010",
        "author": "서영진",
        "price": "28000",
        "discount": "25200",
        "publisher": "제이펍",
        "pubdate": "20170925",
        "isbn": "1185890955 9791185890951",
        "description": "개발환경으로 파이썬(PYTHON)과 자바스크립트 블록 에디터(JAVASCRIPT BLOCK EDITOR)라는 개발환경을 지원하고 있는데, 자바스크립트 블록 에디터는 MIT의 스크래치와 같은 블록과 자바스크립트를 함께 이용해 작업할 수 있는 환경을 제공하고 있다. 이 책은 마이크로소프트의 자바스크립트 블록... ",
        "authorIntroContent": "\n서영진\n저자 : 서영진저자 서영진은 십여 년 넘게 IT 분야에서 프로그래밍을 하고 있으며, IT 전문 강사와 컨설턴트로 일하며, 관광 TC도 겸하고 있다. 주요 저서로는 《사물인터넷을 위한 리눅스 프로그래밍 WITH 라즈베리 파이》, 《타이젠으로 웨어러블 앱 개발하기》, 《사물인터넷: 우리가 꿈꾸는 스마트한 세상》, 《QT 프로그래밍》 등이 있다.개발한 애플리케이션으로는 리눅스용 다이얼패드, SKY 6400/6500 모바일 캠코더, 원자력 발전소 CPS 시스템, 신도리코 NEST UI, 삼성전자 VOIP 폰 등이 있으며, 리눅스, UI(QT), 임베디드, 모바일, 사물인터넷을 비롯한 스마트폰 디바이스 분야에서 개발을 진행하였다. 이집트 SECC, 베트남을 비롯한 해외 강의와 삼성전자, LG전자, 현대, SK 등의 기업과 대구/DIP/인하/원광/전북/조선대학교 및 3DFIA, KETI, KEA, RAPA, KOSTA 등의 협회에서 강의 및 세미나를 진행하였다.\n",
        "bookIntroContent": "기본적인 코딩 방법부터 사물인터넷을 위한 하드웨어 개발까지!BBC MICRO:BIT는 영국의 국영 방송국인 BBC 중심으로 삼성전자, 마이크로소프트, ARM, 랭커스터(LANCASTER) 대학교 등의 업체와 단체들이 다년간의 연구 개발을 통해서 개발한 4×5CM 크기의 소형 교육용 보드다. 개발환경으로 파이썬(PYTHON)과 자바스크립트 블록 에디터(JAVASCRIPT BLOCK EDITOR)라는 개발환경을 지원하고 있는데, 자바스크립트 블록 에디터는 MIT의 스크래치와 같은 블록과 자바스크립트를 함께 이용해 작업할 수 있는 환경을 제공하고 있다. 이 책은 마이크로소프트의 자바스크립트 블록 에디터를 이용해 BBC MICRO:BIT 기반의 사물인터넷 애플리케이션을 개발하는 내용을 다룬다.",
        "tableOfContentsContent": "\n1부 BBC micro:bit 시작하기\r1장 BBC micro:bit 이해하기4\r1-1 IT 교육을 위한 작은 시작 7\r1-1-1 사물인터넷 시대와 소프트웨어 교육 7\r1-1-2 교육을 위한 하드웨어 9\r1-1-3 아이들을 위한 소프트웨어 개발 교육 도구 12\r1-2 사물인터넷과 BBC micro:bit 14\r1-2-1 사물인터넷 14\r1-2-2 사물인터넷과 오픈 소스 하드웨어 15\r1-2-3 아두이노 17\r1-2-4 라즈베리 파이 19\r1-2-5 코드버그 21\r1-2-6 BBC micro:bit와 주변기기 23\r1-3 BBC micro:bit의 개발환경 26\r1-3-1 소프트웨어 개발환경 26\r1-3-2 BBC micro:bit의 개발환경 28\r1-3-3 자바스크립트 블록 에디터 30\r1-3-4 BBC micro:bit와 스마트폰 개발환경 30\r1-4 자바스크립트 블록 에디터의 기본 32\r1-4-1 자바스크립트 블록 에디터와 블록 32\r1-4-2 자바스크립트 블록 에디터와 자바스크립트 33\r1-4-3 코드의 실행 34\r 2장 자바스크립트 블록 에디터를 이용한 프로그래밍37\r2-1 자바스크립트 블록 에디터에 대해서 40\r2-1-1 자바스크립트 블록 에디터의 개요 40\r2-1-2 자바스크립트 블록 에디터의 구조 43\r2-2 자바스크립트 블록 에디터와 코딩 블록 45\r2-2-1 자바스크립트 블록 에디터의 코딩 블록 45\r2-3 Hello World! 프로그래밍 71\r2-3-1 새로운 프로젝트의 생성과 삭제 71\r2-3-2 Hello World! 프로그래밍 72\r2-3-3 BBC micro:bit에서 실행하기 77\r2-4 자바스크립트와 Hello World! 프로그래밍 80\r2-4-1 자바스크립트 블록 에디터와 자바스크립트 코딩 80\r2-4-2 자바스크립트를 이용한 Hello World! 프로그래밍 80\r2-4-3 “기본(Basic)” 코딩 블록의 “문자열 표시” 함수 81\r2-4-4 사용자 정의 함수 82\r 3장 누르고 밝히고…(버튼과 LED)88\r3-1 버튼을 눌러요! 90\r3-1-1 사용자와의 인터랙션과 버튼의 사용 90\r3-1-2 버튼 감지를 위한 프로그래밍 91\r3-1-3 블록의 복제와 삭제 92\r3-2 하트 뿅뿅~: 5×5 LED 매트릭스와 패턴 94\r3-2-1 5×5 LED 매트릭스를 위한 하트 패턴 94\r3-2-2 하트 깜빡이기: 블링킹(Blinking) 96\r3-2-3 5×5 LED 매트릭스의 밝기 설정 97\r3-3 심장이 두근두근: 스프라이트와 애니메이션 100\r3-3-1 스프라이트 100\r3-3-2 심장이 두근두근 101\r3-4 자바스크립트에서의 버튼과 LED 제어 104\r3-4-1 자바스크립트와 버튼 제어 104\r3-4-2 자바스크립트와 LED의 밝기 설정 107\r3-4-3 자바스크립트와 애니메이션 110\r 4장 노래를 불러라~114\r4-1 소리와 스피커/피에조 부저 116\r4-1-1 소리 116\r4-1-2 스피커와 피에조 부저 118\r4-2 도레미파~ : 계이름의 출력 120\r4-2-1 BBC micro:bit와 스피커의 연결 120\r4-2-2 블록(Blocks)을 이용한 소리의 출력 122\r4-3 학교종이 땡땡땡~ : 곡을 연주해요 126\r4-3-1 악보 : 음표, 쉼표 그리고 박자 126\r4-3-2 학교종을 울려봐요 127\r4-4 자바스크립트와 소리의 출력 131\r4-4-1 자바스크립트의 음악 관련 함수 131\r4-4-2 자바스크립트의 사운드 출력 132\r 2부 BBC micro:bit 프로그래밍\r5장 프로그래밍 로직과 반복문144\r5-1 프로그래밍 로직 설계와 순서도 147\r5-1-1 절차적 프로그래밍 147\r5-1-2 순서도 149\r5-2 반복문: repeat, while, for, forever 151\r5-2-1 반복문 151\r5-2-2 “반복(repeat)” 블록을 사용한 반복 152\r5-2-3 “for” 블록의 반복을 사용한 LED 켜기 154\r5-2-4 2중 “for” 블록 159\r5-2-5 “for” 블록의 반복을 사용한 LED 끄기 164\r5-3 이미지와 스크롤링 166\r5-3-1이미지 166\r5-3-2 이미지의 스크롤 167\r5-4 자바스크립트와 순환문 170\r5-4-1 자바스크립트의 순환문 170\r5-4-2 자바스크립트와 “for” 함수 171\r5-4-3 이미지를 이용한 스크롤링 173\r5-4-4 “break” 문과 “continue” 문 175\r 6장 제어와 분기181\r6-1 엄마가 좋아, 아빠가 좋아?: 조건문(if) 183\r6-1-1 조건문 183\r6-1-2 블록에서의 조건문의 처리(“if ” 블록) 183\r6-1-3 “if” 블록의 또 다른 옵션(“if ~ else” 문) 188\r6-2 제어 로직 190\r6-2-1 조건의 판단과 비교 연산자 190\r6-2-2 논리 연산자 194\r6-3 비교하고 또 비교하고(“if ~ else if” 문) 198\r6-3-1 “if ~ else if” 문 198\r6-3-2 숫자에 따른 요일의 출력 199\r6-4 자바스크립트와 제어 로직 201\r6-4-1 자바스크립트의 제어 로직 201\r6-4-2 “if ” 문 203\r6-4-3 “if ~ else if” 그리고 “if ~ else” 문 205\r6-4-4 “if ~ else” 문과“switch ~ case” 문 208\r 7장 수학과 코딩213\r7-1 변수 216\r7-1-1 컴퓨터 구조와 메모리 216\r7-1-2 변수의 사용 217\r7-1-3 배열의 사용 219\r7-2 사칙 연산과 나머지 구하기 223\r7-2-1 사칙 연산223\r7-2-2 나머지 구하기 228\r7-2-3 팩토리얼(factorial) 230\r7-3 온도 변환기(섭씨 ⇔ 화씨) 234\r7-3-1 섭씨와 화씨 234\r7-3-2 온도 변환기의 작성 235\r7-4 자바스크립트와 수학 238\r7-4-1 자바스크립트의 수학과 변수의 사용 238\r7-4-2 A4 종이 규격의 비밀 239\r7-4-3 A 사이즈의 종이 크기를 구하는 프로그래밍 240\r7-4-4 증감 연산자와 return 문 246\r7-4-5 비트 연산 248\r7-4-6 시프트 연산 252\r 8장 센서와 입력257\r8-1 게임과 가속도 센서 259\r8-1-1 게임 코딩 블록 259\r8-1-2 폭탄 피하기 게임 260\r8-1-3 가속도 센서의 사용 266\r8-2 수평을 맞춰요~ 268\r8-2-1 수평계 268\r8-2-2 온도계를 만들어봐요 271\r8-3 방위 센서를 이용한 나침반 272\r8-3-1 동서남북 272\r8-3-2 나침반을 만들어봐요 273\r8-4 자바스크립트를 이용한 게임과 센서 276\r8-4-1 위~ 아래~ 위위아래아래~ 276\r8-4-2 자바스크립트를 이용한 레이싱 게임 프로그래밍 278\r 3부 BBC micro:bit를 이용한 사물인터넷 프로젝트\r9장 뱀 주사위 놀이296\r9-1 뱀 주사위 놀이 298\r9-1-1 보드게임 298\r9-1-2 뱀 주사위 놀이 299\r9-2 주사위 표시 300\r9-2-1 주사위 300\r9-2-2 주사위 만들기 301\r9-3 흔들~ 흔들~ 흔들어~ 305\r9-3-1 사용자 경험 305\r9-3-2 흔들기 감지 306\r9-4 자바스크립트와 가위바위보 307\r9-4-1 가위바위보 게임 307\r9-4-2 자바스크립트와 함수의 사용 311\r 10장 손에 손잡고319\r10-1 BBC micro:bit와 외부 단자 322\r10-1-1BBC micro:bit에서 제공하는 단자들 322\r10-1-2링 단자의 사용 323\r10-1-3전도성 실과 펜 324\r10-1-4전기의 흐름과 전도체 실험 325\r10-2 과일 키보드 330\r10-2-1과일을 이용한 키보드 330\r10-2-2과일 키보드를 위한 코드 작성 331\r10-2-3손에 손잡고 333\r10-3 웨어러블: 블루투스와 스마트폰 336\r10-3-1웨어러블 336\r10-3-2블루투스를 통한 스마트폰과의 연동: 디바이스 코딩 블록 338\r10-3-3날 찾아봐요(catch me if you can) 343\r10-4 자바스크립트의 핀 제어 344\r10-4-1자바스크립트의 핀 제어 관련 함수 344\r10-4-2자바스크립트를 이용한 디지털 반려동물 345\r10-4-3모바일과의 연동 348\r 11장 BBC micro:bit로 하는 전자 실험352\r11-1 발광 다이오드와 신호등 만들기 354\r11-1-1발광 다이오드 354\r11-1-2BBC micro:bit와 발광 다이오드의 사용 355\r11-1-3신호등을 만들어봐요 356\r11-2 터치 게임: 알루미늄 테이프 360\r11-2-1알루미늄 테이프 360\r11-2-2터치 게임 360\r11-3 M2M: micro:bit to micro:bit 367\r11-3-1M2M 367\r11-3-2BBC micro:bit 간의 통신 367\r11-3-3블루투스를 이용한 BBC micro:bit 간의 통신 370\r11-4자바스크립트와 백그라운드 처리, 그리고 시리얼 입출력 372\r11-4-1자바스크립트와 백그라운드 처리 372\r11-4-2자바스크립트와 시리얼 입출력 377\r 12장 확장을 위한 연결381\r12-1 기초 전자공학과 브레드보드 383\r12-1-1전자 회로 383\r12-1-2브레드보드 384\r12-1-3다양한 전자부품 386\r12-2 BBC micro:bit와 센서의 사용 389\r12-2-1스위치 389\r12-2-2빛 감지(조도) 센서의 사용 391\r12-3 액추에이터와 모터의 연결 397\r12-3-1액추에이터 397\r12-3-2서보 모터의 제어 398\r12-4 자바프로젝트와 디바이스의 연동 401\r12-4-1가변 저항과 BBC micro:bit의 연결 401\r12-4-2가변 저항의 값 읽기 403\r 찾아보기407\r\n",
        "isbn10": "1185890955",
        "isbn13": "9791185890951"
    },
    {
        "title": "자바스크립트+jQuery (JavaScript부터 JSON, AJAX, Mobile까지 다루는)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13745937",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/459/13745937.jpg?type=m1&udate=20180629",
        "author": "박성배",
        "price": "30000",
        "discount": "27000",
        "publisher": "영진닷컴",
        "pubdate": "20180630",
        "isbn": "8931458010 9788931458015",
        "description": "자바스크립트란 미국의 넷스케이프 커뮤니케이션즈사에서 개발한 스크립트 언어로 모든 웹 브라우저에서 지원되며, HTML5의 공식 스크립트 언어입니다. 자바스크립트는 컴파일 과정이 없기 때문에 다른... 이 책은 자바스크립트를 처음 접하는 초보자들을 대상으로, 기본적인 문법을 기초로 하여... ",
        "authorIntroContent": "\n박성배\n저자 : 박성배저자 박성배· 전남대학교 계산통계학과 학사 · 전남대학교 계산통계학과 석사 및 박사 · 전남대학교 전자계산소 · 순천제일대학교 멀티미디어과 교수\n",
        "bookIntroContent": "자바스크립트란 미국의 넷스케이프 커뮤니케이션즈사에서 개발한 스크립트 언어로 모든 웹 브라우저에서 지원되며, HTML5의 공식 스크립트 언어입니다. 자바스크립트는 컴파일 과정이 없기 때문에 다른 언어와 비교하였을 때 빠른 시간 안에 코드를 작성할 수 있도록 도와주는 장점이 있습니다. 또한, 웹 페이지와 웹 서버 개발 및 모바일 애플리케이션 개발을 할 때 최적화되어 활용하기 좋습니다.이 책은 자바스크립트를 처음 접하는 초보자들을 대상으로, 기본적인 문법을 기초로 하여 자바스크립트를 전반적으로 소개합니다. PART 1에서는 자바스크립트의 개념과 역사에 대해 설명하고, 기본적인 프로그래밍 언어에서 필요로 하는 함수나 객체에 대해 다룹니다.  PART 2에서는 자바스크립트를 보다 효율적으로 활용하기 위해 JQUERY, AJAX, JSON, 모바일까지 다양한 요소들을 배울 수 있습니다. 프로그래밍 기초를 단단하게 다지기 위해 ‘문제+순서도+기초 문법+기초 지식’ 방식으로 제공하여 프로그래밍 작성하는 스킬을 키울 수 있도록 도와줍니다. 또한, 다양한 예제를 담아 스스로 문제를 풀어보면서 문제 해결 능력도 향상시킬 수 있습니다.",
        "tableOfContentsContent": "\nPART 1 : 자바스크립트\rChapter 01. 자바스크립트란? \r 1.1 자바스크립트는 웹 표준 언어이다.\r 1.2 왜, 자바스크립트인가...?\r 1.3 자바스크립트의 활용\r 1.4 자바스크립트의 역사\rChapter 02. 자바스크립트를 시작하기 전에\r 2.1 편집기 \r 2.2 자바스크립트와 첫 인사 \r 2.3 자바스크립트의 문장 \r 2.4 주석문 \r 2.5 자바스크립트는 어떠한 역할을 하는가? \r 2.6 HTML과 자바스크립트의 연결 \rChapter 03. 프로그래밍 기초 \r 3.1 변수 \r 3.2 자료형 \r 3.3 입출력문 \r 3.4 배열 \r 3.5 연산자 \r 3.6 조건문 \r 3.7 반복문\rChapter 04. 함수\r 4.1 함수의 정의\r 4.2 함수의 호출 \r 4.3 내장 함수 \r 4.4 함수 메서드 \r 4.5 변수의 적용 범위 \r 4.6 클로저 \rChapter 05. 객체\r 5.1 객체란? \r 5.2 사용자 정의 객체\r 5.3 내장 객체 \r 5.4 프로토타입 \r 5.5 자바스크립트 오류\rChapter 06. 브라우저 객체 (BOM)\r 6.1 window 객체 \r 6.2 screen 객체 \r 6.3 location 객체\r 6.4 history 객체\rChapter 07. 문서 객체 (DOM)\r 7.1 DOM\r 7.2 HTML DOM 객체\r 7.3 이벤트\r 7.4 HTML DOM 요소\r 7.5 애니메이션\r 7.6 유효성 검증\r PART 2 : jQuery\rChapter 08. jQuery\r 8.1 jQuery란? \r 8.2 웹 페이지에서 jQuery 사용하기\rChapter 09. jQuery 선택자 \r 9.1 기본 선택자\r 9.2 속성 선택자\r 9.3 폼 서식 선택자 \r 9.4 기타 선택자 \rChapter 10. jQuery 이벤트 메서드\r 10.1 jQuery의 이벤트 메서드\r 10.2 event.속성\rChapter 11. jQuery 효과 메서드 \r 11.1 애니메이션 기본 메서드\r 11.2 시각적 효과 메서드\r 11.3 애니메니션 관리 메서드\r 11.4 콜백 함수\r 11.5 메서드 체이닝 \rChapter 12. jQuery HTML/CSS 메서드\r 12.1 콘텐츠와 속성 설정 및 반환 메서드\r 12.2 요소/콘텐츠 조작 메서드\r 12.3 래핑 메서드\r 12.4 jQuery 요소 탐색 메서드\rChapter 13. AJAX 소개 \r 13.1 AJAX는 무엇인가?\r 13.2 자바스크립트의 AJAX\r 13.3 jQuery의 AJAX\rChapter 14. JSON 소개 \r 14.1 JSON의 역할\r 14.2 JSON은 무엇인가?\r 14.3 JSON 구문 \r 14.4 서버로부터의 JSON\rChapter 15. jQuery 모바일 \r 15.1 jQuery 모바일이란?\r 15.2 전환\r 15.3 버튼 \r 15.4 아이콘 \r 15.5 팝업\r 15.6 툴바 \r 15.7 네비게이션 바 \r 15.8 테이블\r 15.9 리스트 뷰\r 15.10 폼\r 15.11 이벤트\r\n",
        "isbn10": "8931458010",
        "isbn13": "9788931458015"
    },
    {
        "title": "자바스크립트 코딩 기법과 핵심 패턴",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=6763510",
        "image": "https://bookthumb-phinf.pstatic.net/cover/067/635/06763510.jpg?type=m1&udate=20150715",
        "author": "스토얀 스테파노프",
        "price": "22000",
        "discount": "19800",
        "publisher": "인사이트",
        "pubdate": "20111103",
        "isbn": "8966260152 9788966260157",
        "description": "『자바스크립트 코딩 기법과 핵심 패턴』은 다양한 자바스크립트 코딩 기법과 핵심 패턴, 최선의 관행을 소개한다. 또한 객체, 함수, 상속 그리고 자바스크립트 고유의 문제에 대한 해결책을 찾는 숙련된 개발자들에게, 이 책은 이상적인 개념 정리와 코드 템플릿을 제시한다.",
        "authorIntroContent": "\n스토얀 스테파노프\n저자 : 스토얀 스테파노프저자 스토얀 스테파노프는 야후!의 웹 개발자이며, 성능 최적화 도구인 YSLOW 2.0의 아키텍트다. 『OBJECT-ORIENTED JAVASCRIPT』의 저자이자, 『EVEN FASTER WEB SITES』『HIGH PERFORMANCE JAVASCRIPT』의 공동 저자이며, 『JAVASCRIPT: THE GOOD PARTS』의 기술 리뷰도 맡았다. 블로그와 JSCONF, VELOCITY, FRONTEERS 등의 컨퍼런스에서 자바스크립트와 PHP 등 프론트엔드 웹 개발을 주제로 논의를 계속해왔다. 이미지 최적화 도구인 SMUSH.IT을 만들었다.역자 : 김준기역자 김준기는 NHN에서 UI 개발을 담당하고 있다. 오픈소스 자바스크립트 프레임워크인 ‘진도’의 UI 컴포넌트를 개발하였으며, 현재는 웹 애플리케이션의 프론트엔드 성능 개선 업무를 진행하고 있다. 『GAE로 시작하는 클라우드 컴퓨팅』을 공역하였다.역자 : 변유진역자 변유진은 플래시로 프론트엔드 개발에 입문하여, 현재는 NHN에서 자바스크립트 개발을 하고 있다.\n",
        "bookIntroContent": "『자바스크립트 코딩 기법과 핵심 패턴』은 다양한 자바스크립트 코딩 기법과 핵심 패턴, 최선의 관행을 소개한다. 또한 객체, 함수, 상속 그리고 자바스크립트 고유의 문제에 대한 해결책을 찾는 숙련된 개발자들에게, 이 책은 이상적인 개념 정리와 코드 템플릿을 제시한다.",
        "tableOfContentsContent": "\n옮긴이의 글\r지은이의 글\r 1장개요 1.1 패턴\r1.2 자바스크립트의 개념\r객체지향\r클래스가 없다\r프로토타입\r실행 환경\r1.3 ECMAScript 5\r1.4 JSLint\r1.5 콘솔\r 2장기초 2.1 유지보수 가능한 코드 작성 \r2.2 전역 변수 최소화 \r전역 변수의 문제점 \rvar 선언을 빼먹었을 때의 부작용\r전역 객체에 대한 접근 \r단일 var 패턴\r호이스팅(hoisting): 분산된 var 선언의 문제점\r2.3 for 루프\r2.4 for-in 루프\r2.5 내장 생성자 프로토타입 확장하기 / 확장하지 않기\r2.6 switch 패턴\r2.7 암묵적 타입캐스팅 피하기\reval() 피하기\r2.8 parseInt()를 통한 숫자 변환\r2.9 코딩 규칙\r들여쓰기 \r중괄호 \r여는 중괄호의 위치 \r공백 \r2 명명 규칙 \r생성자를 대문자로 시작하기 \r단어 구분\r그 외의 명명 패턴 \r2 주석 작성 \r2 API 문서 작성 \rYUIDoc 예제\r2 독자를 위한 문서 작성 \r2 동료 리뷰\r2 출시 단계의 압축\r2 JSLint 실행 \r2 요약 \r3장리터럴과 생성자\r3.1 객체 리터럴\r객체 리터럴 문법\r생성자 함수로 객체 생성하기 \r객체 생성자의 함정 \r3.2 사용자 정의 생성자 함수 \r생성자의 반환 값 \r3.3 new를 강제하는 패턴 \r명명 규칙\rthat 사용 \r스스로를 호출하는 생성자\r3.4 배열 리터럴\r배열 리터럴 문법\r배열 생성자의 특이성\r배열인지 판별하는 방법 \r3.5 JSON\rJSON 다루기\r3.6 정규 표현식 리터럴\r정규 표현식 리터럴 문법\r3.7 원시 데이터 타입 래퍼 \r3.8 에러 객체\r3.9 요약\r4장함수\r4.1 배경 지식\r용어 정리\r선언문 vs. 표현식: 이름과 호이스팅 \r함수의 name 프로퍼티\r함수 호이스팅 \r4.2 콜백 패턴\r콜백 예제\r콜백과 유효범위\r비동기 이벤트 리스너\r타임아웃 \r라이브러리에서의 콜백\r4.3 함수 반환하기\r4.4 자기 자신을 정의하는 함수\r4.5 즉시 실행 함수 \r즉시 실행 함수의 매개변수\r즉시 실행 함수의 반환 값 \r장점과 사용 방법 \r4.6 즉시 객체 초기화 \r4.7 초기화 시점의 분기\r4.8 함수 프로퍼티 - 메모이제이션(Memoization) 패턴\r4.9 설정 객체 패턴\r4 커리(Curry)\r함수 적용\r부분적인 적용 \r커링(Curring)\r커링을 사용해야 할 경우 \r4요약 \r5장객체 생성 패턴\r5.1 네임스페이스 패턴 \r범용 네임스페이스 함수 \r5.2 의존 관계 선언 \r5.3 비공개 프로퍼티와 메서드 \r비공개(private) 멤버 \r특권(privileged) 메서드 \r비공개 멤버의 허점 \r객체 리터럴과 비공개 멤버 \r프로토타입과 비공개 멤버 \r비공개 함수를 공개 메서드로 노출시키는 방법 \r5.4 모듈 패턴 \r모듈 노출 패턴 \r생성자를 생성하는 모듈\r모듈에 전역 변수 가져오기\r5.5 샌드박스 패턴 \r전역 생성자 \r모듈 추가하기 \r생성자 구현 \r5.6 스태틱 멤버 \r공개 스태틱 멤버 \r비공개 스태틱 멤버 \r5.7 객체 상수 \r5.8 체이닝 패턴\r체이닝 패턴의 장단점 \r5.9 method() 메서드 \r5 요약 \r6장코드 재사용 패턴\r6.1 클래스 방식 vs. 새로운 방식의 상속 패턴 \r6.2 클래스 방식의 상속을 사용할 경우 예상되는 산출물 \r6.3 클래스 방식의 상속 패턴 #1 - 기본 패턴 \r프로토타입 체인 추적 \r패턴 #1의 단점 \r6.4 클래스 방식의 상속 패턴 #2 - 생성자 빌려쓰기 \r프로토타입 체인 \r생성자 빌려쓰기를 적용한 다중 상속 \r생성자 빌려쓰기 패턴의 장단점 \r6.5클래스 방식의 상속 패턴 #3 - 생성자 빌려쓰고 프로토타입 지정해주기 \r6.6 클래스 방식의 상속 패턴 #4 - 프로토타입 공유 \r6.7 클래스 방식의 상속패턴 #5 - 임시 생성자 \r상위 클래스 저장 \r생성자 포인터 재설정 \r6.8 Klass \r6.9 프로토타입을 활용한 상속 \r논의 \rECMAScript 5의 추가사항 \r6 프로퍼티 복사를 통한 상속 패턴 \r6 믹스-인 \r6 메서드 빌려쓰기 \r예제: 배열 메서드 빌려쓰기\r빌려쓰기와 바인딩 \rFunction.prototype.bind()\r6 요약 \r7장디자인 패턴\r7.1 싱글톤(Singleton) \rnew 사용하기 \r스태틱 프로퍼티에 인스턴스 저장하기 \r클로저에 인스턴스 저장하기 \r7.2 팩토리(Factory) \r내장 객체 팩토리\r7.3 반복자(Iterator) \r7.4 장식자(Decorator) \r사용 방법 \r구현 \r목록을 사용한 구현 \r7.5 전략 \r데이터 유효성 검사 예제 \r7.6 퍼사드(Facade) \r7.7 프록시(Proxy) \r예제 \r프록시를 사용해 요청 결과 캐시하기\r7.8 중재자(Mediator) \r중재자 패턴 예제 \r7.9 감시자(Observer) \r예제 #1: 잡지 구독 \r예제 #2: 키 누르기 게임 \r7 요약\r8장DOM과 브라우저 패턴\r8.1 관심사의 분리 \r8.2 DOM 스크립팅 \rDOM 접근 \rDOM 조작 \r8.3 이벤트 \r이벤트 처리 \r이벤트 위임 \r8.4 장시간 수행되는 스크립트 \rsetTimeout() \r웹워커 \r8.5 원격 스크립팅\rXMLHttpRequest \rJSONP \r프레임과 이미지 비컨(Image Beacons) \r8.6 자바스크립트 배포 \r스크립트 병합 \r코드 압축과 gzip 압축 \rExpires 헤더 \rCDN 사용 \r8.7 로딩 전략 \r「script」 엘리먼트의 위치 \rHTTP Chunked 인코딩 사용 \r다운로드를 차단하지 않는 동적인 「script」 엘리먼트 \r게으른 로딩 \r주문형 로딩 \r자바스크립트 사전 로딩 \r8.8 요약\n",
        "isbn10": "8966260152",
        "isbn13": "9788966260157"
    },
    {
        "title": "Try! helloworld 자바스크립트 (하루 15분, 누구나 프로그래밍을 할 수 있다!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13561612",
        "image": "https://bookthumb-phinf.pstatic.net/cover/135/616/13561612.jpg?type=m1&udate=20190204",
        "author": "김용록",
        "price": "22000",
        "discount": "19800",
        "publisher": "길벗",
        "pubdate": "20180508",
        "isbn": "1160504733 9791160504736",
        "description": "자바스크립트는 문법이 간결하고 프로그램 설치가 간편하여 첫 프로그래밍 언어로 인기가 높다.... KR) 사이트의 인기 강좌 ‘자바스크립트 기초’와 ‘웹 프런트엔드 기초’를 책으로 엮은 것이다.... 하루 한 강, 매일 15분이면 어느새 자바스크립트 프로그래밍에 익숙해진 자신을 발견하게 될 것이다.",
        "authorIntroContent": "\n김용록\n저자 : 김용록저자 김용록구글코리아에서 소프트웨어 엔지니어로 재직 중이다. 더 좋은 소프트웨어 엔지니어가 되기를 갈망하지만 일과 삶의 균형이 더 중요하다. 겨울에는 주로 스키를 즐긴다.\n",
        "bookIntroContent": "자바스크립트는 문법이 간결하고 프로그램 설치가 간편하여 첫 프로그래밍 언어로 인기가 높다. 또한, 웹 프로그래밍부터 응용 프로그램 개발까지 활용 범위도 넓다.이 책은 무료 학습 서비스(동영상+온라인 실습)를 제공하는 프로그래머스(PROGRAMMERS.CO.KR) 사이트의 인기 강좌 ‘자바스크립트 기초’와 ‘웹 프런트엔드 기초’를 책으로 엮은 것이다. 책의 설명만으로도 학습하는 데 무리가 없지만, 저자 동영상 강의를 함께 보면 학습 효율이 더욱 높아질 것이다. 또한, 배운 내용을 바로 온라인 사이트에서 실습할 수 있다. 하루 한 강, 매일 15분이면 어느새 자바스크립트 프로그래밍에 익숙해진 자신을 발견하게 될 것이다.",
        "tableOfContentsContent": "\n1부 자바스크립트 입문\r Part 01 시작하기\r1강. 실습 환경 만들기 \r2강. 개발자 도구 사용하기\r[실습] console.log( ) 명령으로 출력하기\r Part 02 변수\r3강. 변수를 선언하고 초기화하기\r[실습] 변수 사용하기 \r4강. 변수 활용하기\r[실습] 변수 사용하기\r Part 03 데이터 타입\r5강. 기본 데이터 타입\r[실습] 기본 데이터 타입 실습하기 \r6강. 숫자형\r[실습] 숫자형 실습하기 \r7강. 문자열\r[실습] 문자열 실습하기\r8강. 객체\r[실습] 객체 선언하기\r9강. undefined와 null\r[실습] undefined와 null 사용하기 \r Part 04 연산자와 함수\r10강. 산술 연산자\r[실습] 산술 연산자 사용하기 \r11강. 함수 사용하기\r[실습] 함수 사용하기\r12강. 관계 연산자와 논리 연산자\r[실습] 관계 연산자 사용하기 \r13강. 연산자 우선순위\r Part 05 문자열\r14강. 문자열 이어 붙이기\r[실습] 문자열 이어 붙이기\r15강. 문자열 다루기\r[실습] 문자열 다루기\r Part 06 배열\r16강. 배열 만들기\r[실습] 배열 만들기\r17강. 배열 사용하기\r[실습] 배열 사용하기 \r Part 07 주석\r18강. 주석 사용하기\r[실습] 주석 사용하기\r Part 08 조건문\r19강. if 조건문\r[실습] if 조건문 사용하기\r20강. switch 조건문\r[실습] switch 조건문 사용하기\r Part 09 반복문\r21강. while 반복문\r[실습] while 반복문 사용하기\r22강. do while 반복문\r23강 for 반복문 \r[실습] for 반복문 사용하기\r24강. for in 반복문\r[실습] for in 반복문 사용하기 \r Part 10 더 알아보기\r25강. 변수의 유효 범위\r26강. 변수 가림 현상\r[실습] 변수 가림 현상 사용하기\r27강. 메서드와 this\r28강. 클로저\r 2부 자바스크립트와 웹 프런트엔드\r Part 11 자바스크립트와 웹\r29강. 자바스크립트, HTML, CSS\r30강. window 객체\r31강. CSS 다루기\r Part 12 DOM + JS\r32강. DOM 알아보기\r33강. 단일 엘리먼트 선택하기\r34강. 다중 엘리먼트 선택하기\r35강. CSS 선택자를 이용해서 엘리먼트 선택하기\r36강. 엘리먼트를 추가하고 삭제하기\r Part 13 이벤트와 자바스크립트\r37강. 콜백 함수\r38강. HTML 태그 속성에 이벤트 핸들러 추가하기\r39강. 자바스크립트에서 이벤트 핸들러 설정하기\r Part 14 네트워킹\r40강. Ajax 요청 보내기\r41강. Ajax 응답을 받아서 처리하기\r42강. JSON\r43강. Ajax와 JSON\r Part 15 클래스와 객체 지향 프로그래밍\r44강. script 태그의 위치에 따라 달라지는 실행 순서\r45강. 크롬 디버거 활용하기\r46강. 익명 함수와 함수 즉시 호출\r47강. 예외 처리\r48강. 예외 처리 활용하기\r Part 16 이미지 갤러리 프로젝트\r49강. 이미지 갤러리 만들기\r50강. 이미지 선택 기능 만들기\r51강. 전체 선택 기능 만들기\r52강. 자세히 보기 기능 만들기\r53강. 슬라이드 쇼 기능 만들기\r\n",
        "isbn10": "1160504733",
        "isbn13": "9791160504736"
    },
    {
        "title": "자바를 활용한 딥러닝 (딥러닝 입문부터 DL4J를 이용한 신경망 구현과 스파크,하둡,연동까지)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13911809",
        "image": "https://bookthumb-phinf.pstatic.net/cover/139/118/13911809.jpg?type=m1&udate=20191010",
        "author": "조시 패터슨|애덤 깁슨",
        "price": "38000",
        "discount": "34200",
        "publisher": "한빛미디어",
        "pubdate": "20180901",
        "isbn": "1162241063 9791162241066",
        "description": "★ 자바 개발자를 위한 효율적인 딥러닝 신경망 구축 가이드이 책의 전반부에서는 이론을, 후반부에서는 튜닝, 병렬화, 벡터화, 파이프라인 구축 등 딥러닝 실무의 핵심을 설명한다. 특히 DL4J 라이브러리로 스파크 및 하둡에서 심층 신경망 구조를 학습하고 딥러닝 워크플로를 실행하는 실용적인 방법과 전략을... ",
        "authorIntroContent": "\n조시 패터슨\n저자 : 조시 패터슨저자 조시 패터슨 JOSH PATTERSON 은 현재 스카이마인드의 기술 분야 책임자다. 그전에는 빅데이터/머신러닝/딥러닝 분야 컨설팅을 했다. 클라우데라의 수석 솔루션 아키텍트로 근무했고, 테네시 강 유역 개발공사에서 머신러닝/분산 시스템 엔지니어로 일하며 OPENPDC 프로젝트의 지능형 전력망 시스템(스마트 그리드)에 하둡을 도입했다. 테네시 대학교에서 TINYOS 기반 그물형 네트워크와 사회성곤충 최적화 알고리즘 연구로 컴퓨터 공학 석사학위를 취득했다. 소프트웨어 개발 분야에서 17년 이상 근무했으며 DL4J, 아파치 머하웃, 메트로놈(METRONOME), ITERATIVEREDUCE, OPENPDC, 제이모티프(JMOTIF)와 같은 오픈소스 공간에 매우 적극적으로 참여한다.저자 : 애덤 깁슨저자 애덤 깁슨 ADAM GIBSON은 샌프란시스코에서 활동하는 딥러닝 전문가로 포춘 500대 기업, 헤지 펀드, 광고회사 및 스타트업 지원 회사와 함께 머신러닝 프로젝트를 수행하고 있다. 회사가 실시간 빅데이터를 처리하고 분석할 수 있게 해주는 분야에서 매우 뛰어난 실적을 냈다. 13살 때부터 컴퓨터를 사랑했으며 HTTP://DEEPLEARNING4J.ORJ를 통해 오픈소스 커뮤니티에 적극적으로 참여한다.역자 : 김홍진역자 김홍진은 한양대학교에서 컴퓨터 공학을 전공하고 어쩌다 보니 데이터 마이닝까지 전공하며 이 세계에 발을 들였다. 추천 시스템, BI 시스템 등 데이터를 활용한 시스템 개발에 참여하면서 데이터 활용 기술을 이해하고 효율적으로 사용하는 것이 중요하다고 생각하게 되었다. 현재는 SK플래닛에서 데이터 과학자로 근무하며 데이터를 통합하고 데이터 사용 환경을 구축하는 업무를 진행하고 있다.역자 : 박다희역자 박다희는 어느 분야에서나 쓸모 있지 않을까 하는 생각에 데이터 마이닝을 전공하고 SK플래닛에서 데이터 과학자로 근무하였다. 기술뿐만 아니라 비즈니스와 통계에 대한 깊은 이해까지 필수적이라는 생각으로 균형 있는 발전을 위해 고민과 노력을 하고 있다.역자 : 배철민역자 배철민은 컴퓨터 공학을 전공하고, SK플래닛에서 개발자로 근무하며 경력의 대부분을 자바스크립트와 함께 했다. REACT, ANGULARJS 등 프레임워크를 활용해서 프론트엔드 개발, 하이브리드 앱 개발 프로젝트를 담당했으며 NODE.JS를 활용한 백엔드 개발까지 겸했다. 현재는 라인플러스에서 데이터플랫폼 UI를 개발하며 데이터 시각화에 대해 심도 있게 공부하며 실무에 적용 중이다. 저서로는 『웹으로 시작하는 모바일게임』(지앤선, 2017)이 있다.\n",
        "bookIntroContent": "★ 자바 개발자를 위한 효율적인 딥러닝 신경망 구축 가이드이 책의 전반부에서는 이론을, 후반부에서는 튜닝, 병렬화, 벡터화, 파이프라인 구축 등 딥러닝 실무의 핵심을 설명한다. 특히 DL4J 라이브러리로 스파크 및 하둡에서 심층 신경망 구조를 학습하고 딥러닝 워크플로를 실행하는 실용적인 방법과 전략을 알려준다. 이론과 실습 모두 깊이 있게 다뤄 딥러닝 관련 전문 지식이 없는 입문자도 이 책을 읽고 나면 딥러닝 신경망을 구축할 수 있다.",
        "tableOfContentsContent": "\nCHAPTER 1 머신러닝 복습하기\r1.1 학습하는 기계\r1.2 문제 정의하기\r1.3 머신러닝 속의 수학 : 선형대수\r1.4 머신러닝 속의 수학 : 통계\r1.5 머신러닝은 어떻게 작동하는가?\r1.6 로지스틱 회귀\r1.7 모델 평가하기\r1.8 머신러닝 이해하기\r CHAPTER 2 신경망과 딥러닝의 기초\r2.1 신경망\r2.2 신경망 학습\r2.3 활성화함수\r2.4 손실함수\r2.5 하이퍼파리미터\r CHAPTER 3 심층 신경망의 기본 원칙\r3.1 딥러닝 정의\r3.2 심층 신경망의 공통 설계와 원리\r3.3 심층 신경망 구축하기\r CHAPTER 4 주요 심층 신경망 구조\r4.1 비지도 사전학습 신경망\r4.2 합성곱 신경망\r4.3 순환 신경망\r4.4 재귀 신경망\r4.5 요약 및 논의\r CHAPTER 5 심층 신경망 구축하기\r5.1 심층 신경망을 올바른 문제에 일치시키기\r5.2 DL4J 도구 모음\r5.3 DL4J API의 기본 개념\r5.4 다층 퍼셉트론 신경망으로 CSV 데이터 모델링하기\r5.5 합성곱 신경망을 활용한 손글씨 이미지 모델링\r5.6 순환 신경망을 활용한 시퀀스 데이터 모델링\r5.7 이상 탐지를 하는 오토인코딩 장치 사용\r5.8 VAE를 사용하여 MNIST 숫자 재구성\r5.9 자연어 처리에서의 딥러닝 애플리케이션\r CHAPTER 6 심층 신경망 튜닝하기\r6.1 심층 신경망 튜닝의 기본 개념\r6.2 신경망 구조와 입력 데이터 매칭시키기\r6.3 출력 계층과 모델의 목표 연관짓기\r6.4 계층 수, 파라미터 수, 메모리 다루기\r6.5 가중치 초기화 전략\r6.6 활성화함수 사용하기\r6.7 손실함수 적용하기\r6.8 학습률 이해하기\r6.9 희소성이 학습에 주는 영향\r6.10 최적화 기법 적용하기\r6.11 병렬화와 GPU로 더 빠르게 학습하기\r6.12 미니배치 크기와 에포크 조절하기\r6.13 규제 사용하기\r6.14 분류 불균형 다루기\r6.15 과대적합 다루기\r6.16 training UI에서 신경망 통계 보기\r CHAPTER 7 심층 신경망 구조별 튜닝하기\r7.1 합성곱 신경망\r7.2 순환 신경망\r7.3 제한된 볼츠만 머신\r7.4 심층 신뢰 신경망\r CHAPTER 8 벡터화\r8.1 머신러닝에서 벡터화하는 법\r8.2 ETL과 벡터화에 DataVec 사용하기\r8.3 이미지 데이터 벡터화\r8.4 순차 데이터 벡터화\r8.5 텍스트 벡터화\r8.6 그래프로 작업하기\r CHAPTER 9 스파크에서 딥러닝과 DL4J 사용하기\r9.1 하둡과 스파크에서 DL4J 사용하는 방법\r9.2 스파크 실행 구성 및 튜닝하기\r9.3 스파크와 DL4J용 메이븐 POM 작성하기\r9.4 하둡 및 스파크 문제 해결\r9.5 스파크에서 DL4J 병렬 처리\r9.6 스파크에서 DL4J API 사용하는 법\r9.7 스파크 다층 퍼셉트론 예제\r9.8 LSTM으로 스파크에서 셰익스피어 텍스트 생성하기\r9.9 스파크에서 합성곱 신경망으로 MNIST 모델링하기\r 부록 A 인공지능이란? \r부록 B RL4J 및 강화학습 \r부록 C 반드시 알아야 하는 숫자들 \r부록 D 신경망과 역전파 : 수학적 접근 \r부록 E ND4J API 활용하기 \r부록 F DataVec 활용하기 \r부록 G DL4J 소스로 작업하기 \r부록 H DL4J 프로젝트 설정 \r부록 I DL4J 프로젝트에 알맞게 GPU 설정하기 \r부록 J DL4J 설치 시 문제 해결 \r \n",
        "isbn10": "1162241063",
        "isbn13": "9791162241066"
    },
    {
        "title": "자바스크립트로 서버와 클라이언트 구축하기",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13648370",
        "image": "https://bookthumb-phinf.pstatic.net/cover/136/483/13648370.jpg?type=m1&udate=20180619",
        "author": "박정태",
        "price": "25000",
        "discount": "22500",
        "publisher": "정보문화사",
        "pubdate": "20180605",
        "isbn": "8956747849 9788956747842",
        "description": "프론트엔드부터 백엔드, DB 조작까지 자바스크립트로 구축 가능!JAVASCRIPT에서 VUE.JS 라이브러리와 NODE.JS를 이용하여 서버와 프론트 영역을 개발할 수... 자바스크립트를 알고 있지만 잘 사용하지 못하는 입문자, 어디에 써야할지 모르는 개발자, 클라이언트 프로그램을 만들거나 서버 프로그램을 만들고... ",
        "authorIntroContent": "\n박정태\n저자 : 박정태저자 박정태우연히 수업시간에 들은 크롤러 매력에 빠져 창업하고 휴학하여 패션 데이터 수집을 위한 쇼핑몰 크롤러와 크롤러 프레임워크를 개발하였다. 재미난 것을 만들고 싶어 다양한 스타트업에서 교육 자료 공유 플랫폼, 화장품 추천 서비스, 의류 반품/주문/리오더 시스템과 웹 서비스를 개발하였다. 코딩 애플에서 파이썬으로 크롤러 만들기, NODE.JS로 쇼핑몰 만들기 강사로 활동 중이며, 다양한 교육 활동으로 블록체인 시스템인 SMART CONTRACT를 활용한 DAPP 만들기를 진행하고 있다. 현재 (주)GLOSFER의 기술개발본부팀에 있으며 블록체인 기술을 연구/개발하고 있다.\n",
        "bookIntroContent": "프론트엔드부터 백엔드, DB 조작까지 자바스크립트로 구축 가능!JAVASCRIPT에서 VUE.JS 라이브러리와 NODE.JS를 이용하여 서버와 프론트 영역을 개발할 수 있는 책으로, 프로그래밍을 경험하지 못한 사람들도 쉽게 볼 수 있도록 최소한의 문법을 설명하고 있다. 총 네 단계로, 클라이언트 구축을 시작으로 서버를 구축하고, 채팅과 쇼핑몰을 구축하며 혼자 웹 서비스를 뚝딱 만들 수 있다.자바스크립트를 알고 있지만 잘 사용하지 못하는 입문자, 어디에 써야할지 모르는 개발자, 클라이언트 프로그램을 만들거나 서버 프로그램을 만들고 싶은 모든 사람들에게 도움이 될 내용이다.",
        "tableOfContentsContent": "\n설치// 개발 환경 설정\r1. node.js 설치\r2. MySQL 설치 \r PART 0. 필수 문법\r1. 변수 생성\r2. 데이터 타입\r3. 데이터 형 변환 \r4. 비구조화 할당(Destructuring Assignment) \r5. 조건문 \r6. 반복문 \r7. Array(배열) 고급 사용법 \r8. Object(객체) 고급 사용법\r9. 전개 연산자(Spread Operator) \r10. 함수와 화살표 함수\r11. 클래스\r12. 모듈 패턴 \r 1단계// 클라이언트\rPART 1. vue.js\r1. vue.js 시작하기, vue 인스턴스 생성\r2. 템플릿 문법\r3. 데이터 바인딩\r4. computed, watch, methods\r5. 조건부 렌더링, 리스트 렌더링 \r6. 이벤트 핸들링 \r7. 라이프 사이클 \r PART 2. nuxt.js\r1. nuxt.js 시작하기 \r2. pages \r3. 설정 파일\r4. 라우트 \r5. 레이아웃 \r6. 컴포넌트 \r7. Vuex store를 이용한 데이터 관리\r 2단계// 서버 만들기\rPART 3. node.js\r1. http 모듈과 서버 요청 테스트\r2. 요청 객체, 응답 객체\r3. GET, POST, 정적/동적 파일 제공 \r4. 서버 실행\r5. npm과 package.json \r PART 4. express\r1. 라우팅 \r2. 미들웨어 \r3. express-generator\r4. express와 nuxt.js 같이 사용하기 \r PART 5. node.js의 특징 - 비동기 패턴\r1. 비동기(asynchronous) 패턴 \r2. 비동기 패턴 해결 - 콜백(callback) \r3. 비동기 패턴 해결 - Promise\r4. 비동기 패턴 해결 - async/await \r PART 6. 데이터베이스\r1. database의 이해 - ① \r2. database의 이해 - ② \r3. database의 이해 - ③ \r4. database의 이해 - ④ \r5. database 연동 \r PART 7. ORM을 이용한 데이터베이스 연동\r1. ORM\r2. 모델\r3. 데이터 생성\r4. 데이터 수정/삭제 \r5. 데이터 조회\r PART 8. 알아두면 유용한 라이브러리\r1. 이메일 보내기\r2. 요청 모듈\r3. 파일 업로드\r4. 사용자 인증\r5. 노드 버전 관리 \r PART 9. 소켓\r1. 소켓 사용을 위한 설정 \r2. 다양한 형태로 소켓 서버 구축\r 3단계// 1차 프로젝트 채팅 구현\rPART 10. node.js\r1. 프로젝트 생성과 초기 세팅 \r2. 채팅방 입장\r3. 채팅 구현 - 전체 채팅 \r4. 채팅 구현 - 귓속말\r5. 채팅 구현 - 팀 채팅 \r 4단계// 최종 프로젝트 쇼핑몰 구축\rPART 11. 쇼핑몰 구축 - 관리자편\r1. 프로젝트 생성과 서버 초기 세팅\r2. 디비 모델링 - 모델 파일 생성\r3. 제품 등록\r4. 제품 리스트\r5. 유저 리스트\r6. 구매 리스트\r7. 메인 페이지\r PART 12. 쇼핑몰 구축 - 사용자편\r1. 메인 페이지\r2. 유저 관리 - 회원가입 \r3. 유저 관리 - 로그인 \r4. 제품 페이지\r5. 마이페이지\n",
        "isbn10": "8956747849",
        "isbn13": "9788956747842"
    },
    {
        "title": "자바 네트워크 프로그래밍 (네트워크 애플리케이션 개발의 모든 것)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=8273707",
        "image": "https://bookthumb-phinf.pstatic.net/cover/082/737/08273707.jpg?type=m1&udate=20180417",
        "author": "엘리엇 러스티 해럴드",
        "price": "34000",
        "discount": "30600",
        "publisher": "제이펍",
        "pubdate": "20141022",
        "isbn": "1185890076 9791185890074",
        "description": "이 책은 자바 네트워크 프로그램을 개발하기 위한 완벽한 내용을 제공한다. 여러분은 이 책을 통해 멀티스레드 서버, 암호화 통신, 로컬 네트워크... 위한 자바의 네트워크 클래스 라이브러리 사용법을 배울 수 있다. 저자인 앨리어트 러스티 해럴드는 온전히 동작하는 예제 프로그램을 통해 메소드와... ",
        "authorIntroContent": null,
        "bookIntroContent": "이 책은 자바 네트워크 프로그램을 개발하기 위한 완벽한 내용을 제공한다. 여러분은 이 책을 통해 멀티스레드 서버, 암호화 통신, 로컬 네트워크 브로드캐스팅과 서버 측 프로그램으로 데이터를 전송하는 것과 같은, 일반적인 네트워크 작업을 쉽고 빠르게 수행하기 위한 자바의 네트워크 클래스 라이브러리 사용법을 배울 수 있다. 저자인 앨리어트 러스티 해럴드는 온전히 동작하는 예제 프로그램을 통해 메소드와 클래스에 관해서 설명한다. 전면적으로 개정된 이번 4판에서는 REST, SPDY, 비동기 I/O를 포함한 대부분의 최신 기술들을 다루고 있다.",
        "tableOfContentsContent": "\n1장 기본 네트워크 개념 \r네트워크 \r네트워크 계층 \rIP, TCP 그리고 UDP \r인터넷 \r클라이언트/서버 모델 \r인터넷 표준 \r 2장 스트림 \r출력 스트림 \r입력 스트림 \r필터 스트림 \rreader와 writer \r 3장 스레드 \r스레드 실행하기 \r스레드에서 데이터 반환하기 \r동기화 \r데드락 \r스레드 스케줄링 \r스레드 풀과 익스큐터 \r 4장 인터넷 주소 \rInetAddress 클래스 \rInet4Address 클래스와 Inet6Address 클래스 \rNetworkInterface 클래스 \r유용한 프로그램 \r 5장 URL과 URI \rURI \rURL 클래스 \rURI 클래스 \r프록시 \rGET 메소드를 사용하여 서버 측 프로그램과 통신하기 \r패스워드로 보호된 사이트 접근하기 \r 6장 HTTP \r프로토콜 \rHTTP 메소드 \r요청 본문 \r쿠키 \r 7장 URLConnection 클래스 \rURLConnection 열기 \r서버에서 데이터 읽기 \r헤더 읽기 \r캐시 \r연결 설정하기 \r클라이언트 요청 HTTP 헤더 설정하기 \r서버에 데이터 쓰기 \rURLConnection의 보안 고려 사항 \rMIME 미디어 타입 추측하기 \rHttpURLConnection 클래스 \r 8장 클라이언트 소켓 \r소켓 사용하기 \r소켓 생성과 연결 \r소켓 정보 얻기 \r소켓 옵션 설정하기 \r소켓 예외 \rGUI 애플리케이션에서 소켓 \r 9장 서버 소켓 \rServerSocket 사용하기 \r로그 남기기 \r서버 소켓 만들기 \r서버 소켓 정보 가져오기 \r소켓 옵션 \rHTTP 서버 \r 10장 보안 소켓 \r보안 통신 \r보안 클라이언트 소켓 만들기 \r암호화 조합 선택하기 \r이벤트 핸들러 \r세션 관리 \r클라이언트 모드 \r보안 서버 소켓 만들기 \rSSLServerSocket 설정하기 \r 11장 논블럭 I/O \r예제 클라이언트 \r예제 서버 \r버퍼 \r채널 \r준비된 것 선택하기 \r 12장 UDP \rUDP 프로토콜 \rUDP 클라이언트 \rUDP 서버 \rDatagramPacket 클래스 \rDatagramSocket 클래스 \r소켓 옵션 \r유용한 애플리케이션들 \rDatagramChannel 클래스 \r 13장 IP 멀티캐스트 \r멀티캐스팅 \r멀티캐스트 소켓 다루기 \r간단한 두 예제 \r 찾아보기\n",
        "isbn10": "1185890076",
        "isbn13": "9791185890074"
    },
    {
        "title": "자바 웹 프로그래밍 Next Step (하나씩 벗겨가는 양파껍질 학습법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11037465",
        "image": "https://bookthumb-phinf.pstatic.net/cover/110/374/11037465.jpg?type=m1&udate=20190204",
        "author": "박재성",
        "price": "30000",
        "discount": "27000",
        "publisher": "로드북",
        "pubdate": "20160919",
        "isbn": "8997924249 9788997924240",
        "description": "개선을 해나가면서 실무에 필요한 개발 능력과 웹에 대한 폭넓은 이해력을 높여준다. 10년 이상 자바 웹 프로그래머로 살아온 저자의 경험과, 3년 이상 NEXT에서 웹 서버 전공으로 학생들을 가르치면서 얻게 된 ‘학습’과 관련된 생각을 ‘양파껍질 학습법’이라는 저자만의 독특한 접근법으로 정리한 책이다.",
        "authorIntroContent": "\n박재성\n저자 : 박재성저자 박재성은 프로그래밍을 통해 지속 가능한 삶을 살아가는 것에 관심이 많다. 최근에는 대한민국에서 자신의 색깔을 유지하며 행복한 삶을 살아가는 방법을 주변에 전하는 데 더 많은 관심을 가지고 있다. SLIPP(HTTPS://SLIPP.NET) 커뮤니티를 통해 다른 개발자와 온라인으로 소통하고, 오프라인 스터디를 통해 다양한 개발자들과 교류하고 있다. 저서로는 〈자바 세상의 빌드를 이끄는 메이븐〉(2011, 한빛미디어), 프로그래머 그 다음 이야기(2011)이 있다.저자는 현재 NEXT INSTITUTE에서 웹 서버 전공 학생들에게 자바 웹 프로그래밍을 가르치면서 사람을 키우는 즐거움을 느끼고 있다. 나와 같은 반란군을 키우는 교육자이고 싶다.\n",
        "bookIntroContent": "이 책은 웹 개발 입문의 껍질(책에서는 ‘양파껍질’로 표현한다)을 막 벗겨낸 경력 1년 이상의 초보개발자들을 대상으로 하는 책이다. 웹 서버, 프레임워크 등을 직접 제작해보고 테스트와 리팩토링을 통해 점진적 개선을 해나가면서 실무에 필요한 개발 능력과 웹에 대한 폭넓은 이해력을 높여준다. 10년 이상 자바 웹 프로그래머로 살아온 저자의 경험과, 3년 이상 NEXT에서 웹 서버 전공으로 학생들을 가르치면서 얻게 된 ‘학습’과 관련된 생각을 ‘양파껍질 학습법’이라는 저자만의 독특한 접근법으로 정리한 책이다.",
        "tableOfContentsContent": "\n1장. 첫 번째 양파 껍질 벗기기\r1.1 대한민국 IT 개발자 직군의 종류 \r1.2 개발자들에게 유용한 웹사이트들 \r1.3 처음에 배워야 하는 것들 \r1.4 일단 시작해 보자 \r1.5 본격적으로 웹 프로그래밍에 도전하기 \r1.6 학습 방법 \r 두 번째 양파 껍질 벗기기 \r 2장 문자열 계산기 구현을 통한 테스트와 리팩토링\r2.1 main() 메소드를 활용한 테스트의 문제점 \r2.2 JUnit을 활용해 main() 메소드 문제점 극복 \r2.3 문자열 계산기 요구사항 및 실습 \r2.4 테스트와 리팩토링을 통한 문자열 계산기 구현 \r2.5 추가 학습 자료 \r 3장 개발 환경 구축 및 웹 서버 실습 요구사항\r3.1 서비스 요구사항 \r3.2 로컬 개발 환경 구축 \r3.3 원격 서버에 배포 \r3.4 웹 서버 실습 \r3.5 추가 학습 자료 \r 4장 HTTP 웹 서버 구현을 통해 HTTP 이해하기\r4.1 동영상을 활용한 HTTP 웹 서버 실습 \r4.2 HTTP 웹 서버 구현 \r4.3 추가 학습 자료\r 5장 웹 서버 리팩토링, 서블릿 컨테이너와 서블릿의 관계\r5.1 HTTP 웹 서버 리팩토링 실습\r5.2 웹 서버 리팩토링 구현 및 설명\r5.3 서블릿 컨테이너, 서블릿/JSP를 활용한 문제 해결\r5.4 추가 학습 자료\r 6장 서블릿/JSP를 활용해 동적인 웹 애플리케이션 개발하기\r6.1 서블릿/JSP로 회원관리 기능 다시 개발하기\r6.2 세션(HttpSession) 요구사항 및 실습\r6.3 세션(HttpSession) 구현\r6.4 MVC 프레임워크 요구사항 1단계\r6.5 MVC 프레임워크 구현 1단계\r6.6 쉘 스크립트를 활용한 배포 자동화\r6.7 추가 학습 자료\r 7장 DB를 활용해 데이터를 영구적으로 저장하기\r7.1 회원 데이터를 DB에 저장하기 실습\r7.2 DAO 리팩토링 실습\r7.3 동영상을 활용한 DAO 리팩토링 실습\r7.4 DAO 리팩토링 및 설명\r7.5 추가 학습 자료\r 8장 AJAX를 활용해 새로고침 없이 데이터 갱신하기\r8.1 질문/답변 게시판 구현\r8.2 AJAX 활용해 답변 추가, 삭제 실습\r8.3 MVC 프레임워크 요구사항 2단계\r8.4 MVC 프레임워크 구현 2단계\r8.5 추가 학습 자료\r 9장 두 번째 양파 껍질을 벗기기 위한 중간 점검\r9.1 자체 점검 요구사항(필수)\r9.2 자체 점검 요구사항(선택)\r9.3 자체 점검 확인\r 10장 새로운 MVC 프레임워크 구현을 통한 점진적 개선\r10.1 MVC 프레임워크 요구사항 3단계\r10.2 MVC 프레임워크 구현 3단계\r10.3 인터페이스가 다른 경우 확장성 있는 설계\r10.4 배포 자동화를 위한 쉘 스크립트 개선\r 11장 의존관계 주입(이하 DI)을 통한 테스트하기 쉬운 코드 만들기\r11.1 왜 DI가 필요한가?\r11.2 DI를 적용하면서 쌓이는 불편함(불만)\r11.3 불만 해소하기\r11.4 DI 프레임워크 실습\r11.5 DI 프레임워크 구현\r11.6 추가 학습 자료\r 12장 확장성 있는 DI 프레임워크로 개선\r12.1 필드와 setter 메소드에 @Inject 기능 추가\r12.2 필드와 setter 메소드 @Inject 구현\r12.3 @Inject 개선\r12.4 설정 추가를 통한 유연성 확보\r12.5 외부 라이브러리 클래스를 빈으로 등록하기\r12.6 초기화 기능 추가\r12.7 인터페이스, DI, DI 컨테이너\r12.8 웹 서버 도입을 통한 서비스 운영\r 13장 세 번째 양파 껍질 벗기기\r13.1 스프링과 ORM 프레임워크\r13.2 성능과 보안\r13.3 프론트엔드 학습\r13.4 설계, 테스트, 리팩토링\r13.5 빌드, 배포 자동화 및 지속적 통합\r13.6 개발 문화 및 프로세스 학습\n",
        "isbn10": "8997924249",
        "isbn13": "9788997924240"
    },
    {
        "title": "가장 빨리 만나는 코어 자바9 (자바9으로 배우는 모던 자바!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13452662",
        "image": "https://bookthumb-phinf.pstatic.net/cover/134/526/13452662.jpg?type=m1&udate=20180518",
        "author": "카이 호스트만",
        "price": "36000",
        "discount": "32400",
        "publisher": "길벗",
        "pubdate": "20180330",
        "isbn": "1160504393 9791160504392",
        "description": "자바 9으로 배우는 모던 자바!\n\n자바 프로그래머가 알아야 할 모던 자바의 핵심을 다루면서 자바 8과 9의 특징을 짚어준다. 자바 8의 람다 표현식과 스트림 라이브러리, 자바 9의 JShell과 모듈 시스템의 장점을 간결하게 설명한다. 핵심에 집중하여 개념을 빠르게 익히고, 예제 코드를 보면서 프로그래밍 문제... ",
        "authorIntroContent": "\n카이 호스트만\n저자 : 카이 호스트만저자 : 카이 호스트만저자 카이 호스트만(Cay S. Horstmann)《가장 빨리 만나는 자바 8》(길벗, 2014), 《쉽게 배워서 빨리 써먹 는 스칼라 프로그래밍》(비제이퍼블릭, 2013)의 저자이자 《Core Java™, Volumes I and II, 10th Edition》(Prentice Hall, 2016) 의 주 저자이며, 전문 프로그래머와 컴퓨터 과학 학생들을 위해 12권도 넘는 책을 저술했다. 현재 산호세 주립 대학교의 컴퓨터 과학 교수이며 자바 챔피언이다.역자 : 신경근역자 신경근넥스텔레콤에서 SIP 서버 매니저와 빌링 서버 개발을 시작으로, 한컴씽크프리에서 자바/안드로이드 공통 라이브러리 개발을 담당 했고 몇몇 스타트업에서 LBS, SNS, 뉴스 큐레이션 앱 등을 개발 했다. 옮긴 책으로는 《가장 빨리 만나는 자바 8》, 《스프링 4 코딩 공 작소》가 있다. 요즘은 온라인 학습 시스템을 개발/운영 중이다.\n",
        "bookIntroContent": "자바 9으로 배우는 모던 자바!자바 프로그래머가 알아야 할 모던 자바의 핵심을 다루면서 자바 8과 9의 특징을 짚어준다. 자바 8의 람다 표현식과 스트림 라이브러리, 자바 9의 JShell과 모듈 시스템의 장점을 간결하게 설명한다. 핵심에 집중하여 개념을 빠르게 익히고, 예제 코드를 보면서 프로그래밍 문제 해결 방법을 배운 뒤 실무에 바로 적용할 수 있다.",
        "tableOfContentsContent": "\n 1장 기본 프로그래밍 구조\r__1.1첫 번째 프로그램\r____1.1.1“Hello, World” 프로그램 파헤치기 \r____1.1.2자바 프로그램 컴파일 및 실행\r____1.1.3메서드 호출\r____1.1.4JShell 실행\r__1.2기본 타입 \r____1.2.1부호 있는 정수 타입\r____1.2.2부동소수점 타입\r____1.2.3char 타입\r____1.2.4boolean 타입\r__1.3변수\r____1.3.1변수 선언 \r____1.3.2변수 이름\r____1.3.3변수 초기화\r____1.3.4상수\r__1.4산술 연산\r____1.4.1할당\r____1.4.2기본 계산\r____1.4.3수학 메서드\r____1.4.4숫자 타입 변환\r____1.4.5관계 연산자와 논리 연산자 \r____1.4.6큰 숫자\r__1.5문자열\r____1.5.1문자열 연결 \r____1.5.2부분 문자열\r____1.5.3문자열 비교 \r____1.5.4숫자와 문자열 사이의 변환\r____1.5.5문자열 API \r____1.5.6코드 포인트와 코드 유닛\r__1.6입력과 출력\r____1.6.1입력 읽어 오기\r____1.6.2포맷 적용 출력 \r__1.7제어 흐름\r____1.7.1분기 \r____1.7.2루프 \r____1.7.3중단과 계속 \r____1.7.4지역 변수의 유효 범위\r__1.8배열과 배열 리스트\r____1.8.1배열 다루기 \r____1.8.2배열 생성 \r____1.8.3배열 리스트\r____1.8.4기본 타입의 래퍼 클래스 \r____1.8.5향상된 for 루프\r____1.8.6배열과 배열 리스트 복사\r____1.8.7배열 알고리즘 \r____1.8.8명령줄 인수\r____1.8.9다차원 배열\r__1.9기능적 분해\r____1.9.1정적 메서드 선언 및 호출\r____1.9.2배열 매개변수와 반환 값\r____1.9.3가변 인수\r__연습문제\r 2장 객체 지향 프로그래밍\r__2.1객체 사용\r____2.1.1접근자 메서드와 변경자 메서드\r____2.1.2객체 참조\r__2.2클래스 구현\r____2.2.1인스턴스 변수\r____2.2.2메서드 헤더 \r____2.2.3메서드 바디\r____2.2.4인스턴스 메서드 호출 \r____2.2.5this 참조\r____2.2.6값을 사용한 호출\r__2.3객체 생성\r____2.3.1생성자 구현\r____2.3.2오버로딩\r____2.3.3다른 생성자에서 특정 생성자 호출 \r____2.3.4기본 초기화\r____2.3.5인스턴스 변수 초기화\r____2.3.6최종 인스턴스 변수\r____2.3.7인수 없는 생성자 \r__2.4정적 변수와 정적 메서드 \r____2.4.1정적 변수 \r____2.4.2정적 상수\r____2.4.3정적 초기화 블록\r____2.4.4정적 메서드\r____2.4.5팩토리 메서드\r__2.5패키지\r____2.5.1패키지 선언\r____2.5.2jar 명령\r____2.5.3클래스 패스\r____2.5.4패키지 접근\r____2.5.5클래스 임포트\r____2.5.6정적 임포트\r__2.6중첩 클래스\r____2.6.1정적 중첩 클래스\r____2.6.2내부 클래스\r____2.6.3내부 클래스용 특수 문법 규칙 \r__2.7문서화 주석\r____2.7.1주석 넣기 \r____2.7.2클래스 주석\r____2.7.3메서드 주석\r____2.7.4변수 주석\r____2.7.5일반 주석\r____2.7.6링크\r____2.7.7패키지 주석, 모듈 주석, 개요 주석\r____2.7.8주석 내보내기\r__연습문제\r 3장 인터페이스와 람다 표현식\r__3.1인터페이스\r____3.1.1인터페이스 선언\r____3.1.2인터페이스 구현\r____3.1.3인터페이스 타입으로 변환\r____3.1.4캐스트와 instanceof 연산자\r____3.1.5인터페이스 확장\r____3.1.6여러 인터페이스 구현 \r____3.1.7상수\r__3.2인터페이스의 정적 메서드, 기본 메서드, 비공개 메서드\r____3.2.1정적 메서드 \r____3.2.2기본 메서드\r____3.2.3기본 메서드의 충돌 해결\r____3.2.4비공개 메서드 \r__3.3인터페이스의 예\r____3.3.1Comparable 인터페이스\r____3.3.2Comparator 인터페이스\r____3.3.3Runnable 인터페이스\r____3.3.4사용자 인터페이스 콜백\r__3.4람다 표현식\r____3.4.1람다 표현식 문법 \r____3.4.2함수형 인터페이스\r__3.5메서드 참조와 생성자 참조\r____3.5.1메서드 참조\r____3.5.2생성자 참조\r__3.6람다 표현식 처리 \r____3.6.1지연 실행 구현 \r____3.6.2함수형 인터페이스 선택\r____3.6.3독자적인 함수형 인터페이스 구현\r__3.7람다 표현식과 변수 유효 범위 \r____3.7.1람다 표현식의 유효 범위\r____3.7.2람다 표현식을 감싸는 유효 범위에 속한 변수 접근\r__3.8고차 함수\r____3.8.1함수를 반환하는 메서드\r____3.8.2함수를 수정하는 메서드\r____3.8.3Comparator 인터페이스의 메서드\r__3.9지역 클래스와 익명 클래스\r____3.9.1지역 클래스 \r____3.9.2익명 클래스\r__연습문제\r 4장 상속과 리플렉션\r__4.1클래스 확장\r____4.1.1슈퍼클래스와 서브클래스\r____4.1.2서브클래스 메서드 정의와 상속\r____4.1.3메서드 오버라이딩\r____4.1.4서브클래스 생성\r____4.1.5슈퍼클래스 할당\r____4.1.6캐스트\r____4.1.7최종 메서드와 최종 클래스\r____4.1.8추상 메서드와 추상 클래스\r____4.1.9보호 접근 \r____4.1.10익명 서브클래스 \r____4.1.11상속과 기본 메서드\r____4.1.12super를 이용한 메서드 표현식 \r__4.2Object: 보편적 슈퍼클래스\r____4.2.1toString 메서드 \r____4.2.2equals 메서드\r____4.2.3hashCode 메서드\r____4.2.4객체 복제 \r__4.3열거\r____4.3.1열거의 메서드\r____4.3.2생성자, 메서드, 필드\r____4.3.3인스턴스의 바디\r____4.3.4정적 멤버\r____4.3.5열거를 기준으로 스위치하기\r__4.4실행 시간 타입 정보와 리소스\r____4.4.1Class 클래스\r____4.4.2리소스 로드\r____4.4.3클래스 로더\r____4.4.4컨텍스트 클래스 로더\r____4.4.5서비스 로더\r__4.5리플렉션\r____4.5.1클래스 멤버 나열\r____4.5.2객체 조사\r____4.5.3메서드 호출\r____4.5.4객체 생성\r____4.5.5자바빈\r____4.5.6배열 다루기\r____4.5.7프록시\r__연습문제\r 5장 예외, 단정, 로깅\r__5.1예외 처리\r____5.1.1예외 던지기\r____5.1.2예외 계층\r____5.1.3검사 예외 선언\r____5.1.4예외 잡기\r____5.1.5try-with-resources 문\r____5.1.6finally 절\r____5.1.7예외 다시 던지기와 예외 연쇄 \r____5.1.8미처리 예외와 스택 추적 \r____5.1.9Objects.requireNonNull 메서드\r__5.2단정\r____5.2.1단정 사용\r____5.2.2단정 활성화와 비활성화\r__5.3로깅\r____5.3.1로거 사용\r____5.3.2로거\r____5.3.3로깅 레벨\r____5.3.4기타 로깅 메서드\r____5.3.5로깅 구성\r____5.3.6로그 핸들러\r____5.3.7필터와 포매터\r__연습문제\r 6장 제네릭 프로그래밍\r__6.1제네릭 클래스\r__6.2제네릭 메서드\r__6.3타입 경계\r__6.4타입 가변성과 와일드카드\r____6.4.1서브타입 와일드카드 \r____6.4.2슈퍼타입 와일드카드\r____6.4.3타입 변수를 이용한 와일드카드 \r____6.4.4경계 없는 와일드카드\r____6.4.5와일드카드 캡처\r__6.5자바 가상 머신에서 보는 제네릭\r____6.5.1타입 소거\r____6.5.2캐스트 삽입\r____6.5.3브리지 메서드\r__6.6제네릭의 제약\r____6.6.1기본 타입 인수를 사용할 수 없다\r____6.6.2실행 시간에는 모든 타입이 로 형태다\r____6.6.3타입 변수를 인스턴스화할 수 없다\r____6.6.4매개변수화된 타입의 배열을 생성할 수 없다\r____6.6.5정적 컨텍스트에서는 클래스 타입 변수가 유효하지 않다\r____6.6.6메서드가 소거 후 충돌하지 않을 수도 있다\r____6.6.7예외와 제네릭 \r__6.7리플렉션과 제네릭\r____6.7.1Class[T] 클래스\r____6.7.2가상 머신에 있는 제네릭 타입 정보\r__연습문제\r 7장 컬렉션\r__7.1컬렉션 프레임워크 개요 \r__7.2반복자\r__7.3집합\r__7.4맵\r__7.5기타 컬렉션\r____7.5.1프로퍼티\r____7.5.2비트 집합\r____7.5.3열거 집합과 열거 맵\r____7.5.4스택, 큐, 덱, 우선순위 큐\r____7.5.5약한 해시 맵\r__7.6뷰\r____7.6.1작은 컬렉션 \r____7.6.2범위 \r____7.6.3수정 불가 뷰\r__연습문제\r 8장 스트림\r__8.1반복에서 스트림 연산으로 전환\r__8.2스트림 생성\r__8.3filter, map, flatMap 메서드\r__8.4서브스트림 추출과 스트림 결합\r__8.5기타 스트림 변환\r__8.6단순 리덕션\r__8.7옵션 타입\r____8.7.1옵션 값을 사용하는 방법\r____8.7.2옵션 값을 사용하지 않는 방법\r____8.7.3옵션 값 생성\r____8.7.4flatMap으로 옵션 값 함수 합성\r____8.7.5옵션 값을 스트림으로 변환\r__8.8결과 모으기\r__8.9맵으로 모으기\r__8.10그루핑과 파티셔닝\r__8.11다운스트림 컬렉터\r__8.12리덕션 연산\r__8.13기본 타입 스트림\r__8.14병렬 스트림\r__연습문제\r 9장 입출력 처리\r__9.1입출력 스트림, 리더와 라이터\r____9.1.1스트림 얻기\r____9.1.2바이트 읽기\r____9.1.3바이트 쓰기\r____9.1.4문자 인코딩\r____9.1.5텍스트 입력\r____9.1.6텍스트 출력\r____9.1.7바이너리 데이터 읽기 및 쓰기\r____9.1.8임의 접근 파일 \r____9.1.9메모리 맵 파일 \r____9.1.10파일 잠금 \r__9.2경로, 파일, 디렉터리\r____9.2.1경로\r____9.2.2파일과 디렉터리 생성\r____9.2.3파일 복사, 이동, 삭제\r____9.2.4디렉터리 엔트리 방문\r____9.2.5ZIP 파일 시스템\r__9.3HTTP 커넥션\r____9.3.1URLConnection과 HttpURLConnection 클래스\r____9.3.2HTTP 클라이언트 API\r__9.4정규 표현식\r____9.4.1정규 표현식 문법 \r____9.4.2일치 항목 한 개 찾기\r____9.4.3모든 일치 항목 찾기\r____9.4.4그룹\r____9.4.5구분자로 분리\r____9.4.6일치 항목 교체\r____9.4.7플래그\r__9.5직렬화\r____9.5.1Serializable 인터페이스\r____9.5.2일시적인 인스턴스 변수\r____9.5.3readObject와 writeObject 메서드\r____9.5.4readResolve와 writeReplace 메서드\r____9.5.5버전 관리\r__연습문제 \r 10장 병행 프로그래밍\r__10.1병행 태스크\r____10.1.1태스크 실행\r____10.1.2퓨처\r__10.2비동기 계산\r____10.2.1완료 가능한 퓨처 \r____10.2.2완료 가능한 퓨처 합성\r____10.2.3사용자 인터페이스 콜백에서 장시간 수행하는 태스크\r__10.3스레드 안전성 \r____10.3.1가시성 \r____10.3.2경쟁 조건\r____10.3.3안전한 병행성을 실현하는 전략\r____10.3.4불변 클래스\r__10.4병렬 알고리즘\r____10.4.1병렬 스트림\r____10.4.2병렬 배열 연산\r__10.5스레드 안전 자료 구조\r____10.5.1병행 해시 맵\r____10.5.2블로킹 큐 \r____10.5.3기타 스레드 안전 자료 구조\r__10.6원자적 카운터와 누산기\r__10.7잠금과 조건\r____10.7.1잠금\r____10.7.2synchronized 키워드\r____10.7.3조건 대기\r__10.8스레드\r____10.8.1스레드 시작\r____10.8.2스레드 인터럽션\r____10.8.3스레드 로컬 변수\r____10.8.4기타 스레드 프로퍼티\r__10.9프로세스\r____10.9.1프로세스 생성 \r____10.9.2프로세스 실행\r____10.9.3프로세스 핸들\r__연습문제\r 11장 애너테이션\r__11.1애너테이션 사용 \r____11.1.1애너테이션 요소 \r____11.1.2다중 애너테이션과 반복 애너테이션 \r____11.1.3선언에 애너테이션 붙이기 \r____11.1.4타입 사용에 애너테이션 붙이기\r____11.1.5수신자를 명확하게 지정\r__11.2애너테이션 정의\r__11.3표준 애너테이션\r____11.3.1컴파일용 애너테이션\r____11.3.2리소스 관리용 애너테이션\r____11.3.3메타애너테이션\r__11.4실행 시간에 애너테이션 처리\r__11.5소스 수준 애너테이션 처리\r____11.5.1애너테이션 처리기 \r____11.5.2언어 모델 API \r____11.5.3애너테이션으로 소스 코드 생성 \r__연습문제\r 12장 날짜와 시간 API\r__12.1타임 라인\r__12.2지역 날짜\r__12.3날짜 조정기\r__12.4지역 시간\r__12.5구역 시간\r__12.6포매팅과 파싱\r__12.7레거시 코드와 상호 작동 \r__연습문제\r 13장 국제화\r__13.1로케일\r____13.1.1로케일 지정\r____13.1.2기본 로케일\r____13.1.3표시 이름\r__13.2숫자 형식 \r__13.3통화\r__13.4날짜와 시간 포매팅 \r__13.5컬레이션과 정규화 \r__13.6메시지 포매팅\r__13.7리소스 번들 \r____13.7.1리소스 번들 구성\r____13.7.2번들 클래스 \r__13.8문자 인코딩\r__13.9프레퍼런스\r__연습문제\r 14장 컴파일링과 스크립팅\r__14.1컴파일러 API\r____14.1.1컴파일러 호출\r____14.1.2컴파일 태스크 실행\r____14.1.3메모리에서 소스 파일 읽기\r____14.1.4메모리에 바이트 코드 작성\r____14.1.5진단 정보 캡처 \r__14.2스크립팅 API\r____14.2.1스크립팅 엔진 얻기\r____14.2.2바인딩\r____14.2.3입력과 출력 재지정 \r____14.2.4스크립팅 함수와 메서드 호출\r____14.2.5스크립트 컴파일\r__14.3Nashorn 스크립팅 엔진\r____14.3.1명령줄에서 Nashorn 실행\r____14.3.2게터, 세터, 오버로드된 메서드 호출\r____14.3.3자바 객체 생성 \r____14.3.4자바스크립트와 자바의 문자열 \r____14.3.5숫자\r____14.3.6배열 다루기 \r____14.3.7리스트와 맵 \r____14.3.8람다 \r____14.3.9자바 클래스 확장과 자바 인터페이스 구현\r____14.3.10예외\r__14.4Nashorn을 이용한 셸 스크립팅\r____14.4.1셸 명령 실행\r____14.4.2문자열 인터폴레이션\r____14.4.3스크립트 입력\r__연습문제\r 15장 자바 플랫폼 모듈 시스템\r__15.1모듈 개념 잡기\r__15.2모듈 이름 짓기 \r__15.3모듈식 “Hello, World!” 프로그램\r__15.4모듈 요구\r__15.5패키지 익스포트\r__15.6모듈과 리플렉션을 이용한 접근\r__15.7모듈식 JAR\r__15.8자동 모듈과 이름 없는 모듈\r__15.9마이그레이션용 명령줄 플래그\r__15.10전이적 요구 사항과 정적 요구 사항\r__15.11한정된 익스포트와 개방\r__15.12서비스 로드 \r__15.13모듈 작업용 도구\r__연습문제\r 찾아보기\r         \n",
        "isbn10": "1160504393",
        "isbn13": "9791160504392"
    },
    {
        "title": "자바 병렬 프로그래밍 (멀티코어를 100% 활용하는)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=4683550",
        "image": "https://bookthumb-phinf.pstatic.net/cover/046/835/04683550.jpg?type=m1&udate=20161225",
        "author": "브라이언 게츠|더그 리",
        "price": "35000",
        "discount": "31500",
        "publisher": "에이콘출판",
        "pubdate": "20080730",
        "isbn": "8960770485 9788960770485",
        "description": "자바 병렬 처리 프로그램 작성 안내서!\n\n이 책은 자바 병렬 프로그래밍 참고 매뉴얼이다. 병렬 처리 관련 기능에 어떤 것이 있고, 어떻게 사용하는지에... 특히 자바 멀티스레드 프로그램에 대한 설계와 구현 노하우를 전수한다. \n\n자바 병렬 프로그래밍 API에 대한 훌륭한 가이드북이자, 스레드 관련 전문... ",
        "authorIntroContent": "\n브라이언 게츠\n저자진은 자바 커뮤니티 프로세스(Java Community Process)의 JSR-166 전문가 그룹(Expert Group)에 속해있으며, 다른 여러가지 JCP 전문가 그룹에서도 활동하고 있다. 브라이언 게츠(Brian Goetz)는 IT 분야에서 20여 년간 활동한 경험을 바탕으로 소프트웨어 컨설팅을 하고 있으며, 자바 개발과 관련해 75개 이상의 글을 기고한 바 있다. 팀 피얼스(Tim Peierls)는 BoxPop.biz 사이트와 음반 시장, 공연 분야 등에서 다양한 일을 하고 있는 그야말로 최신 멀티코어 프로세서의 모델이다. 조셉 보우비어(Joseph Bowbeer)는 Apollo 컴퓨터 시절부터 IT 분야 일을 시작했으며 병렬 처리 프로그래밍에 꿈을 갖고 있는 자바 ME 전문가이다. 데이빗 홈즈(David Holmes)는 『The Java Programming Language』의 공동 저자이며 썬마이크로시스템즈에서 일하고 있다. 조슈아 블로쉬(Joshua Bloch)는 구글의 최고 자바 아키텍트이며 『Effective Java』의 저자이면서 『Java Puzzlers』의 공동 저자이기도 하다. 더그 리(Doug Lea)는 『Concurrent Programming in Java』의 저자이며, SUNY Oswego(뉴욕 주립 대학 at Oswego)의 컴퓨터 공학 전공 교수이다.이 책을 쓰는 시점에도 일반적인 데스크탑 시스템에서조차 멀티코어 프로세서가 비싸지 않은 가격으로 대중화되어 가고 있다. 우연찮게 수많은 개발팀이 진행하는 프로젝트에서 스레드와 관련된 버그가 자꾸만 늘어나고 있다는 사실을 쉽게 알 수 있다. 넷빈즈(NetBeans) 개발 사이트에 최근에 올라온 글을 보면, 단 하나의 클래스를 놓고 스레드 관련 문제점을 수정하기 위해 14번이나 코드를 수정했다는 사실을 핵심 유지보수 담당자가 알아차린 사례도 있다. TheServerSide의 편집장을 지냈던 디온 앨메어는 (결국 스레드 관련 문제라고 결론이 나왔던 고통스러운 디버깅 작업을 끝낸 이후에) 대부분의 자바 프로그램이 \"어쩌다보니 실수로 동작하는\" 것일 뿐이며 스레드 관련 버그가 굉장히 자주 발생한다는 내용의 블로그 포스트를 올린 적도 있다.  스레드 관련 오류는 예측 가능한 상태로 스스로를 드러내는 법이 거의 없기 때문에 스레드를 사용하는 프로그램을 개발하고 테스트하고 디버그하는 일은 실제로 엄청나게 어려운 일이 될 수 있다. 게다가 문제점은 항상 최악의 시점, 즉 실제 사용 환경에서 부하가 많이 걸릴 때 주로 나타난다.  자바로 병렬 프로그램을 작성할 때 넘어야 할 가장 큰 산중의 하나는 플랫폼에서 제공하는 병렬 프로그래밍 기법과 개발자가 자신의 프로그램에서 병렬 프로그래밍 기법을 어떻게 사용하려 하는지 간에 큰 차이가 있다는 점이다. 자바 언어에서는 동기화나 조건부 대기와 같은 저수준의 도구(mechanism)를 제공하지만, 이런 도구를 사용해 애플리케이션 수준의 규칙이나 정책(policy)을 일관적으로 구현할 수 있어야 한다. 컴파일 잘 되고 실행도 잘 된다고 생각되는 프로그램은 쉽게 작성할 수 있겠지만, 이런 정책이 없다면 오류가 금새 나타나고야 만다. 병렬 프로그래밍에 대한 다른 훌륭한 책이 많지만 대부분 설계 수준의 정책이나 패턴에 대해서 다루기 보다는 저수준의 API에 집중하고 있어 이와 같은 정책의 중요성에 대처하는 면이 부족했다고 생각된다.  자바5.0은 고수준의 컴포넌트와 저수준의 도구를 모두 제공하기 때문에 초보자나 전문가 모두가 병렬 프로그램을 쉽게 작성할 수 있게 되었다는 점에서 큰 발전을 이뤘다고 볼 수 있다. 이런 기능을 실제로 구현하는데 참여했던 JCP 전문가 그룹에서 이 책을 쓰는데 많이 참여했다. 추가된 기능과 동작하는 구조를 설명하는 것뿐만 아니라 그 기반이 되는 디자인 패턴과 함께 플랫폼 라이브러리에 추가되는데 중요한 역할을 했던 예상 활용 시나리오도 함께 소개한다.  이 책을 읽는 독자는 여러 가지 설계상의 규칙을 이해하고, 또한 자바 클래스나 애플리케이션이 올바르게 높은 성능으로 동작하도록 작성하는 과정이 더 쉽고 재미있는 일이 되도록 만들고자 하는 목표가 있다.  『자바 병렬 프로그래밍』을 즐겁게 읽고 유익하게 활용하길 바란다.  브라이언 게츠(Brian Goetz)강철구아주대학교와 대학원에서 컴퓨터 비젼(영상 인식)을 전공했다. 검색 엔진, 웹, 분산 및 병렬, 소셜 네트워킹, 인공 지능 등의 키워드에 관심이 많다. 현재는 루씬을 이용한 검색 솔루션과 플랫폼을 개발하고 있으며, 관심사와 연결되는 새롭고 재미있는 비즈니스를 준비하고 있다. 에이콘출판사에서 출간한 『루씬 인 액션』(2005)과 『Ajax 인 액션』(2006)을 번역했다.학교를 졸업하고 처음 회사에 취직한 이후에 담당했던 개발 업무 가운데 상당 부분은 자바로 서버 프로그램을 작성하는 일이었습니다. 수십에서 수백 대에 이르는 클라이언트를 대상으로 24시간 동작하는 서버를 작성하는 업무는 꽤나 재미있었습니다. 몇 날 며칠을 고생해서 만든 서버 프로그램이 어딘가 누군가의 서버에 설치되어 24시간 동작하면서 제 할 일을 하고 있는 모습을 보면 건방지게도 자식이 제 할 일을 잘 할 때 부모가 받았을 느낌을 느낄 수 있었다고도 생각합니다.하지만 어려운 병렬 처리 이론이 아닌 멀티스레드를 사용해 프로그램하는 실습 위주의 교육을 받은 적이 없는지라, 단순하게 멀티스레드로만 동작하는 '자식같은' 프로그램이 알 수 없는 오류를 뿌리면서 곳곳에서 뻗어버리는 모습을 보면 참 안타까웠습니다 (오류라도 뿌리고 죽으면 그나마 다행입니다). 예전 버전의 자바는 운영체제마다 스레드의 동작 모습이 많이 달라서 어려운 점도 많았습니다. 운영체제마다 다른 스케줄링 문제를 해결하기 위해 전반적인 성능을 떨어뜨리면서 쓸모없는 I/O 구문을 추가하는 작업도 서슴치 않았습니다. 이후 스레드 풀을 적용해 서버의 안정성을 크게 높여주고, 스핀락(spin-lock)을 사용했던 부분에 wait-notify 구조를 적용해 CPU 부하를 크게 줄이기도 했습니다. 그러던 도중에 자바5.0이 발표되고, 병렬 프로그래밍을 위한 도구가 엄청나게 많이 제공되기 시작했습니다. 여기저기 찾아보며 만들고 안정화하느라 애를 먹었던 스레드 풀을 메소드 호출 한방으로 만들 수 있었으며, 훨씬 다양한 병렬 프로그래밍 기능을 더 안정적으로 제공받을 수 있게 되었죠.이제 어느 프로그램에나 멀티스레드 구조를 활용하는 일은 거의 기본이 되어갑니다. 제가 요즘 맡은 개발 업무에서도 완전히 서로 다른 분야의 동떨어진 목표를 향해 개발하지만, 어느 곳 하나 스레드를 활용하지 않는 프로젝트가 없습니다. 서버에서는 한정된 컴퓨터 자원을 최대한 활용해 가장 효율적으로 서비스를 제공하고자 하고, 클라이언트 PC에서는 동적인 인터페이스와 함께 많은 정보를 실시간으로 얻고자 하죠. 단순히 언어와 관련된 문제는 아닙니다. 자바이건 C#이건 PHP이건 간에 항상 멀티스레드 환경을 생각해야 합니다. 직접 스레드를 만들지 않더라도 외부의 어디선가 반드시 스레드를 사용하는 부분이 있게 마련입니다.이런 시점에 스레드를 활용한 병렬 처리에 대한 실제적인 예제와 패턴을 적용한 사용 예를 소개하는 너무나 반가운 책이 바로 『(멀티코어를 100% 활용하는) 자바 병렬 프로그래밍』입니다.병렬 프로그램을 작성할 때 보통은 자바5.0부터 추가된 java.util.concurrent 패키지에 대한 여러 문서를 보면서 대충 이해하고 사용하곤 하지만, 『자바 병렬 프로그래밍』은 이런 기능을 충분히 이해한 상태에서 활용하도록 도와주고 있습니다. 아주 간단한 클래스를 담당해 개발하고 있다고 해도, 해당 클래스가 큰 규모의 프로그램에서 기본적인 부분으로 널리 사용된다면 이 책에서 소개하는 기법을 적절히 적용해 전체 프로그램의 안전성을 확보하면서 성능을 크게 높일 수 있습니다. 그리고 병렬 프로그래밍에 대한 기초를 다지고 나면, 기존에 잊을만 하면 한 번씩 오류를 뱉어내면서 문제가 생기던 프로그램에 어떤 원인이 있을 수 있는지 쉽게 추적할 수도 있습니다. 『자바 병렬 프로그래밍』이 전문적인 이론서는 아니지만, 이론을 소홀하게 다루지도 않습니다. 또한 자바 언어를 기반으로 한다는 가정하에 쓰여진 책입니다만, 일반적인 병렬 처리 이론을 적용한 부분이 많으며 하드웨어나 시스템 구조와 관련된 부분도 적지 않기 때문에 다른 언어에도 쉽게 적용할 수 있는 내용이 많습니다. 한발 더 나아가 미래를 내다보는 개발자는 이미 단일 컴퓨터 내부에서의 병렬 처리를 넘어 여러 대의 컴퓨터에서 병렬로 동작하는 플랫폼을 찾고 있고, 이와 같은 분산 병렬 처리 플랫폼이 한창 인기를 얻는 요즘입니다. 이런 대규모의 병렬 처리 플랫폼도 중요하긴 하지만, 그 안에서는 항상 단일 프로세스 내부에서 동작하는 여러 스레드가 안정적으로 실행되도록 하는 병렬 처리 기법이 적용되어 있음을 잊어서는 안될 것입니다.재미있겠다고 생각은 했지만 내용이 어렵겠다고 지레 겁을 먹고 사양했던 번역 작업인데, 결국 이제야 끝마치게 되었습니다. 나름 서버 프로그래밍을 통해 경험을 많이 쌓았다고 생각했지만 책을 꼼꼼히 읽는 과정에서 배운 점이 더 많았습니다. 여러분 모두 이 책을 통해 자신있게 스레드를 널리 활용하고 결과물의 성능과 안전성을 높일 수 있게 되길 바랍니다.참고로, 이 책에서 '병렬'이라는 단어로 표시한 내용의 대부분은 'concurrent'라는 영어 단어를 의미합니다. concurrent의 뜻은 특히 컴퓨터 용어로 쓰일 때 '동시에 실행되는 코드의 흐름'이라고 풀어 쓸 수 있겠습니다. 원래 '병렬'은 일반적으로 'parallel'이라는 단어를 번역할 때 많이 사용합니다. 하지만 parallel과 concurrent는 약간의 뉘앙스 차이가 있음에도 불구하고 비슷한 의미로 볼 수 있기 때문에 '병렬'이라는 단어를 사용했다는 점을 알립니다.마지막으로 이 책을 번역할 수 있게 물심 양면으로 도움을 아끼지 않았던 아내 선영과 아들 강헌에게 고맙다는 인사를 전합니다. 가족은 항상 저를 든든하게 만드는 능력이 있습니다.\n",
        "bookIntroContent": "자바 병렬 처리 프로그램 작성 안내서!이 책은 자바 병렬 프로그래밍 참고 매뉴얼이다. 병렬 처리 관련 기능에 어떤 것이 있고, 어떻게 사용하는지에 대한 방법뿐 아니라, 그 내부에 숨어 있는 디자인 패턴과 그 패턴을 사용한 원론적인 이유도 살펴본다. 특히 자바 멀티스레드 프로그램에 대한 설계와 구현 노하우를 전수한다. 자바 병렬 프로그래밍 API에 대한 훌륭한 가이드북이자, 스레드 관련 전문 지식을 빼놓지 않고 설명한 점이 돋보인다. 본문은 병렬 처리와 스레드 안전성에 대한 기초, 스레드 안전한 클래스를 작성하는 기법, JAVA.UTIL.CONCURRENT 패키지에 들어 있는 라이브러리 클래스 활용법, 성능 최적화를 위해 취해야 할 방법, 병렬 처리 프로그램 테스트 방법을 설명한다.단일 연산 변수, 넌블로킹(NON-BLOCKING) 알고리즘, 자바 메모리 모델과 같은 고급 주제도 다룬다. 멀쩡한 코드에서 왜 오류가 발생하는지, 오류를 어떻게 해결하고 성능을 높일 수 있는지 등을 속 시원히 파헤친다. 또한 최신 하드웨어 또는 미래의 시스템에서 안전하면서 확장성 높게 동작할 수 있는 자바 프로그램 작성에 필요한 개념과 기법도 소개한다.",
        "tableOfContentsContent": "\n1장들어가며 \r 1부기본 원리\r2장스레드 안전성\r3장객체 공유\r4장객체 구성\r5장프로그래밍 단위\r 2부병렬 프로그램 구조 잡기\r6장작업 실행\r7장중단 및 종료\r8장스레드 풀 활용\r9장GUI 애플리케이션\r 3부가용성, 성능, 테스트\r10장가용성을 최대로 높이기\r11장성능, 확장성\r12장병렬 프로그램 테스트\r 4부고급 주제\r13장명시적인 락\r14장전용 동기화 기능 구현 \r15장단일 연산 변수와 넌블로킹 동기화\r16장자바 메모리 모델 \r 부록 A병렬 프로그램을 위한 어노테이션\n",
        "isbn10": "8960770485",
        "isbn13": "9788960770485"
    },
    {
        "title": "JavaScript가 보이는 그림책",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13398069",
        "image": "https://bookthumb-phinf.pstatic.net/cover/133/980/13398069.jpg?type=m1&udate=20180306",
        "author": "ANK Co. Ltd.",
        "price": "17000",
        "discount": "15300",
        "publisher": "성안당",
        "pubdate": "20180228",
        "isbn": "8931555334 9788931555332",
        "description": "브라우저나 브라우저 안의 문서를 조작하기 위해 만들어진 언어인 자바스크립트는 웹의 수요가... 이런 자바스크립트를 누구나 쉽게 이해하고 공부할 수 있도록 그림책 시리즈로 제2판인 개정증보판이 새롭게 선보였다. 웹페이지를 열면 툭 튀어나오는 팝업 창, 동적인 웹페이지 조작은 모두 자바스... ",
        "authorIntroContent": "\nANK Co. Ltd.\n저자 : ANK CO., LTD.소프트웨어 개발에서 웹사이트 구축, 디자인, 서적 집필까지 폭넓게 일하는 회사다. 그림책 시리즈로 〈C가 보이는 그림책〉, 〈C++가 보이는 그림책〉, 〈ANDROID가 보이는 그림책〉 외에, 사전 시리즈로 〈홈페이지 사전〉, 〈HTML 태그 사전〉, 〈CSS 사전〉, 〈JAVASCRIPT 사전〉 등 다수의 서적을 발행했다.역자 : 이영란테크니컬 라이터 및 컴퓨터 도서 전문 번역자이다. 번역 도서로 〈성공과 실패를 결정하는 1%의 WINDOWS 구조와 원리〉, 〈마스터링 VISUAL C#.NET〉, 〈VISUAL BASIC.NET〉 외 다수가 있다.역자 : 김성훈컴퓨터 분야 전문 번역가로, 번역서로는 〈프로그래밍이 보이는 그림책〉, 〈C가 보이는 그림책〉, 〈C 기초 프로그래밍〉, 〈UML 모델링의 본질〉, 〈OBJECTIVE-C 프로그래밍〉, 〈게임 프로그래밍의 정석〉, 〈구글을 지탱하는 기술〉 등이 있다.\n",
        "bookIntroContent": "브라우저나 브라우저 안의 문서를 조작하기 위해 만들어진 언어인 자바스크립트는 웹의 수요가 보편화됨에 따라 웹마스터나 웹디자이너뿐 아니라 그 누구라도 한 번쯤은 공부해야 할 프로그래밍 언어가 되고 있다. 개인 블로거, 카페 운영자, 개인 홈페이지 관리자라도 웹 언어를 이해하고 못하고의 차이가 크기 때문이다. 이런 자바스크립트를 누구나 쉽게 이해하고 공부할 수 있도록 그림책 시리즈로 제2판인 개정증보판이 새롭게 선보였다. 웹페이지를 열면 툭 튀어나오는 팝업 창, 동적인 웹페이지 조작은 모두 자바스크립트를 이해함으로써 가능하다.  이 책에 따르면 자바스크립트(JAVASCRIPT)는 1995년 넷스케이프 커뮤니케이션즈가 ‘라이브스크립트(LIVESCRIPT)’라는 이름으로 개발하여 웹 브라우저인 넷스케이프 내비게이터 2.0에 탑재하면서 시작되었고 그 후 인터넷 익스플로러에도 JSCRIPT라는 동일한 기능이 탑재되어 빠른 속도로 퍼져갔다. 1997년에는 정보통신의 표준화 단체인 ECMA(유럽 전자계산기공업회)가 자바스크립트의 사양으로 ECMASCRIPT를 규정했는데 이것들을 통틀어 넓은 의미에서 ‘자바스크립트’라고도 한다. C나 자바같은 컴파일러형 언어가 아닌 인터프리터형 언어로 작성한 소스를 실시간으로 컴퓨터가 결과를 표시해주는 자바스크립트는 HTML에 포함되는 형태로 정의하여 브라우저 측에서 실행되어 결과를 표시한다.  이 책은 월드와이드웹의 개념부터 기술, 자바스크립트 언어의 새로운 개념들에 대해 그림책 시리즈 특유의 일러스트를 통해 그림으로 쉽게 해설한다. 본문은 그림책 특유의 2페이지 단위 펼침 구성으로 매 장을 9개의 넘어야할 관문으로 구성, 장 처음에 꼭 알아야할 키포인트로 시작하여 본문에서는 실습 예제와 결과 화면, 예제 프로그램, 도전! 자바스크립트 문제(객관식 구성, 번역판에서 특별 편집), 자바스크립트 상식, 부록 등으로 구성되어 있다. 특히 부록에서는 색 속성, 래퍼 오프벡트, 함수, 예약어 일람, 소스 코드 예제, 무료 개발 도구인 XAMPP를 설치할 수 있도록 친절히 설명한다.   이 책의 경우 본문에 나온 소스는 ㈜성안당 홈페이지(WWW.CYBER.CO.KR)의 자료실 > 자료실에서, 정오표는 성안당 자료실 > 정오표에서 찾아볼 수 있다. 최신 자바스크립트 입문서를 찾는 독자들에게 가뭄에 단비 같은 반가운 소식이 될 것이다. ● 자바스크립트로 웹 페이지를 편리하고 멋지게 만들고 보고 싶은 사람을 위한 책입니다! ● 이 책은 HTML/CSS를 비롯해 자바스크립트의 기초부터 객체지향 사고방식까지 일러스트로 설명해 어려운 개념도 직관적으로 파악할 수 있어 쉽게 이해할 수 있습니다! ● 자바스크립트의 문을 활짝 열고 한 발 앞서 가는 웹 디자이너의 길을 걸어봅시다!",
        "tableOfContentsContent": "\n제0장 JavaScript를 시작하기 전에\r/ JavaScript란 16/ WWW의 구조 18\r/ WWW를 지지하는 기술 - HTML과 CSS 20 / WWW를 지지하는 기술 - JavaScript 24\r/ JavaScript의 종류 - Flash, JavaApplet 27/ 이 책에서 사용할 JavaScript 환경 구축하기 27\r/ JavaScript 작성과 실행하기 28 / JavaScript 오류 확인과 디버그 29\r  제1장 HTML\rkey point/ 먼저 홈페이지의 기본부터 32key point/스타일 시트를 사용해 보자 33\r/ HTML의 기본 34/ 여러 가지 HTML 태그 (1) 36\r/ 여러 가지 HTML 태그 (2) 38/ 표 40\r/ 폼 42/ 입력한 데이터 받기 44\r/ CSS의 기초 (1) 46/ CSS의 기초 (2) 48\r/ 문자 스타일 50/ 태그 스타일 52\r/ 특정 요소 스타일 54/ 특수 스타일 56\rexercise/도전! JavaScript 58JavaScript 상식/메타 정보 60\r 제2장 JavaScript 맛보기 \rkey point/문자를 표시해 봅시다 62key point/이벤트 핸들러가 뭐지? 63\rkey point/오브젝트, 프로퍼티, 메서드 63\r/ Hello World! 64/ JavaScript 호출 방법 66\r/ 브라우저 오브젝트 68/ 프로퍼티 70\r/ 메서드 72/ 파일 불러오기 74\rexercise/도전! JavaScript 76JavaScript 상식/JavaScript를 기술하는 장소 78\r 제3장 변수와 연산자\rkey point/데이터를 저장하는 상자 80key point/컴퓨터가 계산기 대신으로! 81\r/ 변수 82/ 여러 가지 데이터형 84\r/ 문자열형 86/ 형 변환하기 88\r/ 계산 연산자 90/ 조건식에서 사용하는 연산자 92\r/ 논리 연산자 94/ 연산자 우선순위 96\rexercise/도전! JavaScript 98JavaScript 상식/NaN과 Infinity 100\r 제4장 제어문\rkey point/프로그램의 흐름을 바꾸자 102 poin\r/ if문 (1) 104/ if문 (2) 106\r/ for문 108/ while문 110\r/ 루프 중단하기 112/ switch문 114\rexercise/도전! JavaScript 116JavaScript 상식/break, continue 라벨 지정하기 118\r 제5장 함수\rkey point/마법의 블랙박스 120\r/ 실제 프로그램을 향한 첫걸음 121/ 함수의 정의 122\r/ 함수의 호출 124/ 변수의 범위 126\r/ 익명 함수 128예제 프로그램/가위바위보 프로그램 130\rexercise/도전! JavaScript 132JavaScript 상식/함수의 중첩 134\r 제6장 일반 오브젝트\rkey point/JavaScript의 오브젝트 136 ey point\r/ 배열 138/ 배열의 응용 (1) 140\r/ 배열의 응용 (2) 142/ 문자열의 응용 144\r/ 날짜 146/ 정규 표현 (1) 148\r/ 정규 표현 (2) 150예제 프로그램/특정 문자열의 색을 지정하기 152\rexercise/도전! JavaScript 154JavaScript 상식/for~in문 156\rkey point\r제7장 브라우저 오브젝트\rkey point/브라우저를 조작해 보자 158key point/DOM이 뭐지? 159\r/ Window 오브젝트 160/ Document 오브젝트 162\r/ Form 오브젝트 164/ Element 오브젝트 (1), (2) 166, 168\r/ Location 오브젝트 170/ Event 오브젝트 172\r/ Style 오브젝트 174/ 기타 오브젝트 (1), (2) 176, 178\r/ DOM (1), (2), (3) 180, 182, 184/ 윈도우 조작 186\r/ 타이머 188/ 쿠키 190\r/ 고급 이벤트 처리 192예제 프로그램/(1) 크기 등을 지정하여 새로운 창 열기194\r예제 프로그램/(2)DOM 196예제 프로그램/(3) 동적 이벤트 만들기 198\rexercise/도전! JavaScript 200JavaScript 상식/with문 202\r 제8장 JavaScript의 객체지향 \rkey point/오브젝트란 무었일까? 204key point/프로토타입을 이해하자 205\r/오브젝트란 206/사용자 정의 오브젝트 208\r/프로퍼티와 메서드 이용 210/프로토타입 212\r/기존 오브젝트 변경 214/상속 216\r예제 프로그램/exercise/도전 C++ 214JavaScript 상식/도전! JavaScript 220\rJavaScript 상식/난독화 206\rkey point\r 제9장 [부록] 좀더 힘내 볼까요?\r/ 수치와 단위 224/폼 목록 226\r/색 속성 228/ 이벤트 핸들러 229\r/ 수학 함수 230/ 래퍼 오브젝트 232\r/ Ajax 233/ 예약어 일람 243\r/ JavaScript의 라이브러리 244/ XAMPP 설치 245\r 용어 설명 모음 252\r찾아보기 254\r \n",
        "isbn10": "8931555334",
        "isbn13": "9788931555332"
    },
    {
        "title": "모던 자바스크립트 (예제로 배우는 ECMAScript 6 핵심 기능)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12723816",
        "image": "https://bookthumb-phinf.pstatic.net/cover/127/238/12723816.jpg?type=m1&udate=20171115",
        "author": "니콜라스 자카스",
        "price": "28000",
        "discount": "25200",
        "publisher": "인사이트",
        "pubdate": "20171108",
        "isbn": "8966262112 9788966262113",
        "description": "ECMASCRIPT 6를 제대로 이해하는 가이드ECMASCRIPT 6에서는 자바스크립트 역사상 가장 핵심적인 업데이트가 이루어졌다. 이미 자바스크립트를 잘 알고... 자바스크립트 구루이자 노련한 저자인 니콜라스 자카스는 이 책을 통해 ECMASCRIPT 6가 자바스크립트에 제공하는 개체 유형, 구문 및 기타 흥미로운 변경... ",
        "authorIntroContent": "\n니콜라스 자카스\n저자 : 니콜라스 자카스저자 니콜라스 자카스(NICHOLAS C. ZAKAS)는 2000년부터 주로 프론트엔드 영역에서 웹 애플레케이션을 개발해왔고, 세계에서 가장 큰 웹 사이트 중 하나인 마이 야후!와 야후! 홈페이지, 대기업 인트라넷 애플리케이션을 만들었다. 야후!에서는 선임 기술자로 일하면서 세계에서 가장 방문자 수가 많은 웹 사이트들의 프론트엔드 개발 가이드와 표준을 제시했다. 유명한 강연자이기도 하며 정기적으로 여러 회사와 각종 컨퍼런스, 회합 등에 참여해 프론트엔드 개발의 모범 사례와 신기술에 대해 발표하고 있다. 또한 『프론트엔드 개발자를 위한 자바스크립트 프로그래밍』(인사이트), 『객체지향 자바스크립트의 원리』(비제이퍼블릭), 『읽기 좋은 자바스크립트 코딩 기법』(한빛미디어), 『자바스크립트 성능 최적화』(한빛미디어) 같은 유명한 책의 저자이기도 하며, 정기적으로 블로그 HTTP://WWW.NCZONLINE.NET에 글을 남긴다. 트위터 주소는 @SLICKNET이다.역자 : 김두형역자 김두형은 아이폰이 국내에 출시되던 해 겨울, 다음에 입사하여 8년째 웹 개발을 하고 있다. 지금은 카카오에서 프론트엔드 개발을 하고 있으며, 좋은 동료들과 함께 이용자들의 일상을 재미있고 편리하게 만들기 위해 고군분투 중이다.역자 : 정재훈역자 정재훈은 숭실대 컴퓨터 학부에서 학사와 석사 졸업후 ACCESS 의 브라우저 팀에서 개발자의 삶을 시작하였다. 현재는 위메프에서 웹 개발을 하고 있으며, 프론트와 백엔드를 둘 다 잘하는 개발자가 되기 위해 노력 중이다.\n",
        "bookIntroContent": "ECMASCRIPT 6를 제대로 이해하는 가이드ECMASCRIPT 6에서는 자바스크립트 역사상 가장 핵심적인 업데이트가 이루어졌다. 이미 자바스크립트를 잘 알고 사용하고 있더라도 많은 부분을 다시 공부해야 할 만큼 개선되었다. ECMASCRIPT 6의 기능은 새로운 객체와 방식 그리고 기존 객체에 추가된 새로운 메서드와 변경된 문법에 이르기까지 매우 넓은 영역을 다룬다. 이 책은 ECMASCRIPT 6의 주요한 변경사항을 다룬다. 물론 이전 버전을 사용해도 문제는 없지만 웹 개발자라면 최신 버전의 철학과 개념을 이해하고 이를 잘 활용해야 할 것이다. 자바스크립트 구루이자 노련한 저자인 니콜라스 자카스는 이 책을 통해 ECMASCRIPT 6가 자바스크립트에 제공하는 개체 유형, 구문 및 기타 흥미로운 변경 사항에 대한 완벽한 가이드를 준다. 모든 장에는 자바스크립트 환경에서 작동하는 예제 코드가 들어 있으므로 새로운 기능을 바로 확인해 볼 수 있다.",
        "tableOfContentsContent": "\n1장 블록 바인딩 \r1.1 var 선언과 호이스팅 \r1.2 블록-레벨 선언 \r1.3 반복문 안에서의 블록 바인딩 \r1.4 전역 블록 바인딩 \r1.5 블록 바인딩을 위한 모범 사례 \r1.6 요약 \r 2장 문자열과 정규 표현식 \r2.1 더 나은 유니코드 지원 \r2.2 문자열의 다른 변경 사항 \r2.3 정규 표현식의 변경사항 \r2.4 템플릿 리터럴 \r2.5 요약 \r 3장 함수 \r3.1 함수의 매개변수 기본값 \r3.2 이름을 명시하지 않은 매개변수 다루기 \r3.3 Function 생성자의 확장된 역할 \r3.4 전개 연산자 \r3.5 name 프로퍼티 \r3.6 함수의 두 가지 용도를 명확히 하기 \r3.7 블록 레벨 함수 \r3.8 화살표 함수 \r3.9 꼬리 호출 최적화 \r3.10 요약 \r 4장 확장된 객체 기능 \r4.1 객체 카테고리 \r4.2 객체 리터럴의 문법 확장 \r4.3 새로운 메서드 \r4.4 객체 리터럴 프로퍼티의 중복 \r4.5 객체 내 프로퍼티 열거 순서 \r4.6 프로토타입 개선 \r4.7 공식적인 메서드 정의\r4.8 요약 \r 5장 구조분해를 이용한 보다 쉬운 데이터 접근 \r5.1 구조분해는 왜 유용한가 \r5.2 객체 구조분해 \r5.3 배열 구조분해 \r5.4 혼합된 구조분해 \r5.5 구조분해된 매개변수\r5.6 요약 \r 6장 심벌과 심벌 프로퍼티 \r6.1 심벌 만들기 \r6.2 심벌 사용하기 \r6.3 심벌 공유하기 \r6.4 심벌 타입 변환 \r6.5 심벌 프로퍼티 탐색 \r6.6 상용 심벌과 내부 연산자 노출하기 \r6.7 요약 \r 7장 Set과 Map \r7.1 ECMAScript 5에서의 Set과 Map \r7.2 대안의 문제점 \r7.3 ECMAScript 6의 Set \r7.4 ECMAScript 6의 Map \r7.5 요약 \r 8장 이터레이터와 제네레이터 \r8.1 반복문의 문제점 \r8.2 이터레이터란? \r8.3 제네레이터란? \r8.4 이터러블과 for-of문 \r8.5 내장 이터레이터\r8.6 전개 연산자와 배열이 아닌 이터러블 \r8.7 이터레이터 고급 기능 \r8.8 비동기 작업 수행 \r8.9 요약 \r 9장 자바스크립트 클래스 소개 \r9.1 ECMAScript 5의 유사 클래스 구조 \r9.2 클래스 선언 \r9.3 클래스 표현식 \r9.4 일급 시민 클래스 \r9.5 접근자 프로퍼티 \r9.6 계산된 멤버 이름 \r9.7 제네레이터 메서드 \r9.8 정적 멤버 \r9.9 파생 클래스와 상속 \r9.10 클래스 생성자에서 new.target 사용하기 \r9.11 요약 \r 10장 배열의 기능 개선 \r10.1 배열 만들기 \r10.2 배열의 새로운 메서드 \r10.3 타입 배열 \r10.4 타입 배열과 일반 배열의 유사점 \r10.5 타입 배열과 일반 배열의 차이점 \r10.6 요약 \r 11장 프로미스와 비동기 프로그래밍 \r11.1 비동기 프로그래밍 배경 지식 \r11.2 프로미스 기초 \r11.3 전역 프로미스 실패 처리 \r11.4 프로미스 연결하기 \r11.5 여러 개의 프로미스에 응답하기 \r11.6 프로미스 상속하기 \r11.7 프로미스 기반 비동기 작업 실행 \r11.8 요약 \r 12장 프락시와 리플렉션 API \r12.1 배열의 문제점 \r12.2 프락시와 리플렉션 도입하기 \r12.3 간단한 프락시 만들기 \r12.4 set 트랩을 사용하여 프로퍼티 유효성 검사하기 \r12.5 get 트랩을 사용하여 객체의 형태 유효성 검사하기 \r12.6 has 트랩을 사용하여 프로퍼티 존재를 숨기기\r12.7 deleteProperty 트랩으로 프로퍼티 제거 방지하기\r12.8 프로토타입 프락시 트랩 \r12.9 객체 확장 트랩 \r12.10 프로퍼티 디스크립터 트랩 \r12.11 ownKeys 트랩 \r12.12 apply와 construct 트랩을 사용한 함수 프락시 \r12.13 취소 가능한 프락시 \r12.14 배열 문제 해결하기 \r12.15 프로토타입으로 프락시 사용하기 \r12.16 요약 \r 13장 모듈로 캡슐화하기 \r13.1 모듈이란? \r13.2 익스포트 기본 \r13.3 임포트 기본 \r13.4 익스포트와 임포트에 새로운 이름 사용하기 \r13.5 모듈의 기본 값\r13.6 바인딩을 다시 익스포트하기 \r13.7 바인딩 없이 임포트하기 \r13.8 모듈 로드하기 \r13.9 요약 \r 부록 A ECMAScript 6의 여타 소소한 변경 사항 \rA.1 정수 다루기 \rA.2 새로운 수학 메서드 \rA.3 유니코드 식별자 \rA.4 __proto__ 프로퍼티 공식화 \r 부록 B ECMAScript 7 (2016) 이해하기 \rB.1 지수 연산자 \rB.2 Array.prototype.includes() 메서드 \rB.3 함수 스코프 Strict 모드의 변경 사항\r\n",
        "isbn10": "8966262112",
        "isbn13": "9788966262113"
    },
    {
        "title": "자바스크립트 & 제이쿼리 (인터랙티브 프론트엔드 웹 개발 교과서)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=8890588",
        "image": "https://bookthumb-phinf.pstatic.net/cover/088/905/08890588.jpg?type=m1&udate=20190706",
        "author": "존 두켓",
        "price": "36000",
        "discount": "32400",
        "publisher": "제이펍",
        "pubdate": "20150331",
        "isbn": "118589019X 9791185890197",
        "description": "이 책은 자바스크립트 코드를 읽고 쓰는 방법뿐 아니라 간결하면서도 시각적인 방법으로 컴퓨터 프로그래밍의 기초에 대해서도 가르쳐줍니다. 필요한... 이 책은 유명 웹사이트에서 자바스크립트 및 JQUERY가 어떻게 사용되는지를 컴퓨터 프로그래밍 기초와 더불어 설명함으로써 웹사이트를 더욱 역동적이고... ",
        "authorIntroContent": "\n존 두켓\n저자 : 존 두켓저자 존 두켓(JON DUCKETT)은 15년에 걸쳐 작은 스타트업부터 글로벌 브랜드에 이르기까지 다양한 웹사이트를 디자인하고 개발했다. 베스트셀러인 《HTML & CSS: 웹사이트 개발과 디자인 기초》의 저자이기도 하다.역자 : 장현희역자 장현희는 16년째 웹 애플리케이션 설계 및 개발에 대한 경험을 쌓아가고 있으며, 현재 호주 시드니에 있는 ROKT사에서 시니어 개발자로 근무 중이다. 2006년부터 5년간 마이크로소프트 ASP/ASP.NET MVP를 수상했으며, 17권의 IT 관련 서적을 집필/번역한 저자이자 역자이기도 하다. 끊임없는 학습과 공유야말로 개발자 삶의 최대 가치이자 기본 소양이라고 믿고 이를 실천하기 위해 다양한 노력과 활동을 지속하고 있다. 장차 웹 애플리케이션 개발자이자 아키텍트로서 성공한 글로벌 웹 서비스를 반드시 구축해보는 것과 IT 분야의 여러 후배에게 크고 작은 도움을 주는 좋은 선배로 기억되는 것이 삶의 목표다.\n",
        "bookIntroContent": "이 책은 자바스크립트 코드를 읽고 쓰는 방법뿐 아니라 간결하면서도 시각적인 방법으로 컴퓨터 프로그래밍의 기초에 대해서도 가르쳐줍니다. 필요한 것은 HTML과 CSS에 대한 이해뿐입니다. 이 책은 유명 웹사이트에서 자바스크립트 및 JQUERY가 어떻게 사용되는지를 컴퓨터 프로그래밍 기초와 더불어 설명함으로써 웹사이트를 더욱 역동적이고, 매력적이며, 유용하게 만드는 방법을 가르쳐줍니다. 머지않아 여러분은 프로그래머처럼 생각하고 코드를 작성하게 될 것입니다.",
        "tableOfContentsContent": "\n0장 | 소개 1\r 1장 | 프로그래밍의 기초 11\r 2장 | 자바스크립트의 기본 명령어 53\r 3장 | 함수, 메서드, 객체 85\r 4장 | 의사결정과 루프 145\r 5장 | 문서 객체 모델 183\r 6장 | 이벤트 243\r 7장 | jQuery 293\r 8장 | Ajax와 JSON 367\r 9장 | API 409\r 10장 | 오류 처리와 디버깅 449\r 11장 | 콘텐츠 패널 487\r 12장 | 필터링, 검색, 정렬 527\r 13장 | 폼 확장 및 유효성 검사 567\r 찾아보기 623\n",
        "isbn10": "118589019X",
        "isbn13": "9791185890197"
    },
    {
        "title": "자바로 시작하는 라즈베리 파이 (BlueJ로 손쉬운 프로그래밍!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14796623",
        "image": "https://bookthumb-phinf.pstatic.net/cover/147/966/14796623.jpg?type=m1&udate=20190423",
        "author": "에사키 노리히데|이시이 모루나|우치무라 칸지",
        "price": "25000",
        "discount": "22500",
        "publisher": "영진닷컴",
        "pubdate": "20190419",
        "isbn": "8931460163 9788931460162",
        "description": "자바로 라즈베리 파이를 프로그래밍하다!&#x0D;&#x0D;『자바로 시작하는 라즈베리 파이』는 대중적이고도 가장 우수한 객체지향 프로그래밍 언어인 자바로 라즈베리 파이를 프로그래밍하는 도서이다. 라즈베리 파이를, 자바 프로그래밍을, 전자회로 공작을 시작하고 싶다면 바로 이 책이다. 자세한... ",
        "authorIntroContent": "\n에사키 노리히데\n저자 : 에사키 노리히데제1장, 제5장 5.1~5.5 집필전기계 기술자 출신으로 아두이노와 라즈베리 파이, micro:bit 등 마이크로보드의 엄청난 발전 속도에 농락당하고 있다. “모든 귀여움을 인터넷에”를 목표로 하는, IoK(Internet of Kawail)를 실현하기 위해 밤낮으로 분투하고 있다. (일본어로 Kawail는 귀엽다는 뜻입니다)저자 : 이시이 모루나제2장 집필임베디드계, 아두이노 등의 강사로 “귀여움”과 “간식”을 담당하고 있으며 [귀여운 전자공작]이라는 사이트를 운영하고 있다.[귀여운 전자공작] : http://kawaii-ele.com저자 : 우치무라 칸지제3장, 제4장, 제5장 5.6 집필격투기와 축구를 특별히 사랑하는 엔지니어로, 매번 수많은 빅데이터 기술들에 짓눌릴 위기에 처하지만, 필사적으로 방어하며 씨름하고 있다.역자 : 주한길컴퓨터과학을 전공한 웹개발자. 오래전 우연한 게기로 라즈베리 파이와 아두이노를 취미로 삼게 되었다. 현재 라즈베리 파이 네 마리, 아두이노 두 마리를 집에 데리고서 이런 저런 실험을 하며 블로그와 유튜브에 관련 자료를 올리고 있다.[블로그] : https://agapeuni.blog.me[유튜브] : https://goo.gl/XRfoMB\n",
        "bookIntroContent": "국내 유일! 자바로 라즈베리 파이를 프로그래밍하다!  『자바로 시작하는 라즈베리 파이』는 대중적이고도 가장 우수한 객체지향 프로그래밍 언어인 자바로 라즈베리 파이를 프로그래밍하는 도서이다. 라즈베리 파이를, 자바 프로그래밍을, 전자회로 공작을 시작하고 싶다면 바로 이 책이다. 자세한 설명과 이미지로 쉽게 따라할 수 있다. 이 책으로 전자회로 공작을 하여 라즈베리 파이로 LED를 켜거나, 스위치를 통해 작동을 on/off하는 등의 프로그래밍 방법을 배울 수 있다. 더 심화된 내용인 ‘구슬 굴리기 게임 만들기’와 ‘Web 애플리케이션 - 온도 센서 만들기’까지 배워볼 수 있다. 이 책은 다양한 라즈베리 파이의 모델들을 소개하고 있지만, 최신 모델인 ‘Raspberry Pi 3 Model B+’를 기반으로 제작되었다.",
        "tableOfContentsContent": "\n제1장: 라즈베리 파이+Java+전자회로 공작으로 컴퓨터와 친해지자 1.1 라즈베리 파이와 Java와 BlueJ와 전자회로 공작\r1.2 라즈베리 파이\r1.3 라즈베리 파이를 구동하는데 필요한 것\r제2장: 라즈비안의 설치 및 사용법 2.1 라즈베리 파이에서 사용할 수 있는 운영체제\r2.2 라즈비안 설치 방법\r2.3 NOOBS/NOOBS Lite를 사용하여 라즈비안 설치\r2.4 라즈비안만 내려받아 설치\r2.5 라즈비안의 기본 설정\r2.6 microSD 카드 포맷\r2.7 라즈비안의 기본적인 사용법\r제3장: BlueJ와 Java 사용법 3.1 Java\r3.2 객체지향\r3.3 BlueJ를 사용해 보자\r3.4 BlueJ의 편리한 기능을 사용해 보자\r3.5 BlueJ에서 단위 테스트를 해보자\r제4장 Java 복습 4.1 Java 문법의 기초\r4.2 API 사용법\r4.3 GUI 툴킷을 사용해 보자 - Swing의 기초\r4.4 Swing의 응용\r4.5 Java 애플릿을 사용해 보자\r4.6 서버 사이드 Java\r제5장: Java와 전자회로 공작 5.1 전자 공작의 기초\r5.2 준비물\r5.3 LED와 스위치\r5.4 IC 연결하기\r5.5 구슬 굴리기 게임을 만들자\r5.6 Web 애플리케이션을 만들어 보자 - 온도 센서 만들기\r부록 A. Nano 에디터\rB. Pi4J 유틸리티\rC. 라즈비안 추가기능\r 인덱스\n",
        "isbn10": "8931460163",
        "isbn13": "9788931460162"
    },
    {
        "title": "자바 1학년 (Java)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14436360",
        "image": "https://bookthumb-phinf.pstatic.net/cover/144/363/14436360.jpg?type=m1&udate=20190207",
        "author": "모리 요시나오",
        "price": "17000",
        "discount": "15300",
        "publisher": "성안당",
        "pubdate": "20190109",
        "isbn": "8931555695 9788931555691",
        "description": "▶ 이 책은 JAVA를 다룬 이론서입니다. JAVA의 기초적이고 전반적인 내용을 학습할 수 있습니다.",
        "authorIntroContent": "\n모리 요시나오\n저자 : 모리 요시나오아이폰 앱이나 웹 콘텐츠 제작, 집필 활동, 간사이학원 대학 비상근 강사 등 프로그래밍과 관련된 폭넓은 활동을 한다. 최근 저서로는  (쇼에이샤), (마이나비 출판), (마이나비 출판), (SB 크리에이티브) 등이 있다.역자 : 김성훈주로 IT 관련 서적을 번역하는 번역가로, 주요 번역서는 다음과 같다. , , , , , , , , , , , , ,  외 다수가 있다.\n",
        "bookIntroContent": "▶ 이 책은 JAVA를 다룬 이론서입니다. JAVA의 기초적이고 전반적인 내용을 학습할 수 있습니다.",
        "tableOfContentsContent": "\n예제 프로그램 시험 환경과 예제 파일에 대해 \r시작하며 \r옮긴이의 말 \r이 책의 대상 독자와 ‘1학년’ 시리즈에 대해 \r이 책은 이렇게 구성되어 있어요 \r 1장 Java와의 첫만남\r1 Java가 뭘까?\rJava는 어떤 언어일까?\rJava의 세 가지 특징\rJava 개발에 필요한 것은?\r2 paiza.IO에서 간단히 Java 체험하기\rpaiza.IO가 뭐지?\rpaiza.IO에 등록하자\r‘안녕하세요’를 표시해 보자\rSystem.out.println( );이 뭘까?\r 2장 데이터와 변수\r3 계산을 해 보자\r연산자로 계산하기\r정수와 실수 계산하기\r나머지 구하기\r4 데이터의 종류\r정수형\r부동소수점형\r부울형\r5 데이터는 ‘상자’에 넣어 사용한다\r변수를 만드는 방법(선언)\r변수 사용법 1 (대입)\r변수 사용법 2 (참조)\ra = a + 1 ; ?\r복합 대입 연산자\r+ +와 - - \r6 문자열 조작을 배워보자\r문자열형\r문자열을 연결한다\r문자의 개수를 조사한다\r문자열의 일부를 추출한다\r문자열의 일부를 치환한다\r문자열과 수치를 연결한다\r7 랜덤한 값을 만든다\rRandom을 이용한다\r8 데이터형을 변환한다\r확대 변환\r캐스트 변환\r수치와 문자열의 변환\r9 많은 데이터는 배열로 모은다 \r배열 만들기\r 3장 프로그램의 기본\r10 프로그램이란 무엇일까?\r프로그램이 뭐지?\r프로그램 작성의 기본\r11 프로그램을 구성하는 세 가지 기본 요소\r① 위에서부터 차례대로 실행한다\r② 만약 ~라면 실행한다 \r③ 같은 처리를 반복한다\r12 만약 ~라면 실행한다\rif문 사용법\rif문을 사 용해 보자\r‘그렇지 않을 때’의 처리를 작성한다 \r추첨 프로그램을 만들자\r13 같은 처리를 반복한다\rfor문은 지정한 횟수를 반복할 때 사용한다\r배열의 모든 요소를 반복하는 확장 for문\r배열 안의 점수를 더하는 확장 for문\rfor 문의 중첩\r14 한 가지 일은 한곳에 모은다\r메소드(함수)로 명령을 모은다 \r메소드를 사용해 보자\r인수와 반환값을 사용하는 메소드\r15 다른 사람이 만든 프로그램을 이용한다\rimport로 읽어들인다\rjava.util.Random을 import한다\rjava.time.ZonedDateTime을 import한다\r 4장 ‘객체 지향’이란 무엇일까?\r16 객체 지향 사고방식이란?\r객체 지향 프로그래밍과 절차형 프로그래밍\r객체 지향과 메시지\r17 클래스와 인스턴스\r클래스는 설계도, 움직이고 다룰 수 있는 상태는 인스턴스\r18 클래스를 만드는 방법\r클래스를 만드는 규칙\r아무것도 하지 않는 빈 객체를 만드는 프로그램\r19 Java 언어의 이름 규칙\r세 가지 이름 규칙\r20 필드와 메소드\r클래스가 가진 ‘변수’와 ‘행동’\r자기 이름을 말하고 인사하는 객체로 수정하기 1\r자기 이름을 말하고 인사하는 객체로 수정하기 2\r자기 이름을 말하고 인사하는 객체로 수정하기 3\r21 생성자로 초기 설정하기\r초깃값을 설정하는 메소드\r‘계산 문제를 1개만 만드는 클래스’를 만든다\r계산 문제 100개를 만든다\r22 필드와 로컬 변수\r블록 밖으로 나오면 사라지는 로컬 변수\r명확하게 로컬 변수와 필드 구별하기 \r스코프의 범위\r 5장 객체 지향을 좀 더 알아보자\r23 객체 지향의 3대 요소\r24 보여주고 싶지 않은 것을 숨길 수 있는 ‘캡슐화’\r캡슐화\r캡슐화하는 방법\r25 이미 있는 클래스를 사용자화하는 ‘상속’\r상속\r상속하는 방법\r빈칸 채우기 퀴즈를 만들자 \r틀린 글자 찾기 퀴즈를 만들자\r26 같은 방식으로 조작할 수 있는 ‘폴리모피즘’\r폴리모피즘\r폴리모피즘을 실현하는 방법\r27 좀 더 깊이 공부해 보는 ‘추상 클래스’와 ‘인터페이스’\r추상 클래스\r인터페이스\r28 앞으로 뭘 공부하면 좋을까?\r아직도 많이 남은 Java의 기능\r무엇을 만들고 싶은지 생각해 봅시다\r 찾아보기2\n",
        "isbn10": "8931555695",
        "isbn13": "9788931555691"
    },
    {
        "title": "애프터스킬  자바 프로그래밍 100% 실전 가이드 세트 (전2권)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14929723",
        "image": "https://bookthumb-phinf.pstatic.net/cover/149/297/14929723.jpg?type=m1&udate=20190530",
        "author": "심상원",
        "price": "60000",
        "discount": "54000",
        "publisher": "아이콕스",
        "pubdate": "20190520",
        "isbn": "1164260537 9791164260539",
        "description": "최신 JDK(1.11 버전)를 적용한 자바 프로그래밍의 모든 것!\n기초부터 활용까지 자바 개발에 필요한 모든 것을 갖춘 완벽한 프로그래밍 가이드!\n\n본 책은 우선 자바라는 언어의 문법 체계를 각종 예제들을 활용하여 단계별로 학습한 후, 이를 실제 응용 프로그램화할 수 있도록 ‘모듈화’하는 과정 및 JAVAFX를... ",
        "authorIntroContent": "\n심상원\n2005~2011 고려산업 ERP 시스템구축 및 운영\r2012~2015 (재)대덕인재개발원 강사\r2015 식품의약품안전처 의약품 업무 시스템 개발\r2016 서울신용보증재단 신용보증 업무 시스템 개발\r2017 고용노동부 중앙노동위원회 노사마루 시스템 개발\r2018~ 식품의약품안전처 의약품 업무 시스템 유지보수\n",
        "bookIntroContent": "최신 JDK(1.11 버전)를 적용한 자바 프로그래밍의 모든 것!기초부터 활용까지 자바 개발에 필요한 모든 것을 갖춘 완벽한 프로그래밍 가이드!본 책은 우선 자바라는 언어의 문법 체계를 각종 예제들을 활용하여 단계별로 학습한 후, 이를 실제 응용 프로그램화할 수 있도록 ‘모듈화’하는 과정 및 JAVAFX를 활용한 ‘UI’ 작업 등 패키징까지 총 2권에 걸쳐 설명하고 있습니다.[1권]은 주로 자바의 전반적인 문법의 개념과 그 활용을 다루었습니다. 기초부터 매우 복잡한 문법까지 전반적인 개념과 함께 예제를 통한 활용을 자세히 다룹니다.[2권]은 자바에서 제공하는 클래스로 절차 중심의 처리 방법과 활용 방법을 다루었습니다. 응용 단계로서 절차화된 정의 및 사용 방법을 활용하여 기능을 구현했으며 특히 확장성과 효율성을 고려한 모듈화 과정을 충분히 이해하기 바랍니다.",
        "tableOfContentsContent": "\n[1권] ---------------------------------------------------------  CHAPTER 1. 자바 환경 구축 1.1 개요\r1.2 JDK 다운로드 및 설정\r1.3 이클립스 다운로드 및 설정\r CHAPTER 2. 자바의 기초 2.1 최초 프로그램 작성\r2.2 주석 사용하기\r CHAPTER 3. 변수와 함수 3.1 변수\r3.2 기본형과 참조형 - 기본 학습\r3.3 기본형 - 상세 학습\r3.4 참조형 - 상세 학습\r3.5 함수\r3.6 오버로딩(Overloading)\r3.7 접근 제한자\r3.8 static\r3.9 final - ej 이상 값을 바꿀 수 없다!\r3.10 지역변수의 타입 추론 - var\r CHAPTER 4. 연산자 4.1 연산자 종류\r4.2 연산자 우선순위\r CHAPTER 5. 조건문과 반복문 5.1 조건문\r5.2 반복문\r CHAPTER 6. 배열 6.1 자료 구조\r6.2 배열 - 상세 학습\r6.3 다차원 배열\r6.4 배열의 부가 기능\r6.5 배열의 활용\r CHAPTER 7. 클래스와 객체 7.1 클래스의 구성 요소\r7.2 객체 생성 시 호출 순서\r7.3 내부 클래스\r7.4 enum\r7.5 제네릭스(Generics)\r7.6 리플렉션(Reflection)\r7.7 어노테이션(Annotation)\r CHAPTER 8. 함수 II 8.1 함수의 동적 처리\r8.2 기본형 파라미터와 참조형 파라미터\r8.3 재귀함수\r CHAPTER 9. 상속, 인터페이스, 추상 클래스, 익명 클래스 9.1 상속\r9.2 인터페이스\r9.3 추상 클래스\r9.4 익명 클래스\r CHAPTER 10. 예외 처리 10.1 예외 처리\r10.2 예외 처리 시 주의 사항\r10.3 try-with-resources 예외 처리\r CHAPTER 11. 효율성 및 모듈화 기법 11.1 중복된 변수의 자료 접근 및 우선 순위\r11.2 변수 연결을 통한 자료 연결\r11.3 공통 로직의 처리\r11.4 공통 함수의 처리\r CHAPTER 12. 자료 구조 12.1 자료 구조의 개념\r12.2 List\r12.3 Set\r12.4 Map\r12.5 Properties, Stack, Queue\r12.6 불변 자료 구조\r [2권] ---------------------------------------------------------  CHAPTER 13. UI (JavaFx) 13.1 JavaFx 소개 및 학습 절차\r13.2 JavaFx 개발 환경 구축\r13.3 JavaFx 기본 학습\r13.4 Application, Stage, Scene\r13.5 Node, Parent, Region\r13.6 Control [1] - 기본 컨트롤\r13.7 Control [2] - 선택형 컨트롤\r13.8 Control [3] - 목록형 컨트롤\r13.9 Control [4] - 상태바, 페이지, 에디터\r13.10 ImageView, MediaView, WebView\r CHAPTER 14. 쓰레드 14.1 쓰레드(Thread) 기본\r14.2 Thread 클래스\r14.3 쓰레드 풀(Pool)\r14.4 JavaFx 쓰레드 기능 부여하기\r CHAPTER 15. 파일 I/O (읽기/쓰기) 15.1 File 클래스\r15.2 파일 IO 개요\r15.3 파일 읽기/쓰기\r CHAPTER 16. 데이터베이스 I 16.1 오라클 프로그램 설치하기\r16.2 데이터베이스 기초\r16.3 데이터베이스 정의하기\r16.4 데이터베이스 조작하기\r16.5 연산자, 함수 익히기\r16.6 조인 - Join\r CHAPTER 17. 데이터베이스 II 17.1 데이터베이스 읽기/쓰기\r17.2 데이터베이스 작업을 위한 모듈화\r17.3 모듈화를 이용한 품목 구매 관리 화면 개발\r CHAPTER 18. 네트워킹 18.1 네트워킹 기본\r18.2 TCP/IP 통신\r18.3 UDP 통신\r CHAPTER 19. 람다 & 스트림 19.1 람다(Lambda)\r19.2 스트림(Stream)\r19.3 Optional 정리\r CHAPTER 20. 유용한 클래스 20.1 문자열 관련 클래스\r20.2 숫자 관련 클래스\r20.3 날짜 관련 클래스\r CHAPTER 21. 정규식 21.1 정규식의 개념 및 사용 방법\r21.2 정규표현식 문법 이해하기\r21.3 자바를 이용한 정규식 처리\r CHAPTER 22. 모듈 22.1 모듈(Module) 기본 학습\r22.2 모듈 상세 정의\r22.3 자바 1.9 이상 환경에서 JavaFx 실행 시 주의 사항\r Appendix JDK 1.11 변경점 정리\r찾아보기\n",
        "isbn10": "1164260537",
        "isbn13": "9791164260539"
    },
    {
        "title": "초보자도 쉽게 배우는 자바 for 안드로이드 프로그래밍 (기초 자바를 통해 안드로이드 앱 개발에 도전한다!)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12142529",
        "image": "https://bookthumb-phinf.pstatic.net/cover/121/425/12142529.jpg?type=m1&udate=20170829",
        "author": "조효은",
        "price": "25000",
        "discount": "22500",
        "publisher": "정보문화사",
        "pubdate": "20170615",
        "isbn": "8956747431 9788956747439",
        "description": "기초 자바를 통해 안드로이드 앱 개발에 도전한다!『초보자도 쉽게 배우는 자바 FOR 안드로이드 프로그래밍』은 ANDROID 앱 개발자라면 반드시 알아야 할... 안드로이드 앱 개발에 필요한 자바 문법과 안드로이드의 구조적 특징을 이해하여 안드로이드 앱을 쉽게 개발하는 방법을 알려주며 많은 예제를 통해... ",
        "authorIntroContent": null,
        "bookIntroContent": "기초 자바를 통해 안드로이드 앱 개발에 도전한다!『초보자도 쉽게 배우는 자바 FOR 안드로이드 프로그래밍』은 ANDROID 앱 개발자라면 반드시 알아야 할 기본 문법부터 예제를 통한 반복 학습까지 담겨 있습니다. 안드로이드 앱 개발에 필요한 자바 문법과 안드로이드의 구조적 특징을 이해하여 안드로이드 앱을 쉽게 개발하는 방법을 알려주며 많은 예제를 통해 쉬우면서도 완성도 있는 앱을 개발하도록 도와줍니다. 무엇보다도 필수 및 응용사항이 책 전체에 걸쳐 반복해서 설명되므로 ‘진짜로 작동하는 인터넷 연계 안드로이드 앱’을 만들 수 있을 것입니다.",
        "tableOfContentsContent": "\n1장 자바 및 안드로이드 개발 소프트웨어 설치\r1.1 자바 설치\r1.1.1 JDK 다운로드\r1.1.2 JDK 설치\r1.1.3 자바 환경설정\r1.1.4 정상 실행 확인\r1.2 이클립스 설치\r1.2.1 이클립스 다운로드\r1.2.2 이클립스 설치\r1.2.3 이클립스를 이용한 간단 프로그래밍\r1.2.4 자바 프로그래밍 실행\r1.3 안드로이드 스튜디오\r1.3.1 안드로이드 스튜디오 다운로드\r1.3.2 안드로이드 스튜디오 설치\r1.3.3 안드로이드 환경설정\r1.3.4 안드로이드 프로그래밍\r1.3.5 안드로이드 프로그래밍 실행\r1.4 안드로이드 앱 개발과 자바\r1.4.1 자바 문법의 네 가지 관점\r1.4.2 안드로이드 프로그래밍의 세 가지 관점\r1.4.3 앱 디렉토리 구조\r[앞으로 공부할 내용]\r 2장 안드로이드를 위한 자바 기본 문법\r2.1 타입\r2.1.1 기본타입\r2.1.2 변수\r2.1.3 데이터타입(형) \r2.1.4 기본타입의 연산과 타입 변환\r2.2 자바 프로그래밍의 기본\r2.2.1 프로그램 실행 순서\r2.2.2 주석\r2.2.3 조건문\r2.2.4 반복문\r2.2.5 연산관용어구\r2.2.6 메서드\r2.2.7 문자열(String)\r2.2.8 배열\r2.2.9 문자열 처리 중요 메서드\r 3장 객체지향 프로그래밍\r3.1 객체의 특징\r3.1.1 클래스\r3.1.2 패키지\r3.1.3 멤버(멤버필드, 멤버변수)\r3.1.4 멤버변수의 자동 초기화\r3.1.5 객체 생성\r3.1.6 은닉화와 접근제한자\r3.1.7 레퍼런스 this\r3.1.8 생성자\r3.1.9 생성자 오버로딩(중복 정의)\r3.1.10 this 생성자\r3.2 데이터 저장과 처리\r3.2.1 전달 객체(VO, DTO)\r3.2.2 유동성 인자(…, variable arguments, Var args)\r3.2.3 객체 배열\r3.2.4 향상된 for\r3.2.5 List 자료 구조(java.util.ArrayList)\r3.2.6 Map 자료 구조(java.util.HashMap)\r3.2.7 메서드 오버로딩(중복정의)\r3.2.8 제네릭스(Generics)\r3.2.9 날짜관련 변환(Date Conversion)\r3.2.10 예외 처리\r3.2.11 static\r3.3 계층 구조\r3.3.1 상속\r3.3.2 안드로이드의 상속\r3.3.3 Super 생성자, Super 레퍼런스\r3.3.4 계층 구조의 특징\r3.3.5 오버라이딩(재정의)\r3.3.6 다형성\r3.3.7 instanceof 키워드\r3.3.8 추상 클래스\r3.3.9 인터페이스(interface)\r3.3.10 파라미터화된 타입(Parameterized type)\r3.3.11 쓰레드(Thread)\r3.3.12 IO\r 4장 기본 문법 응용\r4.1 변수, 연산, 연산순위를 이용해 하이힐 높이 구하기\r4.2 조건문 if를 활용해 지진진도와 색상 출력하기\r4.3 삼항연산자를 활용해 지진진도와 색상 출력하기\r4.4 switch를 이용해 바이오리듬의 종류를 구분해서 출력하기\r4.5 String(문자열)을 이용해 도시이름 출력하기\r4.6 반복문 for와 타입 변환을 이용해 화씨·섭씨 변환하기\r4.7 반복문 for, while, do~while의 차이점\r4.8 상수, API 메서드를 활용해 바이오리듬 구하기\r4.9 사용자정의 메서드를 활용해 바이오리듬 구하기\r4.10 메서드를 이용해 두 지점 간의 거리 구하기\r4.11 문자열 파싱을 이용해 세계 주요 도시의 위도·경도 제공하기\r4.12 웹에서 빌보드 차트 읽어오기\r4.13 파싱 과정을 통해 빌보드 차트 랭킹 가져오기\r4.14 IO를 이용해 빌보드 차트의 가수 이미지 저장하기\r4.15 빌보드 목록을 QR 코드로 바꾸고 이미지로 저장하기\r4.16 빌보드 차트를 HTML로 저장하기\r 5장 안드로이드 필수 문법\r5.1 화면 이벤트 처리(UI Event Handle)하기\r5.1.1 화면 이벤트 핸들러(UI Event Handler)\r5.1.2 이벤트 처리 용어\r5.1.3 중요 다섯 가지 이벤트 처리 방법\r5.2 어댑터\r5.2.1 안드로이드뷰 어댑터\r5.2.2 어댑터 작동원리\r5.3 익명 내부 클래스 사용 예\r5.3.1 리스트뷰, 그리드뷰의 이벤트 처리\r5.3.2 이벤트 메서드 내에 Dialog 사용\r5.3.3 핸들러(요청 핸들러, 쓰레드 관련 핸들러)\r5.3.4 UI 쓰레드\r5.4 Handler(요청 핸들러)\r5.4.1 핸들러 선언\r5.4.2 핸들러 요청 처리 메서드 호출 방법\r5.4.3 처리 내용을 전달하는 Message 멤버필드(멤버변수)\r5.4.4 핸들러 실행 과정\r5.5 JSON\r5.6 XML\r5.7 파싱\r5.8 AsynTask(비동기 작업)\r5.9 컨텍스트\r5.10 안드로이드 퍼미션\r5.11 인텐트\r5.12 결과를 갖고 되돌아오는 액티비티\r5.13 멀티 액티비티(Multi Activity)\r5.14 액티비티, 서비스 사이의 이동\r 6장 안드로이드 기본 앱\r6.1 오늘 날짜 구하기\r6.2 온도 환산하기\r6.3 바이오리듬을 위한 생일 입력받기\r6.3.1 액티비티가 이벤트 핸들러 객체가 되는 경우\r6.3.2 중첩 클래스 사용하기(클래스 안에 클래스-Nested Class)\r6.3.3 여러 개의 중첩 클래스 사용하기(클래스 안에 클래스-Nested Class)\r6.3.4 익명 내부 클래스(Anonymous Nested Class) 사용하기 \r6.3.5 액티비티와 핸들러 객체가 서로 독립된 클래스 \r6.4 지진의 크기를 알려주는 원 그리기 \r6.4.1 크기가 결정된 원 그리기\r6.4.2 SeekBar에 반응해서 원의 크기 변경하기\r6.5 싸인 곡선 그리기\r6.6 바이오리듬 그리기\r6.7 결과를 받는 액티비티를 이용하여 바이오리듬 그리기\r6.8 0.1초마다 움직이는 싸인 곡선 그리기\r6.8.1 쓰레드 이용하기 \r6.8.2 핸들러 이용하기 \r6.9 타임존을 고려한 시계 그리기(핸들러)\r6.10 QR 코드를 이용하여 음악 듣기\r6.11 야후의 환율을 이용하여 환전하기\r6.11.1 환율을 입력해서 환전하기 \r6.11.2 JSON과 비동기를 이용하여 환율 얻기\r 7장 안드로이드 본격 앱 프로젝트\r7.1 ListView와 GridView를 이용해 국기 이미지 보여주기 \r7.1.1 ListView를 이용해 국기 이미지 보여주기\r7.1.2 GridView를 이용해 국기 이미지 보여주기\r7.2 ListView를 이용해 여러 도시의 시간 보여주기\r7.2.1 사용자가 정의한 뷰(시계) 만들기\r7.2.2 핸들러를 이용해 도시의 시간 보여주기\r7.3 ListView를 이용해 지진정보 보여주기\r7.3.1 상대 레이아웃을 이용해 레이아웃 만들기\r7.3.2 화면 이벤트 처리하기\r7.3.3 리스트뷰를 이용하여 지진정보 보여주기\r7.3.4 비동기와 HTML 초급 파싱으로 지진정보 가져오기\r7.4 구글 Map을 이용해 두 도시 사이의 거리 구하기 \r7.4.1 구글맵 API 키 얻기 \r7.4.2 메서드 만들기\r7.4.3 두 도시 사이의 거리 구하기\r7.5 구글 Map을 이용해 여러 도시의 시간 보여주기\r7.5.1 구글맵 마커를 이용하여 도시의 시간 보여주기\r7.5.2 구글 타임존 API와 롱클릭을 이용하여 도시의 시간 보여주기\r7.6 구글 Map을 이용해 우리나라와 세계 지진 정보 보여주기\r7.6.1 구글맵으로 지진진도를 반영한 대한민국의 지진분포 보여주기\r7.6.2 비동기를 이용하여 대한민국의 지진분포 보여주기\r7.6.3 지진 정보 파싱 준비하기\r7.6.4 비동기와 HTML 파싱으로 지진분포 보여주기\r7.6.5 비동기와 JSON 파싱으로 지진분포 보여주기\r7.7 빌보드 차트와 LastFM을 이용해 음악 정보 제공 앱 만들기\r7.7.1 비동기와 JSON 파싱으로 얻은 음악 정보를 리스트뷰로 보여주기\r7.7.2 비동기와 JSON 파싱으로 얻은 음악 정보를 그리드뷰로 보여주기\r7.7.3 가수 이름으로 찾기\r7.7.4 빌보드 차트 랭킹 보기\r7.7.5 빌보드 차트와 LastFM을 연동하여 음악 듣기\r7.7.6 웹뷰를 이용하여 빌보드 차트와 LastFM 연동하기\r7.8 음악 정보 제공 앱 업그레이드하기\r7.8.1 비동기 앱\r7.8.2 이미지를 더 빠르게 반영하기\r7.8.3 이벤트 핸들러를 사용한 야구게임\r [부록1] 안드로이드 아키텍처\r[부록2] 앱 라이프 사이클\r[부록3] 이벤트 처리와 람다 표현식\n",
        "isbn10": "8956747431",
        "isbn13": "9788956747439"
    },
    {
        "title": "자바스크립트 마스터 북 (기초부터 실무 응용까지)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12332026",
        "image": "https://bookthumb-phinf.pstatic.net/cover/123/320/12332026.jpg?type=m1&udate=20180417",
        "author": "야마다 요시히로",
        "price": "30000",
        "discount": "27000",
        "publisher": "제이펍",
        "pubdate": "20170816",
        "isbn": "1185890971 9791185890975",
        "description": "개발자가 알아야 할 기본 문법부터 완벽한 현장 대응까지!이 책은 개발자가 알아야 할 기본 문법과 ECMASCRIPT 6에 의해 계속 진화하고 있는 자바스크립트의 새로운 기법은 물론, 객제지향 구문, AJAX 클라이언트 측 개발에 대해 상세히 설명하며, 테스트, 문서, 코딩 등 현장에서 꼭 필요한 지식도 담겨 있다.",
        "authorIntroContent": "\n야마다 요시히로\n저자 : 야마다 요시히로저자 야마다 요시히로(山田 祥?)는 시즈오카현 하이바라초에서 태어났으며, 히토츠바시대학 경제학부를 졸업했다. NEC에서 시스템 기획 업무에 종사하였으나, 2003년 4월에 평소 동경했던 전업작가로 전향하였다. MICROSOFT MVP FOR VISUAL STUDIO AND DEVELOPMENT TECHNOLOGIES이며, 집필 커뮤니티 ‘WINGS 프로젝트’의 대표이기도 하다. 주요 저서로 《ANGULARJS 애플리케이션 프로그래밍》, 《퍼펙트 루비 온 레일즈》, 《ANDROID 엔지니어를 위한 모던 JAVA》 등이 있으며, 이외에도 다수의 책을 썼다. 또한, @IT, CODEZINE, BUILD INSIDER 등에 글을 연재하고 있으며, 〈닛케이 소프트웨어〉(닛케이 BP) 등에도 기사를 집필하고 있다. 최근에는 IT 관련 기술의 취재나 강연까지 폭넓은 영역에서 활동 중이다.역자 : 정인식역자 정인식은 숭실대학교에서 전자계산학을 전공하였다. 사회 초년생 시절 자바에 심취해 현대정보기술에서 웹 애플리케이션을 개발하였고, 그 후 이동통신 단말기 분야로 전직하여 휴대전화 단말기의 부가서비스 개발 업무를 담당하였다. 일본 키스코 모바일사업부 팀장이었으며, 일본 교세라의 북미향 휴대전화기 개발에 참여하였다. 지금은 일본의 주요 이동통신사에서 업무 프로세스 개선을 위한 IT 컨설팅 및 데이터 분석 관련 툴을 개발하고 있다. 옮긴 책으로는 《처음 만나는 알고리즘》, 《기초 튼튼 코드 튼튼 다 함께 프로그래밍》, 《유니티 5로 만드는 3D/2D 스마트폰 게임 개발》을 비롯해 10여 종이 있다.\n",
        "bookIntroContent": "개발자가 알아야 할 기본 문법부터 완벽한 현장 대응까지!이 책은 개발자가 알아야 할 기본 문법과 ECMASCRIPT 6에 의해 계속 진화하고 있는 자바스크립트의 새로운 기법은 물론, 객제지향 구문, AJAX 클라이언트 측 개발에 대해 상세히 설명하며, 테스트, 문서, 코딩 등 현장에서 꼭 필요한 지식도 담겨 있다.",
        "tableOfContentsContent": "\nCHAPTER 1 소개 1\r1.1 JavaScript란? 2\r1.1.1 JavaScript의 역사 2\r1.1.2 JavaScript 부활 ― Ajax, 그리고 HTML5의 시대 3\r1.1.3 나쁜 이미지에 대한 오해 5\r1.1.4 언어로서의 네 가지 특징 6\r1.2 ECMAScript 2015란? 8\r1.2.1 브라우저별 대응 상황 9\r1.3 브라우저의 개발자 도구 11\r1.3.1 개발자 도구 시작하기 11\r1.3.2 HTML/CSS의 소스 확인하기 - [Elements] 탭 13\r1.3.3 통신 상황 추적하기 - [Network] 탭 13\r1.3.4 스크립트 디버그하기 - [Sources] 탭 15\r1.3.5 스토리지/쿠키 내용 확인하기 - [Application] 탭 16\r1.3.6 로그 확인/객체 조작 등의 만능 도구 - [Console] 탭 17\r CHAPTER 2 기본적인 작성법 익히기 19\r2.1 JavaScript의 기본적인 표기 20\r2.1.1 JavaScript로 “안녕하세요, 자바스크립트!” 표기하기 20\r2.1.2 JavaScript를 HTML 파일 안에 집어넣기 - [script] 요소 23\r2.1.3 문장의 규칙 28\r2.1.4 주석 삽입하기 30\r2.2 변수와 상수 33\r2.2.1 변수 선언하기 33\r2.2.2 식별자의 명명 규칙 36\r2.2.3 상수 선언하기 38\r2.3 데이터형 41\r2.3.1 JavaScript의 주요 데이터형 42\r2.3.2 리터럴 43\r2.4 연산자 52\r2.4.1 산술 연산자 52\r2.4.2 대입 연산자 55\r2.4.3 비교 연산자 62\r2.4.4 논리 연산자 66\r2.4.5 비트 연산자 69\r2.4.6 그 외의 연산자 71\r2.4.7 연산자의 우선순위와 결합순서 73\r2.5 제어 구문 77\r2.5.1 조건에 따라 분기 처리하기 - if 명령 77\r2.5.2 식의 값에 따라 분기 처리하기 - switch 명령 83\r2.5.3 조건식에 따라 루프 제어하기 - while/do…while 명령 86\r2.5.4 무한 루프 89\r2.5.5 지정 횟수만큼만 루프 처리하기 - for 명령 90\r2.5.6 연상 배열의 요소를 순서대로 처리하기 - for…in 명령 92\r2.5.7 배열 등을 순서대로 처리하기 - for…of 명령 94\r2.5.8 루프를 도중에 스킵/중단하기 - break/continue 명령 95\r2.5.9 예외 처리하기 - try…catch…finally 명령 100\r2.5.10 JavaScript의 위험한 구문 금지하기 - Strict 모드 103\r CHAPTER 3 기본 데이터 조작하기 - 내장형 객체 107\r3.1 객체란? 108\r3.1.1 객체 = 프로퍼티 + 메소드 109\r3.1.2 객체를 이용하기 위한 준비 - new 연산자 110\r3.1.3 정적 프로퍼티/정적 메소드 112\r3.1.4 내장형 객체란? 112\r3.2 기본 데이터를 취급하기 위한 객체 116\r3.2.1 문자열 조작하기 - String 객체 116\r3.2.2 숫자 조작하기 - Number 객체 120\r3.2.3 심벌 작성하기 - Symbol 객체 125\r3.2.4 기본적인 숫자 연산 실행하기 - Math 객체 127\r3.3 값의 집합을 처리/조작하기 - Array/Map/Set 객체 131\r3.3.1 배열 조작하기 - Array 객체 131\r3.3.2 연상 배열 조작하기 - Map 객체 144\r3.3.3 중복되지 않은 값의 집합 조작하기 - Set 객체 148\r3.4 날짜/시간 데이터 조작하기 - Date 객체 151\r3.4.1 Date 객체 생성하기 151\r3.4.2 날짜/시간 값을 가산/감산하기 154\r3.4.3 날짜/시간 차이 구하기 155\r3.5 정규 표현으로 문자 조작하기 - RegExp 객체 157\r3.5.1 JavaScript에서 이용 가능한 정규 표현 158\r3.5.2 RegExp 객체를 생성하는 방법 159\r3.5.3 정규 표현에 의한 문자열 검색 160\r3.5.4 정규 표현의 옵션으로 매치할 때 동작 제어하기 162\r3.5.5 match 메소드와 exec 메소드의 동작 차이 164\r3.5.6 매칭의 성공 여부 검증하기 166\r3.5.7 정규 표현으로 문자열 치환하기 167\r3.5.8 정규 표현으로 문자열 분할하기 169\r3.6 모든 객체의 모형 - Object 객체 170\r3.6.1 객체를 기본형으로 변환하기 - toString/valueOf 메소드 172\r3.6.2 객체 결합하기 - assign 메소드 173\r3.6.3 객체 생성하기 - create 메소드 174\r3.6.4 불변 객체 정의하기 177\r3.7 JavaScript 프로그램에서 자주 이용하는 기능 제공하기 - Global 객체 179\r3.7.1 Number 객체로 이동한 메소드 180\r3.7.2 쿼리 정보 이스케이프 처리하기 - encodeURI/encodeURIComponent 함수 181\r3.7.3 동적으로 생성한 스크립트 실행하기 - eval 함수 182\r CHAPTER 4 반복적으로 사용하는 코드를 하나로 정리하기 - 함수 185\r4.1 함수란? 186\r4.1.1 function 명령으로 정의하기 186\r4.1.2 Function 생성자로 정의하기 188\r4.1.3 함수 리터럴 표현으로 정의하기 190\r4.1.4 애로우 함수로 정의하기 191\r4.2 함수를 정의할 때 주의할 네 가지 사항 193\r4.2.1 return 명령은 도중에 개행하지 않는다 193\r4.2.2 함수는 데이터형의 하나다 194\r4.2.3 function 명령은 정적인 구조를 선언한다 196\r4.2.4 함수 리터럴/Function 생성자는 실행할 때 판단된다 197\r4.3 변수는 어떤 곳에서 참조할 수 있을까? - 스코프 198\r4.3.1 글로벌 변수와 로컬 변수의 차이점 199\r4.3.2 변수 선언에 var 명령이 필수인 이유 199\r4.3.3 로컬 변수의 유효범위는 어디까지? 200\r4.3.4 가인수의 스코프 - 기본형과 참조형의 차이 주의하기 202\r4.3.5 블록 레벨의 스코프는 존재하지 않는다 (ES2015 이전) 204\r4.3.6 블록 스코프에 대응한 let 명령 206\r4.3.7 함수 리터럴/Function 생성자에서 스코프의 차이 207\r4.4 인수의 다양한 표기법 209\r4.4.1 JavaScript는 인수의 수를 체크하지 않는다 209\r4.4.2 가변길이 인수의 함수 정의하기 212\r4.4.3 명시적으로 선언된 인수와 가변길이 인수 혼재시키기 214\r4.4.4 명명된 인수로 코드를 읽기 쉽게 하기 216\r4.5 ES2015의 인수 표기법 218\r4.5.1 인수의 디폴트값 218\r4.5.2 가변길이 인수의 함수 정의하기 221\r4.5.3 ‘...’ 연산자에 의한 인수의 전개 222\r4.5.4 명명된 인수로 코드를 이해하기 쉽게 하기 223\r4.6 함수 호출과 반환값 225\r4.6.1 복수의 반환값을 개별 변수에 대입하기 225\r4.6.2 함수 자신을 재귀적으로 호출하기 - 재귀 함수 226\r4.6.3 함수의 인수도 함수 - 고차 함수 227\r4.6.4 ‘일회용 함수’는 익명 함수로 230\r4.7 높은 수준의 함수 테마 232\r4.7.1 템플릿 문자열을 애플리케이션 사양으로 커스터마이즈하기 - 태그 부여 템플릿 문자열 232\r4.7.2 변수는 어떤 순서로 해결될까? - 스코프 체인 234\r4.7.3 같은 행동을 하는 객체 - 클로저 236\r CHAPTER 5 대규모 개발에서도 통용되는 작성법 익히기 - 객체지향 구문 241\r5.1 JavaScript의 객체지향 특징 242\r5.1.1 ‘클래스’는 없고 ‘프로토타입’만 있다 242\r5.1.2 가장 간단한 클래스 정의하기 243\r5.1.3 생성자로 초기화하기 243\r5.1.4 동적으로 메소드 추가하기 245\r5.1.5 문맥에 따라 내용이 변하는 변수 - this 키워드 247\r5.1.6 생성자의 강제적인 호출 250\r5.2 생성자의 문제점과 프로토타입 252\r5.2.1 메소드는 프로토타입으로 선언한다 - prototype 프로퍼티 253\r5.2.2 프로토타입 객체를 사용한 메소드 정의의 두 가지 이점 254\r5.2.3 프로토타입 객체의 불가사의(1) - 프로퍼티의 설정 256\r5.2.4 프로토타입 객체의 불가사의(2) - 프로퍼티의 삭제 258\r5.2.5 객체 리터럴로 프로토타입 정의하기 260\r5.2.6 정적 프로퍼티/정적 메소드 정의하기 262\r5.3 객체의 계승 - 프로토타입 체인 265\r5.3.1 프로토타입 체인의 기초 265\r5.3.2 계승 관계는 동적으로 변경 가능 268\r5.3.3 객체의 타입 판정하기 269\r5.4 본격적인 개발에 대비하기 272\r5.4.1 private 멤버 정의하기 272\r5.4.2 Object.defineProperty 메소드에 의한 액세서 메소드 구현 276\r5.4.3 네임스페이스/패키지 작성하기 279\r5.5 ES2015의 객체지향 구문 282\r5.5.1 클래스 정의하기 - class 명령 282\r5.5.2 객체 리터럴의 개선 287\r5.5.3 애플리케이션을 기능 단위로 모으기 - 모듈 289\r5.5.4 열거 가능한 객체 정의하기 - 반복자 294\r5.5.5 열거 가능한 객체를 더욱 간단하게 구현하기 - 발생자 297\r5.5.6 객체의 기본적인 동작을 사용자 정의하기 - Proxy 객체 300\r CHAPTER 6 HTML과 XML 문서 다루기 - DOM 303\r6.1 DOM의 기본 파악하기 304\r6.1.1 마크업 언어를 사용하는 표준 방식 ‘DOM’ 304\r6.1.2 문서 트리와 노드 305\r6.2 클라이언트 측 JavaScript의 사전 지식 307\r6.2.1 요소 노드 취득하기 307\r6.2.2 문서 트리 사이 오가기 - 노드 워킹 315\r6.2.3 이벤트를 트리거로 한 처리 실행하기 - 이벤트 구동 모델 319\r6.3 속성값 취득/설정하기 327\r6.3.1 대부분의 속성은 ‘요소 노드 속 같은 이름의 프로퍼티’로 액세스 가능 327\r6.3.2 불특정 속성 취득하기 328\r6.3.3 텍스트 취득 및 설정하기 330\r6.4 폼 요소에 액세스하기 335\r6.4.1 입력 상자/선택 상자의 값 취득하기 336\r6.4.2 체크 상자의 값 취득하기 336\r6.4.3 라디오 버튼의 값 취득하기 338\r6.4.4 라디오 버튼/체크 상자의 값 설정하기 340\r6.4.5 복수 선택할 수 있는 리스트 상자의 값 취득하기 343\r6.4.6 업로드된 파일의 정보 취득하기 345\r6.5 노드를 추가/치환/삭제하기 351\r6.5.1 innerHTML 프로퍼티와 어떻게 구분하여 사용할 것인가? 351\r6.5.2 신규 노드 작성하기 352\r6.5.3 기존 노드 치환/삭제하기 359\r6.5.4 HTMLCollection/NodeList를 반복 처리할 때 주의점 363\r6.6 JavaScript로 스타일 시트 조작하기 365\r6.6.1 인라인 스타일로 액세스하기 - style 프로퍼티 365\r6.6.2 외부 스타일 시트 적용하기 - className 프로퍼티 368\r6.6.3 스타일 클래스를 더 간단하게 조작하기 - classList 프로퍼티 371\r6.7 더 높은 수준의 이벤트 처리 373\r6.7.1 이벤트 리스너/이벤트 핸들러 삭제하기 373\r6.7.2 이벤트에 관련된 정보 취득하기 - 이벤트 객체 374\r6.7.3 이벤트 처리 취소하기 379\r6.7.4 이벤트 리스너/이벤트 핸들러 아래의 this 키워드 384\r CHAPTER 7 클라이언트 측 JavaScript 개발 마스터하기 389\r7.1 브라우저 객체에서 알아두어야 할 기본 기능 390\r7.1.1 브라우저 객체의 계층 구조 390\r7.1.2 확인 대화상자 표시하기 - confirm 메소드 392\r7.1.3 타이머 기능 구현하기 - setInterval/setTimeout 메소드 393\r7.1.4 표시 페이지의 어드레스 정보 취득/조작하기 - location 객체 396\r7.1.5 이력에 따라 페이지를 전후로 이동하기 - history 객체 398\r7.1.6 J avaScript에 의한 조작을 브라우저 이력에 남기기 - pushState 메소드 399\r7.1.7 애플리케이션에 크로스 브라우저 대책 실시하기 - navigator 객체 401\r7.2 디버그 정보 출력하기 - Console 객체 405\r7.2.1 콘솔에 로그 출력하기 405\r7.2.2 알아두면 편리한 로그 메소드 407\r7.3 사용자 데이터 저장하기 - Storage 객체 415\r7.3.1 스토리지에 데이터 보관/취득하기 416\r7.3.2 기존 데이터 삭제하기 418\r7.3.3 스토리지로부터 모든 데이터 추출하기 418\r7.3.4 스토리지에 객체 보관/취득하기 419\r7.3.5 스토리지의 변경 감시하기 422\r7.4 서버 연계로 고급 UI 구현하기 - Ajax 423\r7.4.1 PHP의 ‘Hello, World’와 Ajax의 ‘Hello, World’ 비교하기 424\r7.4.2 Ajax 애플리케이션 구현의 기본 428\r7.4.3 Ajax 애플리케이션에서 구조화 데이터 다루기 435\r7.4.4 클 라이언트 측에서 크로스 오리진 통신 가능하게 하기 - JSONP 441\r7.4.5 크로스 도큐먼트 메시징을 통한 크로스 오리진 통신 445\r7.5 비동기 처리 간단하게 표현하기 - Promise 객체 449\r7.5.1 Promise 객체의 기본 파악하기 450\r7.5.2 비동기 처리 연결하기 451\r7.5.3 여러 비동기 처리를 병행하여 실행하기 453\r7.6 백그라운드로 JavaScript 코드 실행하기 - Web Worker 455\r7.6.1 워커 구현하기 456\r7.6.2 워커 기동하기 457\r CHAPTER 8 현장에서 바로 대응할 수 있는 지식 459\r8.1 단위 테스트 - Jasmine 460\r8.1.1 Jasmine의 인스톨 방법 460\r8.1.2 테스트의 기본 461\r8.1.3 테스트 스위트 실행하기 464\r8.2 문서화 주석으로 코드 내용 알기 쉽게 하기 - JSDoc 467\r8.2.1 문서화 주석의 기술 규칙 468\r8.2.2 문서화 생성 툴 - JSDoc 469\r8.3 빌드 툴로 정형 작업 자동화하기 - Grunt 471\r8.3.1 Grunt에 의한 소스 코드의 압축 471\r8.4 지금 바로 ECMAScript 2015 실전 활용하기 - Babel 478\r8.4.1 코드를 수동으로 변환하기 478\r8.4.2 Grunt 경유로 Babel 실행하기 479\r8.4.3 간이 인터프리터 이용하기 481\r8.5 읽기 쉽고, 유지보수가 쉬운 코드 작성하기 - 코딩 규약 482\r8.5.1 JavaScript의 주요 코딩 규약 482\r8.5.2 JavaScript style guide(MDN)의 주요 규약 483\r8.5.3 Google의 표준 코딩 스타일 484\r 찾아보기 486\r    \n",
        "isbn10": "1185890971",
        "isbn13": "9791185890975"
    },
    {
        "title": "자바스크립트 프로그래밍 입문",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11445276",
        "image": "https://bookthumb-phinf.pstatic.net/cover/114/452/11445276.jpg?type=m1&udate=20170925",
        "author": "윤인성",
        "price": "25000",
        "discount": "24000",
        "publisher": "한빛아카데미",
        "pubdate": "20161215",
        "isbn": "1156642787 9791156642787",
        "description": "한 권으로 배우는 웹 서버/클라이언트 개발『자바스크립트 프로그래밍 입문』은 웹의 주요 언어인 자바스크립트를 자세히 다룬 책으로, HTML과 CSS의 기본 내용만 알고 있으면 누구든지 볼 수 있다. 자바스크립트를 처음 시작하는 독자들도 쉽게 입문할 수 있도록 언어의 기초 내용을 충실히 담고 있으며... ",
        "authorIntroContent": "\n윤인성\n저자 : 윤인성저자 윤인성은 출근하는 게 싫어서 책을 집필하기 시작했다. 현재 직업 특성상 집에서 나갈 이유가 별로 없다는 것에 굉장히 만족하는 성격이기도 하다. 홍차와 커피를 좋아하며 기타, 가야금, 그림 그리기, 스컬핑 등이 취미이다.저서로는 『IT COOKBOOK, C# 프로그래밍』, 『IT COOKBOOK, HTML5 웹 프로그래밍』, 『모던 웹을 위한 JAVASCRIPT+JQUERY 입문』, 『모던 웹을 위한 NODE.JS 프로그래밍』, 『모던 웹 디자인을 위한 HTML5+CSS3 입문』 등이 있으며, 역서로는 『TOPCODER 알고리즘 트레이닝』, 『자바 퍼즐러』, 『소셜 코딩으로 이끄는 GITHUB 실천 기술』, 『NATURE OF CODE』 등이 있다.\n",
        "bookIntroContent": "한 권으로 배우는 웹 서버/클라이언트 개발『자바스크립트 프로그래밍 입문』은 웹의 주요 언어인 자바스크립트를 자세히 다룬 책으로, HTML과 CSS의 기본 내용만 알고 있으면 누구든지 볼 수 있다. 자바스크립트를 처음 시작하는 독자들도 쉽게 입문할 수 있도록 언어의 기초 내용을 충실히 담고 있으며 자바스크립트의 활용도가 점점 높아지는 만큼, 클라이언트 개발과 서버 개발로 나눠서 응용해본다. 서버 자바스크립트와 클라이언트 자바스크립트의 내용을 활용하여 총 세 개의 프로젝트를 완성해보면서 자신이 원하는 애플리케이션을 만드는 방법을 배울 수 있다",
        "tableOfContentsContent": "\nChapter 01 자바스크립트 첫걸음\r자바스크립트의 발전\r자바스크립트로 할 수 있는 일 \r실습 환경 구축\r기본 실습 방법\r웹 브라우저 실습 방법\r Part 1 자바스크립트 기본\rChapter 02 기본\r기본 용어\r출력\r기본 자료형\r변수\r복합 대입 연산자\r증감 연산자\r자료형 검사\rundefined 자료형\r강제 자료형 변환\r자동 자료형 변환\r일치 연산자\r상수\r요약 \r연습문제\r  Chapter 03 조건문\rif 조건문\rif else 조건문\r중첩 조건문\rif else if 조건문\rswitch 조건문\r삼항 연산자\r짧은 초기화 조건문\r조금 더 나아가기\r요약 \r연습문제\r  Chapter 04 반복문\r배열\rwhile 반복문\rfor 반복문\r역 for 반복문\rfor in 반복문과 for of 반복문\r중첩 반복문\rbreak 키워드\rcontinue 키워드\r조금 더 나아가기\r요약 \r연습문제\r Chapter 05 함수\r함수 생성 방법\r함수의 기본 형태\r함수의 기본 활용 형태\r함수 매개 변수 초기화\r콜백 함수\r표준 내장 함수\r조금 더 나아가기\r요약 \r연습문제\r Chapter 06 객체\r객체 기본\r객체와 반복문\r속성과 메소드\r생성자 함수와 프로토타입\r조금 더 나아가기\r요약 \r연습문제\r Chapter 07 표준 내장 객체\r기본 자료형과 객체 자료형의 차이\rNumber 객체 \rStirng 객체\rDate 객체 \rArray 객체\r조금 더 나아가기\r요약 \r연습문제\r Chapter 08 예외 처리 \r예외와 기본 예외 처리\r고급 예외 처리\r예외 객체\r예외 강제 발생\r요약 \r연습문제\r Part 2 서버 자바스크립트\rChapter 09 Node.js 기본\r전역 변수\rprocess 객체의 속성과 이벤트\rprocess 객체와 이벤트 개요\ros 모듈\rurl 모듈\rFile System 모듈\r노드 패키지 매니저\rrequest 모듈\rcheerio 모듈\rasync 묘듈\r요약 \r연습문제\r Chapter 10 express 모듈\r요청과 응답\rexpress 모듈을 사용한 서버 생성과 실행\r페이지 라우팅\r요청과 응답\r미들웨어\r요약 \r연습문제\r Chapter 11 미니 프로젝트 ? RESTful 웹 서비스 \rRESTful 웹 서비스 개요\r코드 구성\rPostman 크롬 애플리케이션\r Part 3 클라이언트 자바스크립트\rChapter 12 웹 브라우저의 자바스크립트\r사용할 수 없는 코드\r브라우저 객체 모델\rwindow 객체\rscreen 객체\rlocation 객체와 history 객체\rnavigator 객체\r요약 \r연습문제\r Chapter 13 문서 객체 모델 \r문서 객체 모델 관련 용어\r웹 페이지 생성 순서\r문서 객체 선택\r문서 객체 조작\r이벤트\r요약 \r연습문제\r Chapter 14 jQuery\rjQuery 사용 준비\rjQuery 객체\r문서 객체 선택\r문서 객체 개별 조작\r문서 객체 생성\r이벤트\r애니메이션\r요약 \r연습문제\r Chapter 15 미니 프로젝트 ? 이미지 슬라이더\r이미지 슬라이더 개요\r이미지 슬라이더 구성\r기본 코드 구성\r플러그인 구성\r Part 4 프로젝트 \rChapter 16 프로젝트 ? 온라인 그림판\r발상\r필요한 요소 확인\r캔버스\rsocket.io 모듈\r서버 구성\r클라이언트 구성\r실행 확인\n",
        "isbn10": "1156642787",
        "isbn13": "9791156642787"
    },
    {
        "title": "자바 고양이 Tomcat 이야기",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11945516",
        "image": "https://bookthumb-phinf.pstatic.net/cover/119/455/11945516.jpg?type=m1&udate=20170418",
        "author": "최진식",
        "price": "25600",
        "discount": "23040",
        "publisher": "좋은땅",
        "pubdate": "20170408",
        "isbn": "1159827761 9791159827761",
        "description": "[자바 고양이 TOMCAT 이야기]는 오픈 소스 소프트웨어 시대의 대세 WAS인 APACHE TOMCAT을 보다 잘 사용하기 위한 필수 도서다. TOMCAT에 포함된 주요 스크립트 코드 및 TOMCAT 자바 소스 코드를 인용하여 내부 아키텍처를 설명하며, TOMCAT과 관련한 주변 기술 또한 폭 넓게 소개한다. 본문의... ",
        "authorIntroContent": "\n최진식\n저자 : 최진식저자 최진식은 LG CNS의 기술 아키텍트. 다양한 분야의 인프라 기술을 담당하였으며 대규모 IT 자원 관리 솔루션, 웹 기반 시스템 대상 모니터링 솔루션 등을 개발했다. 현재는 오픈 소스 소프트웨어를 주로 다루고 있으며 여전히 신기술에 관심이 많다.\n",
        "bookIntroContent": "[자바 고양이 TOMCAT 이야기]는 오픈 소스 소프트웨어 시대의 대세 WAS인 APACHE TOMCAT을 보다 잘 사용하기 위한 필수 도서다. TOMCAT에 포함된 주요 스크립트 코드 및 TOMCAT 자바 소스 코드를 인용하여 내부 아키텍처를 설명하며, TOMCAT과 관련한 주변 기술 또한 폭 넓게 소개한다. 본문의 테스트 환경은 리눅스, JDK 1.7, TOMCAT 7.0을 사용한다.",
        "tableOfContentsContent": "\nTomcat\r본 책에 대하여\r 1. 자바\r2. Java Virtual Machine, Bytecode\r3. 설치, 기동, 중지\r4. Thread\r5. Heap\r6. 포트와 Connector\r7. 설정\r8. 로그\r9. Native\r10. JDBC\r11. 세션\r12. 세션 클러스터\r13. 애플리케이션 배포 시 발생하는 오류\r14. 운영 관리\r15. 보안\r16. 모니터링\r 마무리하며\n",
        "isbn10": "1159827761",
        "isbn13": "9791159827761"
    },
    {
        "title": "이펙티브 자바 (Effective Java,최신 자바 7 8에 대한 주석 수록)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=8064518",
        "image": "https://bookthumb-phinf.pstatic.net/cover/080/645/08064518.jpg?type=m1&udate=20170915",
        "author": "조슈아 블로크",
        "price": "32000",
        "discount": "28800",
        "publisher": "인사이트",
        "pubdate": "20140901",
        "isbn": "8966261167 9788966261161",
        "description": "JAVA, 더 깔끔하고, 정확하고, 안전하며, 재사용이 쉬운 코드로 만들자!『EFFECTIVE JAVA(이펙티브 자바)』는 효율적이면서도 잘 설계된 자바... 또한, 최신 자바 7, 8에 대한 주석을 수록했다.\n\n이 책은 제네릭, ENUM, 어노테이션, 자동 객체화, FOR-EACH 문, VARARGS, 병행성 유틸리티 등에 관한 새로운... ",
        "authorIntroContent": "\n조슈아 블로크\n저자 : 조슈아 블로크저자 조슈아 블로크JOSHUA BLOCH는 1961년 생으로, 카네기멜론대학에서 컴퓨터 과학 전공으로 박사 학위를 취득했으며, SUN에서 자바 플랫폼 가운데 많은 부분의 설계를 주도한 저명한 소프트웨어 엔지니어다. JDK 5.0의 새로운 기능들과 컬렉션(COLLECTION) 프레임워크, JAVA.MATH 패키지, ASSERT 메커니즘 등이 그의 손을 거쳤다. GOOGLE에서는 안드로이드를 비롯한 자바 프레임워크 설계에 참여했으며, DART 팀에서도 활동했다. 졸트(JOLT) 상에 빛나는 『EFFECTIVE JAVA』 이외에도 『JAVA PUZZLERS』(ADDISON-WESLEY, 2005), 『JAVA CONCURRENCY IN PRACTICE』 (ADDISON-WESLEY, 2006) 등의 유명한 자바 기술서에 공저자로 참여했으며, 2004년에는 《JAVA DEVELOPER’S JOURNAL》의 “TOP 40 SOFTWARE PEOPLE IN THE WORLD” 가운데 한 명으로 선정되기도 했다.역자 : 이병준역자 이병준은 1972년 생으로, 1998년 서울대학교에서 컴퓨터공학 석사 학위를, 2011년에는 충남대학교에서 컴퓨터공학 박사 학위를 취득했다. 2001년부터 한국전자통신연구원에서 선임연구원으로 네트워크 프로토콜 개발, 네트워크 제어 및 관리 시스템 개발에 종사해 왔다. 『불확실성과 화해하는 프로젝트 추정과 계획』『코딩 인터뷰 완전 분석』『CSS3 : 세상에 없던 가장 꼼꼼한 매뉴얼』 등 10권의 번역서를 냈으며, 최근에는 SDN(SOFTWARE-DEFINED NETWORKING) 기술을 연구 개발하는 데 전념하고 있다. 소프트웨어 개발에 관한 블로그 WWW.BUGGYMIND.COM을 운영하고 있으며, FLOODLIGHT, LOXIGEN, OPENIRIS, OVSDB 등의 오픈 소스 활동에도 참여하고 있다.\n",
        "bookIntroContent": "JAVA, 더 깔끔하고, 정확하고, 안전하며, 재사용이 쉬운 코드로 만들자!『EFFECTIVE JAVA(이펙티브 자바)』는 효율적이면서도 잘 설계된 자바 프로그램을 구현하기 위해 알아야 할 지침 78가지를 소개한 책이다. JAVA SE 5, JAVA SE 6에 새롭게 도입된 기능들을 반영하고, 새로운 기능들을 최대한 활용할 수 있는 방법들을 제시하고 있다. 또한, 최신 자바 7, 8에 대한 주석을 수록했다.이 책은 제네릭, ENUM, 어노테이션, 자동 객체화, FOR-EACH 문, VARARGS, 병행성 유틸리티 등에 관한 새로운 지침과 객체, 클래스, 라이브러리, 메서드, 직렬화 등의 고전적 주제에 대한 최선의 지침들, 자바의 미묘한 부분에 대한 몰이해에서 오는 문제들을 회피하는 방법, 자바 언어와 그 기본적 라이브러리인 JAVA.LANG, JAVA.UTIL, JAVA.UTIL.CONCURRENT, 그리고 JAVA.IO에 초점을 맞춘 설명을 담고 있다.",
        "tableOfContentsContent": "\n1장 서론\r 2장 객체의 생성과 삭제\r 규칙 1 생성자 대신 정적 팩터리 메서드를 사용할 수 없는지 생각해 보라 \r규칙 2 생성자 인자가 많을 때는 Builder 패턴 적용을 고려하라. \r규칙 3 private 생성자나 enum 자료형은 싱글턴 패턴을 따르도록 설계하라 \r규칙 4 객체 생성을 막을 때는 private 생성자를 사용하라 \r규칙 5 불필요한 객체는 만들지 말라\r규칙 6 유효기간이 지난 객체 참조는 폐기하라\r규칙 7 종료자 사용을 피하라\r 3장 모든 객체의 공통 메서드\r 규칙 8 equals를 재정의할 때는 일반 규약을 따르라 \r규칙 9 equals를 재정의할 때는 반드시 hashCode도 재정의하라 \r규칙 10 toString은 항상 재정의하라 \r규칙 11 clone을 재정의할 때는 신중하라\r규칙 12 Comparable 구현을 고려하라\r 4장 클래스와 인터페이스 91\r 규칙 13 클래스와 멤버의 접근 권한은 최소화하라\r규칙 14 public 클래스 안에는 public 필드를 두지 말고 접근자 메서드를 사용하라\r규칙 15 변경 가능성을 최소화하라\r규칙 16 계승하는 대신 구성하라\r규칙 17 계승을 위한 설계와 문서를 갖추거나, 그럴 수 없다면 계승을 금지하라\r규칙 18 추상 클래스 대신 인터페이스를 사용하라\r규칙 19 인터페이스는 자료형을 정의할 때만 사용하라\r규칙 20 태그 달린 클래스 대신 클래스 계층을 활용하라\r규칙 21 전략을 표현하고 싶을 때는 함수 객체를 사용하라\r규칙 22 멤버 클래스는 가능하면 static으로 선언하라\r 5장 제네릭 \r 규칙 23 새 코드에는 무인자 제네릭 자료형을 사용하지 마라\r규칙 24 무점검 경고(unchecked warning)를 제거하라\r규칙 25 배열 대신 리스트를 써라\r규칙 26 가능하면 제네릭 자료형으로 만들 것\r규칙 27 가능하면 제네릭 메서드로 만들 것\r규칙 28 한정적 와일드카드를 써서 API 유연성을 높여라\r규칙 29 형 안전 다형성 컨테이너를 쓰면 어떨지 따져보라\r 6장 열거형(enum)과 어노테이션\r 규칙 30 int 상수 대신 enum을 사용하라\r규칙 31 ordinal 대신 객체 필드를 사용하라 \r규칙 32 비트 필드(bit field) 대신 EnumSet을 사용하라\r규칙 33 ordinal을 배열 첨자로 사용하는 대신 EnumMap을 이용하라\r규칙 34 확장 가능한 enum을 만들어야 한다면 인터페이스를 이용하라 \r규칙 35 작명 패턴 대신 어노테이션을 사용하라 \r규칙 36 Override 어노테이션은 일관되게 사용하라\r규칙 37 자료형을 정의할 때 표식 인터페이스를 사용하라\r 7장 메서드 \r 규칙 38 인자의 유효성을 검사하라\r규칙 39 필요하다면 방어적 복사본을 만들라\r규칙 40 메서드 시그너처는 신중하게 설계하라\r규칙 41 오버로딩할 때는 주의하라\r규칙 42 varargs는 신중히 사용하라\r규칙 43 null 대신 빈 배열이나 컬렉션을 반환하라 \r규칙 44 모든 API 요소에 문서화 주석을 달라 \r 8장 일반적인 프로그래밍 원칙들 \r 규칙 45 지역 변수의 유효범위를 최소화하라\r규칙 46 for 문보다는 for-each 문을 사용하라 \r규칙 47 어떤 라이브러리가 있는지 파악하고, 적절히 활용하라 \r규칙 48 정확한 답이 필요하다면 float와 double은 피하라 \r규칙 49 객체화된 기본 자료형 대신 기본 자료형을 이용하라\r규칙 50 다른 자료형이 적절하다면 문자열 사용은 피하라 \r규칙 51 문자열 연결 시 성능에 주의하라\r규칙 52 객체를 참조할 때는 그 인터페이스를 사용하라\r규칙 53 리플렉션 대신 인터페이스를 이용하라\r규칙 54 네이티브 메서드는 신중하게 사용하라\r규칙 55 신중하게 최적화하라\r규칙 56 일반적으로 통용되는 작명 관습을 따르라\r 9장 예외 327\r 규칙 57 예외는 예외적 상황에만 사용하라\r규칙 58 복구 가능 상태에는 점검지정 예외를 사용하고, 프로그래밍 오류에는 실행시점 예외를 이용하라\r규칙 59 불필요한 점검지정 예외 사용은 피하라\r규칙 60 표준 예외를 사용하라\r규칙 61 추상화 수준에 맞는 예외를 던져라\r규칙 62 메서드에서 던져지는 모든 예외에 대해 문서를 남겨라\r규칙 63 어떤 오류인지를 드러내는 정보를 상세한 메시지에 담으라\r규칙 64 실패 원자성 달성을 위해 노력하라\r규칙 65 예외를 무시하지 마라\r 10장 병행성 \r 규칙 66 변경 가능 공유 데이터에 대한 접근은 동기화하라\r규칙 67 과도한 동기화는 피하라\r규칙 68 스레드보다는 실행자와 태스크를 이용하라\r규칙 69 wait나 notify 대신 병행성 유틸리티를 이용하라\r규칙 70 스레드 안전성에 대해 문서로 남겨라\r규칙 71 초기화 지연은 신중하게 하라\r규칙 72 스레드 스케줄러에 의존하지 마라\r규칙 73 스레드 그룹은 피하라\r 11장 직렬화 \r 규칙 74 Serializable 인터페이스를 구현할 때는 신중하라\r규칙 75 사용자 지정 직렬화 형식을 사용하면 좋을지 따져 보라\r규칙 76 readObject 메서드는 방어적으로 구현하라\r규칙 77 개체 통제가 필요하다면 readResolve 대신 enum 자료형을 이용하라\r규칙 78 직렬화된 객체 대신 직렬화 프락시를 고려해 보라\r 부록 초판과의 규칙 대조표\r참고자료\r찾아보기\n",
        "isbn10": "8966261167",
        "isbn13": "9788966261161"
    },
    {
        "title": "Java EE 디자인 패턴 (아키텍처를 이해하기 위한 디자인 패턴)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11760372",
        "image": "https://bookthumb-phinf.pstatic.net/cover/117/603/11760372.jpg?type=m1&udate=20170414",
        "author": "무라트 예네르|알렉스 시돔",
        "price": "25000",
        "discount": "22500",
        "publisher": "길벗",
        "pubdate": "20170303",
        "isbn": "1160501289 9791160501285",
        "description": "자바 개발자라면 디자인 패턴은 반드시 알아야 한다. 자바 EE 7에는 싱글톤, 팩토리, 장식자, 옵저버, 퍼사드 같은 GoF의 클래식 패턴은 물론 모델-뷰... 옛 버전 자바 EE와 스프링을 거쳐 현대적으로 다듬어진 자바 EE 7에 포함된 다양한 패턴을 학습하면서 실무에 적용된 디자인 패턴의 모습을 엿볼 수... ",
        "authorIntroContent": "\n무라트 예네르\n저자 : 무라트 예네르저자 : 무라트 예네르저자 무라트 예네르는 인텔(Intel)사 뉴 디바이스 그룹(New Devices)팀에서 안드로이드 개발자로 일하는 코드광이자 오픈 소스 커미터(committer)입니다. 자바, 웹 프레임워크, 자바 EE, OSGi 애플리케이션 분야의 풍부한 개발 경험을 바탕으로 강의와 멘토링도 합니다.저자 : 알렉스 시돔저자 알렉스 시돔은 이-스케이프(E-scape) 그룹의 계열사인 인디고 코드 컬렉티브(indigocodecollective.com)의 자바 개발 팀장으로 마이크로서비스 기반 아키텍처 설계/개발 및 커스텀 복권, 즉석 당첨 게임 플랫폼 개발의 메인 개발자로 활동했습니다.역자 : 이일웅역자 이일웅은 10년 넘게 국내와 미국 등지에서 대기업/공공기관 프로젝트를 수행한 웹 개발자이자 두 딸의 사랑을 한 몸에 받고 사는 행복한 딸바보다. 자바 기반의 서버 플랫폼 구축, 데이터 연계 그리고 다양한 자바스크립트 프레임워크를 응용한 프런트엔드 화면 개발을 주로 담당해왔다. 시간이 날 땐 피아노를 연주한다* 홈페이지 http://www.bullion.pe.kr\n",
        "bookIntroContent": "자바 개발자라면 디자인 패턴은 반드시 알아야 한다. 자바 EE 7에는 싱글톤, 팩토리, 장식자, 옵저버, 퍼사드 같은 GoF의 클래식 패턴은 물론 모델-뷰-컨트롤러(MVC), 의존성 주입, 데이터 접근 객체(DAO), 데이터 전송 객체(DTO) 같은 다양한 패턴이 포함되어 있다. 옛 버전 자바 EE와 스프링을 거쳐 현대적으로 다듬어진 자바 EE 7에 포함된 다양한 패턴을 학습하면서 실무에 적용된 디자인 패턴의 모습을 엿볼 수 있다.",
        "tableOfContentsContent": "\n1장디자인 패턴이란?\r__1.1디자인 패턴이란?\r____1.1.1 패턴의 유래와 필요성\r____1.1.2 패턴의 실제\r__1.2디자인 패턴 입문\r__1.3엔터프라이즈 패턴\r____1.3.1 자바에서 엔터프라이즈 자바로\r____1.3.2 엔터프라이즈 자바 패턴의 출현\r____1.3.3 디자인 패턴과 엔터프라이즈 패턴의 차이점\r____1.3.4 평범한 옛 디자인 패턴이 자바 EE를 만나다\r____1.3.5 안티패턴이 되다\r__1.4정리하기\r 2장자바 EE 기초\r__2.1다중 티어 아키텍처\r__2.2클라이언트 티어\r__2.3미들 티어\r____2.3.1 웹 레이어\r____2.3.2 비즈니스 레이어\r__2.4EIS 티어\r__2.5자바 EE 서버\r__2.6자바 EE 웹 프로파일\r__2.7자바 EE 핵심 원리\r__2.8설정보다 관례\r__2.9컨텍스트와 의존체 주입\r__2.11정리하기\r  2부자바 EE 디자인 패턴 구현\r 3장퍼사드 패턴\r__3.1퍼사드란?\r____3.1.1 퍼사드 클래스 다이어그램\r__3.2일반 자바 코드로 퍼사드 패턴을 구현\r__3.3자바 EE로 퍼사드 패턴을 구현\r____3.3.1 무상태성 빈을 지닌 퍼사드\r____3.3.2 상태성 빈을 지닌 퍼사드\r__3.4언제, 어디에 사용하나?\r__3.5정리하기\r 4장싱글톤 패턴\r__4.1싱글톤이란?\r____4.1.1 싱글톤 클래스 다이어그램\r____4.1.2 일반 자바 코드로 싱글톤 패턴을 구현\r__4.2자바 EE로 싱글톤 패턴을 구현\r____4.2.1 싱글톤 빈\r____4.2.2 시동 시 싱글톤을 사용\r____4.2.3 시동 순서를 결정\r____4.2.4 동시성 관리\r__4.3언제, 어디에 사용하나?\r__4.4정리하기\r 5장의존체 주입과 CDI\r__5.1의존체 주입이란?\r__5.2일반 자바 코드로 DI를 구현\r__5.3자바 EE로 DI를 구현\r____5.3.1 @Named 애너테이션\r____5.3.2 컨텍스트/의존체 주입(CDI)\r____5.3.3 CDI 대 EJB\r____5.3.4 CDI 빈\r____5.3.5 @Inject 애너테이션\r____5.3.6 컨텍스트와 스코프\r____5.3.7 명명법과 EL\r____5.3.8 CDI 빈은 JSF의 기반 빈\r____5.3.9 한정자\r____5.3.10 대안자\r____5.3.11 스테레오타입\r____5.3.12 CDI로 움직이는 패턴들\r__5.4정리하기\r 6장팩토리 패턴\r__6.1팩토리란?\r__6.2팩토리 메서드\r____6.2.1 일반 자바 코드로 팩토리 메서드를 구현\r__6.3추상 팩토리\r____6.3.1 일반 자바 코드로 추상 팩토리를 구현\r__6.4자바 EE로 팩토리 패턴을 구현\r____6.4.1 CDI의 진면목\r__6.5언제, 어디에 사용하나?\r__6.6정리하기\r 7장장식자 패턴\r__7.1장식자란?\r____7.1.1 장식자 클래스 다이어그램\r__7.2일반 자바 코드로 장식자 패턴을 구현\r__7.3자바 EE로 장식자 패턴을 구현\r____7.3.1 XML 설정 없는 장식자\r__7.4언제, 어디에 사용하나?\r__7.5정리하기\r 8장애스팩트지향 프로그래밍(인터셉터)\r__8.1애스팩트 지향 프로그래밍이란?\r__8.2일반 자바 코드로 AOP를 구현\r__8.3자바 EE의 애스팩트, 인터셉터\r____8.3.1 인터셉터의 생애 주기\r____8.3.2 기본-레벨 인터셉터\r____8.3.3 인터셉터 순서\r____8.3.4 CDI 인터셉터\r__8.4언제, 어디에 사용하나?\r__8.5정리하기\r 9장비동기\r__9.1비동기 프로그래밍이란?\r____9.1.1 비동기 패턴\r__9.2일반 자바 코드로 비동기 패턴을 구현\r__9.3자바 EE로 비동기 프로그래밍을 구현\r____9.3.1 비동기 빈\r____9.3.2 비동기 서블릿\r__9.4언제, 어디에 사용하나?\r__9.5정리하기\r 10장타이머 서비스\r__10.1타이머 서비스란?\r__10.2자바 EE로 타이머를 구현\r____10.2.1 자동 타이머\r____10.2.2 프로그램 타이머\r____10.2.3 타이머 표현식\r____10.2.4 트랜잭션\r__10.3정리하기\r 11장옵저버 패턴\r__11.1옵저버란?\r____11.1.1 옵저버 패턴\r____11.1.2 옵저버 클래스 다이어그램\r__11.2일반 자바 코드로 옵저버 패턴을 구현\r__11.3자바 EE로 옵저버 패턴을 구현\r__11.4언제, 어디에 사용하나?\r__11.5정리하기\r 12장데이터 접근 패턴\r__12.1데이터 접근 패턴이란?\r____12.1.1 데이터 접근 클래스 다이어그램\r__12.2데이터 접근 패턴 개요\r____12.2.1 데이터 전송 객체 패턴\r____12.2.2 자바 퍼시스턴스 아키텍처 API와 객체 관계 매핑\r__12.3자바 EE로 데이터 접근 패턴을 구현\r____12.3.1 타입-안전한 DAO 구현체\r__12.4언제, 어디에 사용하나?\r__12.5정리하기\r 13장REST형 웹 서비스\r__13.1REST란?\r__13.2REST의 6대 제약\r____13.2.1 클라이언트-서버\r____13.2.2 일관된 인터페이스\r____13.2.3 무상태\r____13.2.4 캐시 가능\r____13.2.5 계층화 시스템\r____13.2.6 코드 온 디맨드\r__13.3REST API의 리처드슨 성숙도\r____13.3.1 레벨 0: POX(Plain Old XML, 옛날 흔했던 XML) 범벅\r____13.3.2 레벨 1: 리소스\r____13.3.3 레벨 2: HTTP 동사\r____13.3.4 레벨 3: 하이퍼미디어 제어\r__13.4REST형 API 디자인\r____13.4.1 리소스 명명\r____13.4.2 동사가 아닌 명사로\r____13.4.3 자기 서술형으로\r____13.4.4 단수 아닌 복수형으로\r____13.4.5 HTTP 메서드\r____13.4.6 GET\r____13.4.7 POST\r____13.4.8 PUT\r____13.4.9 DELETE\r__13.5실전 REST\r____13.5.1 명사 users\r____13.5.2 명사 topics와 posts\r__13.6자바 EE로 REST를 구현\r__13.7HATEOAS\r__13.8언제, 어디에 사용하나?\r__13.9정리하기\r 14장MVC 패턴\r__14.1MVC 패턴이란?\r____14.1.1 MVC 타입\r__14.2일반 자바 코드로 MVC 패턴을 구현\r__14.3자바 EE로 MVC 패턴을 구현\r__14.4페이스 서블릿\r__14.5FACESSERVLET을 응용한 MVC\r__14.5언제, 어디에 사용하나?\r__14.6정리하기\r 15장나머지 자바 EE 패턴\r__15.1웹소켓이란?\r__15.2메시지 중심 미들웨어란?\r__15.3마이크로서비스 아키텍처란?\r____15.3.1 모놀리식 아키텍처\r____15.3.2 확장성\r____15.3.3 여러 서비스로 해체\r____15.3.4 마이크로서비스의 좋은 점\r____15.3.5 인생에 쉬운 게 있나요\r____15.3.6 결론\r__15.4안티패턴\r____15.4.1 우버 클래스\r____15.4.2 라자냐 아키텍처\r____15.4.3 콜롬버스\r____15.4.4 진짜 도움되는 친구\r____15.4.5 첨단이 최고야\r____15.4.6 유틸리티맨\r 3부총정리\r 16장디자인 패턴의 좋은 점, 나쁜 점, 고약한 점\r__16.1좋은 점: 성공을 향한 패턴\r__16.2나쁜 점: 패턴의 과용 및 오용\r__16.3…그리고 고약한 점\r__16.4정리하기\n",
        "isbn10": "1160501289",
        "isbn13": "9791160501285"
    },
    {
        "title": "비전공자를 위한 자바 프로그래밍 (영어 독해하듯 코드를 읽고 그림으로 쉽게 배우는)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=10527347",
        "image": "https://bookthumb-phinf.pstatic.net/cover/105/273/10527347.jpg?type=m1&udate=20160430",
        "author": "강희은",
        "price": "16000",
        "discount": "14400",
        "publisher": "한빛미디어",
        "pubdate": "20160428",
        "isbn": "8968488150 9788968488153",
        "description": "비전공자나 초급 사용자를 대상으로 한 자바 프로그래밍 입문서. 영어라는 언어와 프로그래밍 언어의 공통점에 착안하여 이 책에서는 자바 코드를 설명할... 것처럼 자바 프로그래밍을 할 수 있게 하였다. 또한, 자바를 조금 더 친숙하게 공부할 수 있도록 자바의 주요 개념을 일상생활에 빗대고, 좀 더 쉽게 이해할... ",
        "authorIntroContent": "\n강희은\n저자 : 강희은저자 강희은은 경영학부를 졸업 후 IT 업계에 사무직으로 종사하다가 프로그래밍에 흥미를 느껴 컴퓨터 공학 대학원에 진학하였다. 아직 대학원생이고 많은 부족함이 있다고 생각하지만, 스스로 공부하며 체득한 컴퓨터 언어를 쉽게 이해하는 방법을 다른 사람들과도 공유할 기회를 얻고 싶어 책을 집필하게 되었다. 현재는 대학원의 한 연구실에서 경영학과 컴퓨터 공학 간의 융합에 대해 고민하고 연구하는 중이다. 한적하고 넓은 공간을 좋아하고 커피보다는 차를 선호한다. 스트레스를 받으면 매운 버섯 샤부샤부를 먹으며, 춤추기 좋은 노래를 즐겨 듣고 장래에는 1년 365일 따뜻한 곳에서 살고 싶은 꿈이 있다.\n",
        "bookIntroContent": "비전공자나 초급 사용자를 대상으로 한 자바 프로그래밍 입문서. 영어라는 언어와 프로그래밍 언어의 공통점에 착안하여 이 책에서는 자바 코드를 설명할 때 영어를 번역하듯 설명하고, 주요 단어를 영어 단어 외우듯 공부함으로써 영작하는 것처럼 자바 프로그래밍을 할 수 있게 하였다. 또한, 자바를 조금 더 친숙하게 공부할 수 있도록 자바의 주요 개념을 일상생활에 빗대고, 좀 더 쉽게 이해할 수 있도록 그림을 곁들여 설명하였다.",
        "tableOfContentsContent": "\nchapter 1 자바 프로그래밍을 시작하면서 \r1.1 컴퓨터의 기초 \r1.2 자바란 \r1.3 자바 프로그램의 작동 원리 \r1.3.1 컴파일과 실행 \r1.3.2 자바 가상 머신 \r1.4 자바 개발환경 구축하기 \r1.4.1 JDK 설치 \r1.4.2 이클립스 설치 \r1.4.3 Welcome to Java World! \r chapter 2 기초 문법 \r2.1 기초 문법 \r2.1.1 데이터 타입 \r2.1.2 변수 \r2.2 여러 가지 연산자 \r2.2.1 산술 연산자 \r2.2.2 비교 연산자 \r2.2.3 논리 연산자 \r2.2.4 데이터 타입의 변환 \r2.2.5 연산자의 우선순위 \r2.3 여러 가지 배열 \r2.3.1 배열 \r2.3.2 다차원 배열 \r2.4 반복문 \r2.4.1 for문 \r2.4.2 while문 \r2.5 조건문 \r2.5.1 if문 \r2.5.2 switch문 \r chapter 3 클래스와 객체 \r3.1 클래스와 객체의 개념 \r3.2 클래스 선언하기 \r3.3 객체의 생성과 사용 \r3.4 메서드 \r3.5 생성자 \r chapter 4 클래스의 상속 \r4.1 상속의 정의 \r4.2 오버라이딩 \r4.3 여러 가지 수식자 \r4.3.1 final \r4.3.2 static \r4.4 추상 클래스 \r4.5 인터페이스 \r4.6 다형성 \r chapter 5 패키지와 접근제어 \r5.1 패키지 \r5.2 접근제어 \r chapter 6 입출력 \r6.1 입출력이란 \r6.2 스트림 \r6.3 파일 쓰고 읽기 \r6.3.1 파일 쓰기 \r6.3.2 파일 읽기 \r6.4 키보드로 입력하기 \r chapter 7 객체의 직렬화 \r7.1 직렬화와 역직렬화 \r7.2 직렬화 클래스 만들기 \r7.3 객체를 직렬화/역직렬화하는 방법 \r chapter 8 멀티스레드 \r8.1 멀티스레드란 \r8.2 멀티스레드 작성 방법 \r8.3 스레드 간의 통신 \r chapter 9 네트워크 \r9.1 네트워크의 기초 \r9.1.1 IP 주소와 포트 번호 \r9.1.2 DNS \r9.1.3 클라이언트와 서버 \r9.2 네트워크 통신 프로그래밍 \r9.2.1 인터넷을 통해 데이터를 주고받을 때 필요한 것들 \r9.2.2 TCP/IP 프로그래밍 \r9.2.3 스레드를 이용한 채팅 프로그램 \r chapter 10 편리한 함수들 \r10.1 수학 관련 함수 \r10.2 문자 관련 함수 \r10.3 시간 관련 함수 \r 마무리하며 \r부록 연습문제와 답\n",
        "isbn10": "8968488150",
        "isbn13": "9788968488153"
    },
    {
        "title": "든든한 Java Programming",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13739800",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/398/13739800.jpg?type=m1&udate=20180622",
        "author": "심재연",
        "price": "24000",
        "discount": "23040",
        "publisher": "연두에디션",
        "pubdate": "20180620",
        "isbn": "1188831089 9791188831081",
        "description": "자바는 오랫동안 사랑받아온 프로그래밍 언어입니다. C언어나 C++보다 어리긴 하지만 세상에 소개된 지 20년 이상 지났습니다. 긴 세월 동안 우여곡절이 많았던 언어이지만 아직도 많은 분야에서 자바 자신의 자리를 굳건히 지키고 있습니다. \n\n자바의 객체지향언어로 JVM을 이용하여 운영체제나 하드웨어로부터... ",
        "authorIntroContent": "\n심재연\n저자 : 심재연삼육대학교 컴퓨터과학과에서 이학사, 서울시립대학교 컴퓨터과학과에서 석·박사 학위를 받았다. 2012년부터 2015년까지 서울시립대학교와 서울 과학기술대학교에서 프로그래밍 강의를 진행하였으며 2015년부터 현재 까지 경동대학교 컴퓨터공학과 조교수로 재직 중이다. 주요 연구 분야는 멀티미디어와 게임, 패턴인식이며 그와 관련 하여 다수의 연구 실적을 발표하였다.\n",
        "bookIntroContent": "어릴 적 APPLE II 컴퓨터로 BASIC을 처음 접해봤을 때 마냥 신기하기만 했었던 컴퓨터 프로그래밍이 저에겐 어느새 생활이 되었습니다.대부분의 사람들이 코딩에 대해 관심도 없던 시절에서 지금은 초등학생 때부터 코딩 교육이 의무화된 시대로 바뀌었습니다. 다양하게 변화된 프로그래밍 기법과 언어들 그리고 빠르게 변화되고 있는 컴퓨터 프로그래밍의 패러다임이 우리의 머리를 복잡하게 합니다. 자바는 오랫동안 사랑받아온 프로그래밍 언어입니다. C언어나 C++보다 어리긴 하지만 세상에 소개된 지 20년 이상 지났습니다. 긴 세월 동안 우여곡절이 많았던 언어이지만 아직도 많은 분야에서 자바 자신의 자리를 굳건히 지키고 있습니다. 자바의 객체지향언어로 JVM을 이용하여 운영체제나 하드웨어로부터 독립적인 장점이 있습니다. 또한 네트워크 프로그래밍을 간단하게 구현할 수 있습니다. 현재 안드로이드의 애플리케이션 프로그램을 제작하기 위해 자바가 사용됩니다. 본 교재는 처음 컴퓨터 프로그래밍을 접하는 학생이나 자바를 처음 시작하는 학생을 위하여 작성되었습니다. 쉽고 연관성 있는 예제를 구성하기 위해 노력하였고 개념에 대한 내용 또한 간결하게 설명하기 위해 힘썼습니다.    대학에서 학생들에게 “프로그래밍 잘하면 뭐가 좋은가요?”라는 질문을 종종 받습니다. 여러 가지 대답이 있을 수 있겠지만 저는 대부분 “프로그래밍을 정말 잘하면 자신이 만들고 싶은, 생각하고 있는 프로그램을 실제로 구현할 수 있다.”라고 이야기 합니다. 프로그램의 구현을 위해 밑바탕이 되는 것은 코딩입니다. 하지만 코딩만 잘한다고 프로그래밍을 잘하는 것은 아닙니다. 프로그래밍을 잘하기 위해 언어의 습득뿐만 아니라 다양한 프로그램 기법과 문법의 이해, 알고리즘의 활용과 같은 다양한 기술이 필요합니다. 프로그래머는 프로그래밍을 잘해야 합니다. 이 책이 여러분들이 프로그래머로 자라나는데 조그만 도움이 됐으면 합니다.",
        "tableOfContentsContent": "\nCHAPTER 1 Welcome to JAVA world 1\r1.1 자바의 시작 3\r1.2 자바의 설치 4\r1.3 개발 환경 6\r1.4 자바의 기본 화면 입출력 15\r1.5 주석처리 18\r연습문제 20\r CHAPTER 2 변수와 연산자 23\r2.1 변수의 선언 25\r2.1.1 정수의 선언 27\r2.1.2 실수의 선언 28\r2.1.3 문자의 선언 30\r2.1.4 논리 값의 선언 31\r2.2 숫자 데이터의 타입의 범위와 오버플로우 그리고 2의 보수 32\r2.3 숫자 데이터의 타입 변환 35\r2.4 연산자 38\r2.4.1 산술연산자 38\r2.4.2 증감연산자 40\r2.4.3 대입연산자 42\r2.4.4 비교연산자 42\r2.4.5 논리연산자 44\r2.4.6 비트연산자 46\r2.4.7 삼항연산자 50\r2.4.8 연산자우선순위 51\r연습문제 53\r CHAPTER 3 조건문과 반복문 55\r3.1 조건문 57\r3.1.1 if문 57\r3.1.2 switch문 67\r3.2 반복문 74\r3.2.1 while문 74\r3.2.2 do-while문 77\r3.2.3 for문 80\r3.3 무한반복과 break, continue 84\r연습문제 87\r CHAPTER 4 배열과 문자열 89\r4.1 배열 91\r4.2 다차원 배열 100\r4.3 ArrayList 103\r4.4 문자열 106\r연습문제 114\r CHAPTER 5 메서드 115\r5.1 메서드의 구조 117\r5.2 메서드와 매개변수 119\r5.3 메서드와 변수의 범위 122\r5.4 메서드 오버로드 125\r5.5 순환 메서드(재귀함수) 128\r5.6 자바에서 이미 정의된 메서드의 사용(수학 메서드) 133\r연습문제 138\r CHAPTER 6 클래스 141\r6.1 객체지향 143\r6.2 클래스와 객체 143\r6.3 클래스의 구성요소 144\r6.4 접근 제어지시자 150\r6.5 생성자 154\r6.6 static 인스턴스 변수 161\r6.7 내부 클래스 164\r연습문제 169\r CHAPTER 7 상속 171\r7.1 상속의 개념 176\r7.2 클래스의 상속 180\r7.3 메소드 오버라이드 186\r CHAPTER 8 추상화 클래스와 인터페이스 191\r8.1 추상화 메소드 193\r8.2 추상화 클래스 193\r8.3 인터페이스 198\r연습문제 210\r CHAPTER 9 예외 처리 213\r9.1 프로그램의 위험요소 파악하기 215\r9.2 try, catch, throws 217\r9.3 다중 예외 처리하기 220\r9.4 예외를 처리하는 방법 222\r CHAPTER 10 파일 입출력 227\r10.1 입출력 스트림 229\r10.2 파일의 생성 및 저장 229\r10.3 파일의 출력 241\r10.4 Date을 이용한 Log파일 만들기 246\r연습문제 250\r CHAPTER 11 쓰레드 251\r11.1 쓰레드란 253\r11.2 쓰레드의 생성 254\r11.3 쓰레드의 실행 및 제어 256\r11.4 멀티 쓰레드 259\r11.5 동기화 263\r CHAPTER 12 네트워크 269\r12.1 네트워크의 기초 271\r12.2 소켓 272\r12.3 UDP 290\r CHAPTER 13 GUI 295\r13.1 화면의 구성과 동작 297\r13.2 그래픽 309\r13.3 이미지 311\r13.4 이벤트 처리 313\r연습문제 323\r CHAPTER 14 게임제작 325\r14.1 테트리스 327\r14.2 핑퐁게임 337\r INDEX 347\r\n",
        "isbn10": "1188831089",
        "isbn13": "9791188831081"
    },
    {
        "title": "자바 머신 러닝 마스터 (실무 중심의 자바 기반 머신 러닝 활용법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14642216",
        "image": "https://bookthumb-phinf.pstatic.net/cover/146/422/14642216.jpg?type=m1&udate=20191010",
        "author": "우다이 카마스|크리슈나 쵸펠라",
        "price": "38000",
        "discount": "34200",
        "publisher": "에이콘출판",
        "pubdate": "20190327",
        "isbn": "1161752854 9791161752853",
        "description": "등 주요 오픈 소스 자바 도구의 활용 방법을 소개한다. 분석 예제로 UCI HORSECOLIC 데이터세트, MNIST 손글씨 이미지 데이터세트, ELEC 전기 데이터세트, UCI BREAST CANCER WISCONSIN 데이터세트, UCI ADULT 데이터세트, REUTERS-21578 데이터세트, UCI COVERTYPE 데이터세트를 이용한다.",
        "authorIntroContent": "\n우다이 카마스\n저자 : 우다이 카마스BAE 시스템 응용 지능 부서의 책임 데이터 과학자로서, 확장성 높은 머신 러닝을 주로 연구하며 AML, 금융 범죄 관련 사기 행동 감지, 사이버 보안, 생체정보학 등의 분야에서 20년간 종사해 왔다. BAE AI 부서에서 소비자 행동, 소셜 네트워킹, 빅데이터 머신 러닝에 특화된 다수의 핵심 제품 개발 팀을 이끌고 있다. 조지 메이슨 대학교에서 빅데이터 머신 러닝과 자동화된 시퀀스 마이닝 분야의 석학인 케네스 드 용 교수(DR. KENNETH DE JONG)의 지도하에 박사 학위를 받았다.저자 : 크리슈나 쵸펠라20년차 자바 개발자로서, BAE 시스템 응용 지능 부서에서 분석용 클라이언트 솔루션을 개발하며 데이터 과학, 기능적 프로그래밍, 분산 컴퓨팅 환경에 대해 연구한다.역자 : 동준상2010년 이후 ICT 혁신기술 사업화 프로젝트에 참여해 왔으며, AI, 클라우드 기반 서비스와 플랫폼 구현 및 사업화와 관련된 리서치, 심사, 컨설팅 업무를 한다. 2015년 이후 국가정보자원관리원, 한국정보화진흥원 등 주요 정보화 기관에서 AI 기반 프로젝트 수행을 주제로 강연을 하고 있다. 『머신 러닝 인 자바』(2017, 에이콘), 『스위프트 데이터 구조와 알고리즘』(2017, 에이콘) 외 십여 권의 번역서가 있다.홈페이지: HTTP://WWW.NEXTPLATFORM.NET/\n",
        "bookIntroContent": "데이터 과학 분야의 중급 및 고급 개발자 알아야 할 데이터 분석, 러닝 알고리즘, 모델 성능 평가, 지도식 및 비지도식 학습, 클러스터링과 이상점 감지, 반지도 학습 등 다양한 주제를 상세히 소개하며, WEKA, RAPIDMINER, SMILE API, ELKI, JKERNELMACHINES, KEEL, JCLAL, OPENMARKOV, MALLET, KNIME, H2O, SPARK MLLIB, SAMOA 등 주요 오픈 소스 자바 도구의 활용 방법을 소개한다. 분석 예제로 UCI HORSECOLIC 데이터세트, MNIST 손글씨 이미지 데이터세트, ELEC 전기 데이터세트, UCI BREAST CANCER WISCONSIN 데이터세트, UCI ADULT 데이터세트, REUTERS-21578 데이터세트, UCI COVERTYPE 데이터세트를 이용한다.",
        "tableOfContentsContent": "\n1장. 머신 러닝의 개요\r 머신 러닝의 역사와 정의\r머신 러닝에 대한 오해: 머신 러닝이 아닌 것은?\r머신 러닝의 핵심 개념과 주요 용어\r머신 러닝에 활용되는 다양한 데이터 타입과 서브타입\r머신 러닝에 활용되는 데이터세트\r산업 부문별 머신 러닝 응용 분야와 알고리즘\r머신 러닝의 실무적인 과제\r머신 러닝 전문가와 구현 프로세스\r머신 러닝 전문가 \r머신 러닝 프로세스 \r머신 러닝 도구와 데이터세트\r머신 러닝 데이터세트\r정리\r 2장. 지도학습에 대한 실무적인 접근\r 지도학습에 사용되는 용어와 표기법\r데이터 품질 분석\r기술적(설명적) 데이터 분석\r시각화 분석\r데이터 변환 및 전처리\r추가적인 특성 \r누락값 처리\r이상점\r이산화\r데이터 표본추출\r모델 훈련, 검증, 그리고 테스트 데이터세트\r특성 관계 분석과 차원 감소\r특성 검색 기술\r특성 평가 기법\r랩퍼 기법\r임베드 접근법\r모델 만들기\r선형 모델\r비선형 모델\r앙상블 학습과 메타학습 모델\r모델 평가, 검증, 비교\r모델 평가\r모델 검증 매트릭스\r머신 러닝 모델 간의 비교\r사례 연구 - 말의 복통 분류\r비즈니스 문제 정의\r머신 러닝 맵핑\r데이터 분석\r지도학습 실험\r결과, 관찰, 그리고 분석\r정리\r 3장. 비지도식 머신 러닝 기법\r 지도식 머신 러닝 기법의 주요 이슈\r비지도식 머신 러닝 기법의 주요 이슈\r특성 분석과 차원 감소\r표기법\r선형 차원 감소 기법\r비선형 차원 감소 기법\r클러스터링\r클러스터링 알고리즘\r스펙트럴 클러스터링\r어피니티 전파 \r클러스터링 검증 및 평가 \r이상점 또는 특이점 감지 기법 \r이상점 감지 알고리즘 \r이상점 평가 기법\r실무 사례 분석\r도구와 소프트웨어\r비즈니스 문제 정의\r머신 러닝 맵핑\r데이터 수집 \r데이터 품질 분석\r데이터 샘플링 및 변환\r특성 분석 및 차원 감소\r클러스터링 모델, 결과, 그리고 평가 \r이상점 모델 구현 결과 및 평가 \r정리 \r 4장. 반지도 학습 및 능동 학습\r 반지도 학습 \r기본적인 수식 및 표현, 가정\r반지도 학습 기법\r반지도 학습 실무 사례 분석\r능동 학습 \r기본 표현과 수식\r능동 학습 시나리오\r능동 학습 절차\r버전 공간 표본추출\r데이터 분포 표본추출\r능동 학습 실무 사례 분석\r도구와 소프트웨어\r비즈니스 문제 정의\r머신 러닝 맵핑\r데이터 수집\r데이터 샘플링 및 변환\r특성 분석 및 차원 감소\r모델, 결과, 평가\r능동 학습 결과 분석\r정리 \r 5장 .실시간 스트림 머신 러닝\r 스트림 기반 학습의 기본 가정 및 수학적 표현\r기본 스트림 처리 및 연산 기법\r스트림 연산\r슬라이딩 윈도우\r표본추출 \r컨셉 드리프트와 드리프트 감지\r데이터 관리 기법\r감지 기법\r증가형 지도 학습\r모델 구현 방법\r온라인 설정에서의 모델 검증, 평가, 비교\r클러스터링을 활용한 증가형 비지도 학습\r모델 구현 기법\r이상점 감지를 위한 비지도 학습\r이상점 감지를 위한 파티션 기반 클러스터링\r이상점 감지를 위한 거리 기반 클러스터링\r스트림 기반 학습의 실무 사례\r도구 및 소프트웨어\r비즈니스 문제 정의\r머신 러닝 맵핑\r데이터 수집\r표본추출 및 변환\r모델, 결과, 평가\r스트림 기반 학습 결과 분석\r정리 \r 6장. 확률적 그래프 모델 구현\r 확률 복습\r확률의 개념\r그래프의 개념\r그래프 구조 및 기본 속성\r서브그래프와 클리닉\r패스, 트레일, 사이클\r베이지안 네트워크 \r수학적 표현\r추론\r베이지안 네트워크에서의 학습\r학습 파라미터 \r마코프 네트워크와 조건부 랜덤 필드\r수학적 표현\r마코프 네트워크에서의 추론\r마코프 네트워크에서의 학습\r조건부 랜덤 필드\r특화된 네트워크\r트리 강화 네트워크\r마코프 체인\rHMM의 최고 확률 경로\rHMM의 사후 복호화\r도구와 활용 방법 \r오픈마코프 \rWeka 베이지안 네트워크 GUI\r실무 사례 분석\r비즈니스 문제 정의\r머신 러닝 맵핑\r표본추출 및 데이터 변환\r특성 분석\r모델, 결과, 평가\r결과 분석\r정리\r 7장. 딥러닝\r 다층 피드포워드 신경망 기법\r입력값, 뉴론, 활성화 함수, 수학적 표현\r다층 신경망 \r신경망 기법의 한계\r기울기 사라짐, 지역 최적화, 훈련 지연 문제\r딥러닝\r딥러닝의 주요 개념\r사례 분석 \r도구와 소프트웨어\r비즈니스 문제\r머신 러닝 맵핑\r표본추출 및 데이터\r특성 분석\r모델, 결과, 평가\r정리 \r 8장. 텍스트 마이닝과 자연어 처리\r NLP, 하위 분야 및 주요 임무\r텍스트 범주화(카테고리화)\r음성 태깅 \r텍스트 클러스터링\r정보 추출 및 개체명 인식\r감정 분석 및 오피니언 마이닝\r대용어 또는 동일지시어 해소\r어휘 중의성 해소\r기계 번역\r시멘틱(의미론적) 논증 및 추론\r텍스트 자동 요약\r자동화된 질문과 답변\r비정형 데이터 마이닝의 당면 과제\r텍스트 처리 요소와 변환\r문서 수집 및 표준화\r토큰화 \r중지 단어 제거\r어간 단어 표기\r지역 및 전역 사전 생성\r특성 추출 및 생성\r특성의 대표성 및 유사성\r특성 선택 및 차원 감소 기법\r텍스트 마이닝에서의 토픽 선정\r텍스트 카테고리화 및 텍스트 분류\r토픽 모델링\r텍스트 클러스터링\r클러스터링 기법\r개체명 인식\rNER을 위한 은닉 마코프 모델\r딥러닝과 NLP\rNLP 분석 도구와 활용 방법\r맬릿을 이용한 토픽 모델링 \r비즈니스 문제 정의\r머신 러닝 맵핑\r데이터 수집\r표본추출 및 변환\r특성 분석 및 차원 감소\r모델, 결과, 평가\r텍스트 처리 결과 분석\r정리\r 9장. 빅데이터 분석을 위한 머신 러닝의 첨단 도구\r 빅데이터의 특징 \r빅데이터 분석을 위한 머신 러닝\r범용 빅데이터 프레임워크\r배치형 빅데이터 머신 러닝\r빅데이터 머신 러닝 플랫폼 - H2O\r사례 분석\r비즈니스 문제 정의\r머신 러닝 맵핑\r데이터 수집\r데이터 추출 및 변환\r빅데이터 머신 러닝 플랫폼 - Spark MLlib\r실시간형 빅데이터 머신 러닝\r실시간 빅데이터 머신 러닝 프레임워크 - SAMOA\r머신 러닝 알고리즘\r도구와 활용\r실험, 결과, 그리고 분석\r머신 러닝의 미래\r정리\r 부록 A. 선형 대수학\r 벡터\r벡터의 스칼라 곱\r행렬\r행렬 변환 \r행렬의 특이값 분해 \r 부록 B. 확률\r 확률의 공리\r베이즈 이론 \r확률 밀도 측정 \r평균\r분산 \r표준편차 \r가우시안 표준편차 \r공분산 \r상관관계 상관계수 \r이항 분포 \r푸와송 분포 \r가우시안 분포 \r중심극한정리 \r오류 전파\n",
        "isbn10": "1161752854",
        "isbn13": "9791161752853"
    },
    {
        "title": "R과 Java로 크롤링하자",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11665172",
        "image": "https://bookthumb-phinf.pstatic.net/cover/116/651/11665172.jpg?type=m1&udate=20170303",
        "author": "노규성|김진화|박성택|김근원|김도연",
        "price": "20000",
        "discount": "18000",
        "publisher": "생능출판사",
        "pubdate": "20170217",
        "isbn": "8970509038 9788970509037",
        "description": "전통적으로 비즈니스 운영상 발생하는 데이터들은 거래 처리 데이터 및 각종 실적 데이터 등과 같은 정형 데이터이다. 최근에는 다양한 멀티미디어 기반의 데이터 및 소셜기반의 소셜 데이터, 센서와 위치 기반의 사물 인터넷 등의 정형/비정형 데이터도 폭넓게 생성되고 있다. 최근들어 비정형데이터에... ",
        "authorIntroContent": "\n노규성\n저자 : 노규성저자 노규성은현) 선문대학교 경영학과 비즈니스데이터과학 교수안전행정부 정부3.0컨설팅단 컨설팅위원(빅데이터부문)한국디지털정책학회 회장스마트융합학술전국연합 의장한국소프트웨어기술인협회 회장저자 : 김진화저자 김진화는 현) 서강대학교 경영학과(경영전문대학원) 교수한국지능정보시스템학회 회장국제미래학회 미래경영예측 위원장데이터 사이언스 & 아트 포럼 회장한국빅데이터학회 부회장저자 : 박성택저자 박성택은 현) 한국소프트웨어기술인협회 빅데이터 교수한국디지털정책학회 이사한국융합학회 이사충북대학교 경영대학 경영정보학과 연구교수성균관대학교 박사후연구원저자 : 김근원저자 김근원은 현) 한국소프트웨어기술인협회 빅데이터 연구원서강대학교 대학원 경영학과 석사과정저자 : 김도연저자 김도연은 현) 한국환경정책평가연구원 빅데이터연구팀 연구원충북대학교 대학원 정보보호경영학과 석사한국직업능력개발원 위촉연구원\n",
        "bookIntroContent": "전통적으로 비즈니스 운영상 발생하는 데이터들은 거래 처리 데이터 및 각종 실적 데이터 등과 같은 정형 데이터이다. 최근에는 다양한 멀티미디어 기반의 데이터 및 소셜기반의 소셜 데이터, 센서와 위치 기반의 사물 인터넷 등의 정형/비정형 데이터도 폭넓게 생성되고 있다. 최근들어 비정형데이터에 대한 관심이 점차 증가하고 있고, 웹(페이지) 상에서 텍스트 데이터를 그대로 가져와서 데이터를 추출하는 크롤링에 대한 관심이 증가하고 있다.크롤링을 하기 위한 방법으로 PYTHON, RUBY 등의 프로그래밍 언어를 사용하는 방법도 있으나, 이를 위해서는 프로그래밍 언어에 대한 기본적인 지식이 필요하기 때문에 초보자들이 접근하기에는 상당한 어려움이 따른다. 따라서 이 책 [R과 JAVA로 크롤링하자]는 초보자들도 쉽게 따라 할 수 있는 R과 JAVA를 활용하여 실습과정을 직접 따라해 보면서 크롤링에 대한 이해와 실전 능력을 향상하도록 했다.",
        "tableOfContentsContent": "\nPART 01 시작하기\r CHAPTER 01 비정형 데이터 \r1. 비정형 데이터 분석 \r1.1 비정형 데이터의 이해 \r1.2 비정형 데이터 분석과 마이닝 \r1.3 비정형 데이터 분석의 중요성 \r2. 텍스트 마이닝 \r2.1 텍스트 마이닝의 이해 \r2.2 텍스트 마이닝의 처리 과정 \r2.3 텍스트 마이닝의 기법 \r3. 소셜 데이터 마이닝 \r3.1 소셜 데이터 마이닝의 이해 \r3.2 소셜 데이터 마이닝의 활용 \r CHAPTER 02 R 시작하기 \r1. R 설치 및 실행 \r2. R스튜디오(RStudio) \r2.1 R스튜디오 설치 방법 \r2.2 R스튜디오 기본 설정 \r3. JAVA 설치 및 환경 변수 설정 \r3.1 JAVA 설치 방법 \r3.2 JAVA 환경 변수 설정 방법 \r PART 02 JAVA를 활용하여 크롤링하기\r CHAPTER 03 이클립스와 Jsoup 설치하기 \r1. 이클립스(eclips) 설치하기 \r2. Jsoup 설치하기 \r CHAPTER 04 네이버 뉴스 크롤링하기 \r1. URL 정리하기 \r2. URL 연결하기 \r3. 네이버 뉴스 기사 본문 크롤링 \r4. text로 글 정제하기 \r5. 본문 외의 크롤링 \r6. Fiddler \r6.1 Fiddler 설치 \r6.2 Fiddler로 헤더 값 확인 \r6.3 Fiddler로 확인한 헤더정보 입력 \r6.4 Fiddler (결과창) \r7. Attr 함수 \r8. 지금까지 결과(한 페이지 크롤링) \r10. While문 \r11. 지금까지 한 결과(여러 페이지 크롤링) \r CHAPTER 05 네이버 블로그 크롤링하기 \r1. 블로그 한 페이지 크롤링 \r2. 파싱할 사이트의 URL 입력 \r2.1 숨어 있는 진짜 URL 입력 \r2.2 숨어 있는 진짜 URL 결과 확인 \r2.3 URL 완성 \r3. 블로그 페이지 번호 \r3.1 블로그 페이지 번호(소스 입력) \r3.2 블로그 페이지 번호 \r3.3 블로그 페이지 번호 \r4. 블로그 본문 크롤링 \r4.1 블로그 본문 크롤링 \r5. 파싱할 사이트의 URL 입력 \r6. Fiddler로 확인한 헤더정보 입력 \r7. 링크 주소 확인 \r7.1 링크 주소 입력 \r8. For문 \r9. If문 \r10. 지금까지 결과 \r11. While문(여러 페이지) \r11.1 While문 시작 \r11.2 While문 닫기 \r PART 03 R을 활용하여 크롤링하기\r CHAPTER 06 다음(Daum) 영화 네티즌 리뷰 \r CHAPTER 07 네이버(Naver) 영화 네티즌 리뷰 \r CHAPTER 08 트위터 크롤링 \r CHAPTER 09 네이버 뉴스 크롤링 \r PART 04 데이터 분석 및 시각화\r CHAPTER 10 데이터 분석(정제) \r CHAPTER 11 텍스트마이닝(R 패키지 활용) \r1. 실습데이터 및 패키지 준비 \r2. 한글 사전 설정 \r3. 단어 추출하기 \r4. 단어 추출 조건 지정하기 \r5. 단어 추출 정제하기 \r6. 워드클라우드 \r7. 시각화 \r8. 연관어 분석 \r9. 단어 추출 및 트랜잭션 생성 \r10. 단어 간 연관 규칙 산출 \r11. 시각화 \r12. 단어 근접 중심성 파악 \r CHAPTER 12 시각화 \r1. Tagxdo \r2. Worditout \r3. Pajek \r3.1 설치하기 \r3.2 Pajek 간단한 네트워크 만들기 \r3.3 Pajek 메르스 감염경로 확인해 보기 260\n",
        "isbn10": "8970509038",
        "isbn13": "9788970509037"
    },
    {
        "title": "자바로 쉽게 배우는 알고리즘",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=15433267",
        "image": "https://bookthumb-phinf.pstatic.net/cover/154/332/15433267.jpg?type=m1&udate=20190910",
        "author": "이충기",
        "price": "20000",
        "discount": "19400",
        "publisher": "배움터",
        "pubdate": "20190902",
        "isbn": "898938379X 9788989383796",
        "description": "알고리즘은 컴퓨터보다 훨씬 더 폭넓게 쓰이고 있고 컴퓨터가 나오기 훨씬 이전부터 사용되어 왔다. 실제로 알고리즘은 4차산업혁명의 중심이 되는 소프트웨어 분야에서 핵심 역할을 담당하고 있다. 수년 전에 딥마인드가 개발한 인공지능 바둑 프로그램인 알파고가 등장하여 세계 최고 수준의 프로 바둑... ",
        "authorIntroContent": "\n이충기\n저자 : 이충기1979년 서울대학교 계산통계학과(이학사)1981년 서울대학교 계산통계학과(이학석사)1993년 조지아공과대학교 전산과학대학(전산학박사)1994 ~ 1996 한국전산원 전산망 표준본부 선임연구원2000 ~ 2001 명지대학교 정보통신교육연구센터 센터장2003 ~ 2004 조지아공과대학교 전산과학대학 방문교수2010 ~ 2011 퍼듀대학교 컴퓨터과학과 방문교수1996 ~ 현재 명지대학교 컴퓨터공학과 교수관심분야 | 모바일 컴퓨팅, 공학 교육E - MAIL | CKLEE@MJU.AC.KR\n",
        "bookIntroContent": "알고리즘은 컴퓨터보다 훨씬 더 폭넓게 쓰이고 있고 컴퓨터가 나오기 훨씬 이전부터 사용되어 왔다. 실제로 알고리즘은 4차산업혁명의 중심이 되는 소프트웨어 분야에서 핵심 역할을 담당하고 있다. 수년 전에 딥마인드가 개발한 인공지능 바둑 프로그램인 알파고가 등장하여 세계 최고 수준의 프로 바둑 기사들을 모두 이겨서 세상을 깜작 놀라게 하였다. 알파고가 사람이 도저히 이길 수 없는 막강한 실력을 갖춘 것은 강화 학습이라는 알고리즘에 기인한다. 구글 브라우저가 전 세계의 브라우저 시장을 완전히 장악한 것도 구글이 사용한 검색 알고리즘의 뛰어난 성능때문이다. 알고리즘은 인공지능, 5G, IOT, 자율 주행, 블록 체인, 빅 데이터 분석 등과 같은 최첨단 기술의 핵심이라고 볼 수 있다.",
        "tableOfContentsContent": "\n1장 알고리즘 소개 1.1 알고리즘이란? 1.2 알고리즘적 문제 해결 과정 1.3 알고리즘의 표현 1.4 알고리즘의 분류 2장 알고리즘의 효율성 분석 2.1 알고리즘 분석 체계 2.2 시간 복잡도 2.3 복잡도의 점근적 표기 2.4 비재귀 알고리즘의 효율성 분석 2.5 재귀 알고리즘의 효율성 분석 3장 정렬 알고리즘 3.1 선택 정렬 3.2 삽입 정렬 9 3.3 힙 정렬 4장 기본적인 그래프 알고리즘 4.1 그래프의 표현 4.2 깊이 우선 탐색 4.3 너비 우선 탐색 4.4 위상 정렬 5장 분할 정복 5.1 최댓값과 최솟값 찾기 5.2 합병 정렬 5.3 빠른 정렬 5.4 선택 5.5 분할 정복이 부적절한 경우 6장 동적 계획 6.1 막대 자르기 6.2 연속 행렬 곱셈 6.3 모든 쌍 최단 경로 찾기 6.4 배낭 채우기 7장 탐욕 기법 7.1 거스름돈 주기 7.2 최소 비용 신장 트리 찾기 7.3 단일 출발점 최단 경로 찾기 7.4 배낭 빈틈없이 채우기 8장 NP - 완전 8.1 문제의 분류 8.2 결정 문제와 최적화 문제 8.3 NP 8.4 NP-완전 8.5 NP-완전 문제 9장 되추적 9.1 상태공간트리 3 7 9.2 순열 생성 9.3 해밀토니안 회로 찾기 9.4 그래프 색칠하기 10장 분기한정 10.1 최선 우선 탐색 10.2 배낭 채우기 10.3 일 배정 11장 근사 알고리즘 11.1 정점 커버 찾기 11.2 외판원 문제 참고 문헌 찾아보기\n",
        "isbn10": "898938379X",
        "isbn13": "9788989383796"
    },
    {
        "title": "실무에서 바로 통하는 자바 (당장 현장에 투입된 초보 개발자를 위한 Java 입문서 / Java 8 대응)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12181916",
        "image": "https://bookthumb-phinf.pstatic.net/cover/121/819/12181916.jpg?type=m1&udate=20170709",
        "author": "다케다 하루키|와타나베 유지|사토 다이치|다다 다케아키|가미카와 노부히코",
        "price": "28000",
        "discount": "25200",
        "publisher": "한빛미디어",
        "pubdate": "20170701",
        "isbn": "8968488622 9788968488627",
        "description": "기초부터 테스트, 팀 개발까지 실무에 최적화한 자바 입문서!이 책은 실무에 곧바로 뛰어들어야 하는 초보 자바개발자를 위한 책입니다. 현장 개발자로 활동하며 신입사원을 교육한 저자들이 실무에 꼭 필요한 내용만 담았습니다. 자바 핵심 문법은 물론이고 데이터베이스, 테스트, 성과물 관리까지 자바... ",
        "authorIntroContent": "\n다케다 하루키\n저자 : 다케다 하루키저자 다케다 하루키는 비브레이크 시스템즈에 2014년 입사했으며 오늘도 현장에서 활약하는 프로그래머다. 자바뿐만 아니라 전자공작 등 하드웨어 쪽 기사도 집필한다. 최근에는 JAVAFX를 공부 중이다.저자 : 와타나베 유지저자 와타나베 유지는 비브레이크 시스템즈에 2015년 입사했으며 이 업계에 들어와 자바 외길을 걸었다. 취미는 요리이고 휴일에는 훈제를 만든다.저자 : 사토 다이치저자 사토 다이치는 비브레이크 시스템즈에 2011년 입사했으며 시스템 아키텍트를 목표로 공부 중인 프로그래머다. 좋아하는 음식은 라멘이다.저자 : 다다 다케아키저자 다다 다케아키는 비브레이크 시스템즈에 2008년 입사했다. 저서로 『누구나 하는 안드로이드 애플리케이션 제작』이 있다. 프로그래머 겸 작가로서 폭넓게 활동 중이며, 비브레이크 시스템즈 집필팀을 모아 후진 양성에 힘쓰고 있다.저자 : 가미카와 노부히코저자 가미카와 노부히코는 1997년 조치 대학 대학원 수료 후 히타치제작소에 입사했으며 2002년 비브레이크 시스템즈 설립에 참여했다. 이후 자바 시스템 개발을 중심으로 여러 분야에 손대고 있다. 사내 연수와 사내 인프라 운용도 담당한다. 최근에는 비브레이크 시스템즈 설립 무렵 태어난 아들이 자바에 흥미를 보여 조금 흐뭇하다.역자 : 김성훈역자 김성훈은 첫 직장에서 과외 업무로 두꺼운 매뉴얼을 1년 내내 번역한 것을 시작으로, 지금은 IT 서적을 주로 번역하는 전문 번역가로 활동 중이다. 번역서로는 『C가 보이는 그림책』, 『프로그램이 보이는 그림책』 등의 그림책 시리즈, 『게임 프로그래밍의 정석』, 『OBJECTIVE-C 프로그래밍』, 『구글을 지탱하는 기술』, 『소프트웨어 설계 테크닉』, 『UML 모델링의 본질』 등이 있다.\n",
        "bookIntroContent": "기초부터 테스트, 팀 개발까지 실무에 최적화한 자바 입문서!이 책은 실무에 곧바로 뛰어들어야 하는 초보 자바개발자를 위한 책입니다. 현장 개발자로 활동하며 신입사원을 교육한 저자들이 실무에 꼭 필요한 내용만 담았습니다. 자바 핵심 문법은 물론이고 데이터베이스, 테스트, 성과물 관리까지 자바 애플리케이션 개발에 필요한 기초 지식 전반을 학습합니다.",
        "tableOfContentsContent": "\n1장 자바 기초 지식\r1.1 자바 시작하기\r1.2 개발 환경 구축\r1.3 자바의 기본\r1.4 기본적인 계산\r1.5 자료형\r1.6 비교 연산\r1.7 조건 분기\r1.8 클래스와 인터페이스\r1.9 제네릭\r1.10 람다식\r 2장 프로그래밍 기초\r2.1 문자열 조작\r2.2 날짜 및 시간 조작\r2.3 집합체\r2.4 Apache-Commons\r 3장 데이터베이스\r3.1 데이터베이스 기초\r3.2 데이터베이스 환경 구축\r3.3 SQL의 기본\r3.4 데이터베이스 접속\r3.5 트랜잭션\r3.6 파라미터 지정 SQL 처리\r3.7 ORM으로 쾌적한 데이터베이스 프로그래밍\r 4장 텍스트 입출력\r4.1 텍스트 파일 읽기\r4.2 텍스트 파일 쓰기\r4.3 CSV 파일의 입출력\r4.4 XML 다루기\r4.5 로그 출력\r 5장 스레드\r5.1 멀티 스레드 처리\r5.2 스레드 세이프란\r5.3 Stream API의 병렬 처리\r 6장 테스트\r6.1 테스트 기초 지식\r6.2 JUnit\r6.3 자주 사용하는 테스트 도구\r 7장 팀 개발\r7.1 팀 개발이란\r7.2 성과물 관리 - 버전 관리\r7.3 과정 공유 - 작업 관리\r7.4 작업 자동화 - CI\r 찾아보기\n",
        "isbn10": "8968488622",
        "isbn13": "9788968488627"
    },
    {
        "title": "Practical 자바 유틸리티 (Git, 서브버전, 메이븐, 그레이들, JUnit, 트랙, 젠킨스, JMeter)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11102445",
        "image": "https://bookthumb-phinf.pstatic.net/cover/111/024/11102445.jpg?type=m1&udate=20170911",
        "author": "장윤기",
        "price": "28000",
        "discount": "25200",
        "publisher": "인사이트",
        "pubdate": "20160930",
        "isbn": "8966261949 9788966261949",
        "description": "실무에 바로 적용해볼 수 있는 자바 개발 환경 구축 노하우1995년 등장 이래 가장 대중적인 프로그래밍 언어가 된 자바는 그 오랜 세월만큼이나 널리... 이러한 깊이 있는 저변 확대가 가능했던 것은 언어 자체의 뛰어남도 있지만 자바 프로젝트를 도와주는 많은 오픈 소스 유틸리티와 소프트웨어 들이 있었기... ",
        "authorIntroContent": "\n장윤기\n저자 : 장윤기저자 장윤기는 1세대 자바 개발자로 1995년 JDK 베타버전을 내려받는 것으로 자바와 첫 인연을 맺었다. 정보는 서로 공유할 때 가치가 커진다고 생각하며 이를 실천하기 위해 초창기 PC 통신 자바 개발자 동호회에서 세미나와 Q & A를 진행하였다. 이를 계기로 『마이크로소프트웨어』, 『프로그램세계』, 『EWEEK』 등의 잡지에 자바를 포함한 IT 관련 글을 기고했다. 프로젝트를 어떻게 효율적으로 잘 진행할 것인지에 관심이 많다. 집필서로는 『허드슨을 이용한 지속적 통합』, 『서블릿과 JSP를 이용한 자바 웹 프로그래밍』, 『JSP 고수 따라하기』가 있다.\n",
        "bookIntroContent": "실무에 바로 적용해볼 수 있는 자바 개발 환경 구축 노하우1995년 등장 이래 가장 대중적인 프로그래밍 언어가 된 자바는 그 오랜 세월만큼이나 널리 사용되고 있고 다양한 서비스, 기업, 업종에서 깊이 있게 활용되고 있다. 이러한 깊이 있는 저변 확대가 가능했던 것은 언어 자체의 뛰어남도 있지만 자바 프로젝트를 도와주는 많은 오픈 소스 유틸리티와 소프트웨어 들이 있었기 때문이다.이 책은 자바 프로젝트를 진행하는 각 과정에서 도움이 될 만한 유틸리티들을 소개하고 선택한 유틸리티를 어떻게 서로 엮어서 자신과 팀에 맞는 개발 환경을 구축할 것인지 안내해준다. 저자는 오랫동안 자바 개발에 몸담으면서 얻은 경험을 바탕으로 현재 프로젝트에서 널리 쓰는 도구들의 설치와 연동 방법, 장단점, 유용한 팁까지 제공하고 있다.",
        "tableOfContentsContent": "\n1장 형상 관리와 Git \r1.1 들어가며 \r1.2 왜 형상 관리 도구가 필요한가? \r- 1.2.1 파일 공유 기반의 개발 \r- 1.2.2 중앙형 및 분산형 형상 관리 \r- 1.2.3 형상 관리 도입의 장점 \r- 1.2.4 형상 관리에 따른 절차 \r1.3 어떤 도구를 사용할까?\r1.4 Git 설치 및 환경 설정 \r- 1.4.1 Git 설치\r- 1.4.2 Git 환경 설정\r- 1.4.3 Git 저장소 생성\r1.5 Git으로 형상 관리하기\r- 1.5.1 기본 용어 이해\r- 1.5.2 Git 저장소에 파일 추가 및 변경\r- 1.5.3 Git의 스테이징 단계 이해\r- 1.5.4 Git 이력 조회 및 변경 내용 비교\r1.6 브랜치와 머지\r1.7 서버 환경에서 Git 활용\r- 1.7.1 서버용 저장소 생성\r- 1.7.2 FILE 프로토콜\r- 1.7.3 Git 프로토콜\r- 1.7.4 SSH 프로토콜\r- 1.7.5 HTTP 프로토콜\r1.8 Git 원격 작업 및 GitHub\r- 1.8.1 원격 관리(분산 관리) 이해 \r- 1.8.2 GitHub 기반 원격 복제 \r- 1.8.3 로컬 저장소를 GitHub에 배포 \r- 1.8.4 GitHub 데스크톱 \r1.9 Git GUI 클라이언트 \r1.10 요약 \r 2장 서브버전을 이용한 형상 관리 \r2.1 들어가며 \r2.2 서브버전 설치 및 환경 설정 \r- 2.2.1 서브버전 설치\r- 2.2.2 서브버전 저장소 생성\r- 2.2.3 프로젝트 정의\r- 2.2.4 서비스 실행 및 환경 설정\r- 2.2.5 사용자 관리\r- 2.2.6 아파치 웹서버 연동\r2.3 서브버전으로 형상 관리\r- 2.3.1 프로젝트 생성(Import)\r- 2.3.2 소스 코드 체크아웃\r- 2.3.3 소스 코드 체크인\r- 2.3.4 브랜치와 머지\r2.4 서브버전 클라이언트\r- 2.4.1 이클립스 플러그인\r- 2.4.2 전용 클라이언트\r2.5 요약\r 3장 빌드에 대한 이해와 ANT\r3.1 들어가며\r3.2 소프트웨어 빌드 프로세스의 이해\r- 3.2.1 빌드 프로세스의 중요성\r- 3.2.2 빌드 및 배포 프로세스\r3.3 ANT 기본 구조 이해하기\r- 3.3.1 ANT 설치 및 환경 설정\r- 3.3.2 ANT 스크립트 기본 구조 이해\r- 3.3.3 기본 스크립트 작성\r3.4 형상 관리 연계\r- 3.4.1 Git 연계 \r- 3.4.2 SVN 연계 \r3.5 ANT를 이용한 빌드 \r- 3.5.1 컴파일\r- 3.5.2 패키징\r- 3.5.3 배포\r- 3.5.4 빌드 파일 분리\r3.6 커스텀 태스크 정의\r3.7 그 외 유용한 ANT 기능\r- 3.7.1 빌드 이벤트 \r- 7.2 입력값 처리 \r3.8 요약\r  4장 메이븐을 이용한 빌드 \r4.1 들어가며 \r4.2 메이븐 기본 구조 이해하기 \r- 4.2.1 메이븐 설치와 환경 설정 \r- 4.2.2 메이븐의 이해 \r- 4.2.3 메이븐 생명 주기 \r- 4.2.4 POM 구조 이해 \r4.3 의존성 관리 \r- 4.3.1 기본 기능\r- 4.3.2 추가 기능 \r- 4.3.3 의존성 검증 \r4.4 넥서스를 이용한 저장소 관리\r- 4.4.1 저장소 이해\r- 4.4.2 로컬 저장소 \r- 4.4.3 넥서스 이해 및 설치\r- 4.4.4 넥서스 설정 작업\r- 4.4.5 라이브러리 공유\r- 4.4.6 라이브러리 업로드\r4.5 메이븐 추가 정보 정의\r4.6 기타 연계 작업\r- 4.6.1 형상 관리 시스템 연계\r- 4.6.2 이클립스 연계 \r4.7 메이븐 플러그인\r- 4.7.1 플러그인 사용하기 \r- 4.7.2 플러그인 개발하기\r4.8 요약 \r 5장 그레이들을 이용한 빌드\r5.1 들어가며\r5.2 그레이들 개요\r5.3 그레이들 설치 및 기본 구조 이해\r- 5.3.1 그레이들 설치 및 환경 설정\r- 5.3.2 그레이들 데몬\r5.4 그레이들 스크립트 이해\r5.5 자바 프로그램 빌드\r- 5.5.1 자바 플러그인\r- 5.5.2 의존성 관리\r5.6 다른 도구와 연계\r- 5.6.1 이클립스와 그레이들 \r- 5.6.2 ANT와 그레이들 \r- 5.6.3 메이븐과 그레이들 \r5.7 요약 \r 6장 JUnit을 이용한 단위 테스트 \r6.1 들어가며 \r6.2 JUnit 기본 이해 \r- 6.2.1 JUnit 설치 및 환경 설정 \r- 6.2.2 JUnit 기본 구조 \r6.3 어노테이션 \r- 6.3.1 어노테이션을 이용한 코드 작성\r- 6.3.2 어노테이션 고급 기능 \r6.4 유용한 기능들\r- 6.4.1 파라미터 테스트\r- 6.4.2 Assert 클래스\r- 6.4.3 JUnit 스위트\r6.5 다른 도구와 연계 \r- 6.5.1 이클립스 화면 추가\r- 6.5.2 ANT 연계\r- 6.5.3 메이븐 연계\r- 6.5.4 그레이들 연계 \r6.6 요약 \r 7장 TestNG를 이용한 단위 테스트 \r7.1 들어가며 \r7.2 TestNG 기본 이해 \r- 7.2.1 TestNG 설치 및 환경 설정 \r- 7.2.2 TestNG 기본 구조 \r- 7.2.3 TestNG 테스트 스위트 정의\r- 7.2.4 테스트 생명 주기 관리\r7.3 TestNG 테스트 수행 \r- 7.3.1 테스트 그룹 사용하기\r- 7.3.2 테스트 연관성 관리\r- 7.3.3 병렬 테스트\r- 7.3.4 파라미터 및 데이터 지향 테스트\r- 7.3.5 에러 및 예외 처리\r7.4 TestNG 연계\r- 7.4.1 이클립스 연계\r- 7.4.2 ANT 연계\r- 7.4.3 메이븐 연계\r- 7.4.4 그레이들 연계 \r7.5 요약\r 8장 트랙을 이용한 버그 트래킹\r8.1 들어가며 \r8.2 버그 트래킹 이해 \r- 8.2.1 태스크 관리 \r- 8.2.2 도구 선정 \r8.3 트랙 설치 및 환경 설정 \r- 8.3.1 리눅스 환경에서 트랙 설치 \r- 8.3.2 윈도우 환경에서 설치(TOW) \r- 8.3.3 트랙 프로젝트 생성 \r- 8.3.4 아파치 웹서버 연계 \r- 8.3.5 사용자 관리 및 권한 관리 \r- 8.3.6 형상 관리(서브버전) 연계 \r8.4 트랙을 이용한 버그 트래킹\r- 8.4.1 타임라인 기능 \r- 8.4.2 로드맵 기능 \r- 8.4.3 티켓 관리\r- 8.4.4 위키 관리\r- 8.4.5 어떻게 사용할 것인가?\r8.5 요약 \r 9장 젠킨스를 이용한 지속적 통합 구축\r9.1 들어가며\r9.2 지속적 통합 이해\r- 9.2.1 지속적 통합의 필요성\r- 9.2.2 지속적 통합 정의\r9.3 젠킨스 설치 및 이해\r- 9.3.1 다운로드 및 설치 \r- 9.3.2 홈 디렉터리 이해 \r9.4 젠킨스 환경 설정 \r- 9.4.1 글로벌 설정이란 \r- 9.4.2 글로벌 보안 설정 \r- 9.4.3 플러그인 관리 \r9.5 젠킨스 작업 생성 및 실행 \r- 9.5.1 젠킨스 작업 정의 \r- 9.5.2 작업 스케줄 관리 \r- 9.5.3 작업과 작업 간 연계\r9.6 형상 관리 소프트웨어 연계\r- 9.6.1 Git 연계\r- 9.6.2 서브버전 연계\r9.7 빌드 도구 연계 \r- 9.7.1 ANT 연계 \r- 9.7.2 메이븐 연계 \r- 9.7.3 그레이들 연계 \r9.8 요약 \r 10장 MyLyn을 이용한 협업 환경 \r10.1 들어가며 \r10.2 MyLyn 이해 \r- 10.2.1 MyLyn이란? \r- 10.2.2 설치 및 환경 설정 \r- 10.2.3 기본 사용법 이해 \r- 10.2.4 태스크 컨텍스트 관리 \r10.3 MyLyn을 이용한 연동 \r- 10.3.1 트랙 기반의 태스크 관리 \r- 10.3.2 젠킨스 연계를 통한 빌드 결과 공유 \r10.4 요약 \r 11장 JMeter를 이용한 성능 테스트 \r11.1 들어가며 \r11.2 애플리케이션 성능 테스트 이해 \r11.3 성능 테스트 전략 수립 \r- 11.3.1 목표 수립\r- 11.3.2 구간별/대상별 목표 수립\r11.4 테스트 환경 구축\r11.5 아파치 JMeter란\r11.6 성능 테스트 설정 - 테스트 플랜 작성\r- 11.6.1 Test Plan 설정\r- 11.6.2 부하 발생 시간 및 스레드 설정 - Thread Group\r- 11.6.3 환경 변수 설정 - Config Element\r- 11.6.4 테스트 대상 설정 - 샘플러\r- 11.6.5 대기 시간 설정 - 타이머\r- 11.6.6 테스트 상태 수집 - 리스너\r- 11.6.7 변수 설정 - Variable\r11.7 테스트 수행\r- 11.7.1 로컬 테스트 \r- 11.7.2 원격 테스트 \r- 11.7.3 테스트 스케줄 지정\r11.8 요약 \r 12장 자바 모니터링 도구 및 유용한 명령어들\r12.1 들어가며\r12.2 JDK에서 제공하는 명령어들\r12.3 JConsole을 이용한 JVM 모니터링\r12.4 VisualVM을 이용한 JVM 모니터링\r- 12.4.1 VisualVM 기능 \r- 12.4.2 프로파일링 \r12.5 JMC를 이용한 JVM 모니터링 \r- 12.5.1 JMC 클라이언트 사용\r- 12.5.2 Flight Recorder \r- 12.5.3 JMC 플러그인 관리\r12.6 JDK에서 제공하는 유용한 명령어들\r- 12.6.1 jps - 자바 애플리케이션 목록 조회\r- 12.6.2 jstat - 자바 애플리케이션 상태 조회\r- 12.6.3 jcmd - 진단 정보 조회\r- 12.6.4 jinfo - 자바 설정 정보 조회\r- 12.6.5 jmap - 힙 메모리 덤프\r- 12.6.6 jhat - 메모리 덤프 정보 분석\r- 12.6.7 jstack - 스레드 덤프\r12.7 요약\r 13장 인텔리제이 IDEA를 이용한 연계\r13.1 들어가며\r13.2 인텔리제이 IDEA에 대한 이해 \r- 13.2.1 인텔리제이 IDEA의 특징 \r- 13.2.2 다운로드 및 설치 \r- 13.2.3 이클립스와의 차이점\r13.3 형상 관리 연계\r13.4 ANT, 메이븐, 그레이들 연계\r13.5 젠킨스 연계\r13.6 요약\n",
        "isbn10": "8966261949",
        "isbn13": "9788966261949"
    },
    {
        "title": "이펙티브 자바스크립트",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7283193",
        "image": "https://bookthumb-phinf.pstatic.net/cover/072/831/07283193.jpg?type=m1&udate=20190204",
        "author": "데이비드 허먼",
        "price": "22000",
        "discount": "19800",
        "publisher": "인사이트",
        "pubdate": "20130821",
        "isbn": "8966260853 9788966260850",
        "description": "『이펙티브 자바스크립트』는 자바스크립트 표준화 위원회에서 오랫동안 활동한 저자의 경험과 실전 사례를 토대로 검증된 68가지 개발 노하우가 담겨 있다. 표준에 명시되어 있는 기능들이 실제로는 어떻게 구현되어 있는지 살펴보고, 현실과의 차이를 분석해 최상의 대안을 모색한다.",
        "authorIntroContent": "\n데이비드 허먼\n저자 : 데이비드 허먼저자 데이비드 허먼은 모질라 연구소에서 선임 연구원으로 근무하고 있다. 그린넬 대학에서 컴퓨터과학을 전공했으며, 노스이스턴 대학에서 석사와 박사 학위를 얻었다. 자바스크립트를 표준화하는 ECMA TC39 위원회의 위원이다.역자 : 김준기역자 김준기는 NHN에서 오픈소스 자바스크립트 프레임워크인 진도의 UI 컴포넌트를 개발하였으며, 웹애플리케이션의 프론트엔드 성능 개선 업무를 진행했다. 현재는 SK PLANET에서 모바일 WEB/APP, 자바스크립트 개발/기술지원을 담당하고 있다.『GAE로 시작하는 클라우드 컴퓨팅』『자바스크립트 코딩 기법과 핵심 패턴』의 공역자다.\n",
        "bookIntroContent": "『이펙티브 자바스크립트』는 자바스크립트 표준화 위원회에서 오랫동안 활동한 저자의 경험과 실전 사례를 토대로 검증된 68가지 개발 노하우가 담겨 있다. 표준에 명시되어 있는 기능들이 실제로는 어떻게 구현되어 있는지 살펴보고, 현실과의 차이를 분석해 최상의 대안을 모색한다.",
        "tableOfContentsContent": "\n옮긴이의 글\r추천의 글\r지은이의 글\r 1장 자바스크립트에 익숙해지기 __아이템 1 어떤 자바스크립트를 사용하고 있는지 알아야 한다\r__아이템 2 자바스크립트의 부동 소수점 숫자 이해하기\r__아이템 3 암묵적인 형변환을 주의하라\r__아이템 4 객체 래퍼보다 원시 데이터형을 우선시하라\r__아이템 5 혼합된 데이터형을 ==로 비교하지 마라\r__아이템 6 세미콜론 삽입의 한계에 대해서 알아두자\r__아이템 7 문자열을 16비트 코드 단위의 시퀀스로 간주하라\r 2장 변수 스코프 __아이템 8 전역 객체의 사용을 최소화하라\r__아이템 9 항상 지역 변수를 선언하라\r__아이템 10 with를 사용하지 마라\r__아이템 11 클로저에 익숙해져라\r__아이템 12 변수 호이스팅에 대해 이해하라\r__아이템 13 지역 변수 스코프를 만들기 위해 즉시 실행 함수 표현식을 사용하라\r__아이템 14 기명 함수 표현식의 스코프에 주의하라\r__아이템 15 블록-지역 함수 선언문의 스코프에 주의하라\r__아이템 16 eval을 이용해 지역 변수를 생성하지 마라\r__아이템 17 직접적인 eval보다 간접적인 eval을 사용하라\r 3장 함수 사용하기 __아이템 19 함수, 메서드, 생성자 호출의 차이를 이해하라\r__아이템 20 고차 함수에 익숙해져라\r__아이템 21 지정된 수신자 객체로 함수를 호출하기 위해 call 메서드를 사용하라\r__아이템 22 다른 개수의 인자로 함수를 호출하기 위해 apply를 사용하라\r__아이템 23 가변 인자 함수를 생성하기 위해 arguments를 사용하라\r__아이템 24 절대 arguments 객체를 수정하지 마라\r__아이템 25 자바스크립트의 부동 소수점 숫자 이해하기\r__아이템 26 고정된 수신자 객체로 메서드를 추출하기 위해 bind를 사용하라\r__아이템 27 커링 함수에 bind를 사용하라\r__아이템 28 코드를 캡슐화하기 위해 문자열보다 클로저를 사용하라\r__아이템 29 함수의 toString 메서드에 의존하지 마라\r__아이템 30 비표준 스택 검사 프로퍼티를 사용하지 마라\r 4장 객체와 프로토타입 __아이템 31 __proto__보다 Object.getPrototypeOf를 사용하라\r__아이템 32 __proto__를 절대 수정하지 마라\r__아이템 33 생성자가 new와 관계 없이 동작하게 만들어라\r__아이템 34 메서드를 프로토타입에 저장하라\r__아이템 35 비공개 데이터를 저장하기 위해 클로저를 사용하라\r__아이템 36 인스턴스의 상태는 인스턴스 객체에만 저장하라\r__아이템 37 this의 명시적인 바인딩에 대해 이해하라\r__아이템 38 서브 클래스 생성자에서 수퍼 클래스 생성자를 호출하라\r__아이템 39 수퍼 클래스 프로퍼티 이름을 절대 재사용하지 마라\r__아이템 40 표준 클래스를 상속하지 마라\r__아이템 41 프로토타입을 세부 구현 사항처럼 처리하라\r__아이템 42 무모한 몽키 패칭을 하지 마라\r 5장 배열과 딕셔너리 __아이템 43 직접적인 객체의 인스턴스로 가벼운 딕셔너리를 만들어라\r__아이템 44 프로토타입 오염을 막기 위해 null 프로토타입을 사용하라\r__아이템 45 프로토타입 오염을 막기 위해 asOwnProperty를 사용하라\r__아이템 46 순서가 정해진 컬렉션에는 딕셔너리 대신 배열을 사용하라\r__아이템 47 Object.prototype에 열거 가능한 프로퍼티를 절대 추가하지 마라\r__아이템 48 열거하는 동안 객체를 수정하지 마라\r__아이템 49 배열을 반복할 때 for...in 대신 for 반복문을 사용하라\r__아이템 50 반복문 대신 반복 메서드를 사용하라\r__아이템 51 유사 배열 객체에 범용적인 배열 메서드를 재사용하라\r__아이템 52 Array 생성자 대신 배열 리터럴을 사용하라\r 6장 라이브러리와 API 설계 __아이템 53 일관된 컨벤션을 유지하라\r__아이템 54 undefined를 ‘값 이 없는’ 것처럼 처리하라\r__아이템 55 키워드 인자를 위해 옵션 객체를 받아들여라\r__아이템 56 불필요한 상태 유지를 피하라\r__아이템 57 유연한 인터페이스를 위해 구조화된 형식을 사용하라\r__아이템 58 배열과 유사 배열 객체를 구별하라\r__아이템 59 과도한 강제 형변환을 피하라\r__아이템 60 메서드 체이닝을 지원하라\r 7장 동시성 __아이템 61 이벤트 큐를 I/O에 블로킹시키지 마라\r__아이템 62 비동기 시퀀스를 위해 감싸지거나 이름이 지정된 콜백을 사용하라\r__아이템 63 오류를 놓치지 않도록 조심하라\r__아이템 64 비동기적인 반복문을 위해 재귀를 사용하라\r__아이템 65 계산 중 이벤트 큐를 블로킹하지 마라\r__아이템 66 동시성 연산을 수행하기 위해 카운터를 사용하라\r__아이템 67 비동기 콜백을 절대 동기적으로 호출하지 마라\r__아이템 68 더 깔끔한 비동기 로직을 위해 promise를 사용하라\n",
        "isbn10": "8966260853",
        "isbn13": "9788966260850"
    },
    {
        "title": "자바스크립트 닌자 비급",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7466145",
        "image": "https://bookthumb-phinf.pstatic.net/cover/074/661/07466145.jpg?type=m1&udate=20190204",
        "author": "존 레식|베어 바이볼트",
        "price": "33000",
        "discount": "29700",
        "publisher": "인사이트",
        "pubdate": "20140404",
        "isbn": "8966261078 9788966261079",
        "description": "[자바스크립트 닌자 비급]는 자바스크립트에 대한 흥미롭고 독창적인 기법들이 수록되어있는 책이다. FUNCTIONS, OBJECTS, CLOSURES, REGULAR EXPRESSIONS, AND MORE 등을 소개하고, 올바른 시각으로 애플리케이션과 라이브러리를 바라보는 방법, 현대적인 자바스크립... ",
        "authorIntroContent": "\n존 레식\n저자 : 존 레식저자 존 레식(JOHN RESIG)은 인정받는 자바스크립트 권위자이자 JQUERY 창시자다. 그는 또한 프로세싱(PROCESSING) 언어를 자바스크립트로 옮긴(PORT) PROCESSING.JS, 자바스크립트 테스트를 위한 QUNIT, 그리고 분산 자바스크립트 테스팅 플랫폼인 TESTSWARM을 포함해, 몇 가지 다른 오픈소스 도구와 프로젝트를 만들었다. 현재 칸 아카데미(KHAN ACADEMY)에서 컴퓨터 과학 교육이 한 단계 더 발전할 수 있도록 하기 위해서 일하고 있다. 뉴욕 브루클린에 거주하고 있으며, 여유시간에는 우키요에(일본식 목판 그림)를 연구하고 있다.저자 : 베어 바이볼트저자 베어 바이볼트(BEAR BIBEAULT)는 100보드 텔레타이프를 이용해서 컨트롤 데이터 사이버(CONTROL DATA CYBER) 슈퍼컴퓨터에서 틱택토(TIC-TAC-TOE) 프로그램을 만들기 시작한 이래, 30년 넘게 소프트웨어 개발을 해왔다. 매닝(MANNING)에서 출판한 AJAX IN PRACTICE, PROTOTYPE AND SCRIPTACULOUS IN ACTION, JQUERY IN ACTION의 공동저자다.역자 : 강대명역자 강대명은 파이널데이터에서 디지털 포렌식 툴을 개발했고, NHN에서 메일 서비스 백엔드를 개발했으며, 일 년 반의 백수 생활을 거치고 현재는 (주)카카오에서 카카오 홈 런처를 개발 중이다. 실력보다는 입이 앞서지만 개발을 좋아하는 개발자.역자 : 김광훈역자 김광훈은 NHN에서 한게임 관련 서비스와 네이버 게임 개발을 담당했으며, 현재는 (주)카카오에서 API와 회원 관련 서비스를 개발하고 있다. 여러 해 동안 자바스크립트를 다뤄왔지만 여전히 부족함이 많다고 느끼고 있어, 주변의 많은 고수들로부터 지혜를 전수 받기 위해 노력하고 있다. 백발이 되어서도 개발을 하면서 지내고 싶은 소망을 가지고 있다.역자 : 이의호역자 이의호는 NHN에서 각종 기술 지원 업무를 담당했으며, 현재는 (주)카카오에서 카카오톡 서비스를 개발하고 있다. 마흔 이후에는 교육자의 길을 걸어가는 것을 목표로 하고 있으며, 사랑하는 아내와 고양이 두 마리와 같이 살고 있다. 공역한 책으로는 『자바스크립트 완벽 가이드(6판)』가 있다.\n",
        "bookIntroContent": "[자바스크립트 닌자 비급]는 자바스크립트에 대한 흥미롭고 독창적인 기법들이 수록되어있는 책이다. FUNCTIONS, OBJECTS, CLOSURES, REGULAR EXPRESSIONS, AND MORE 등을 소개하고, 올바른 시각으로 애플리케이션과 라이브러리를 바라보는 방법, 현대적인 자바스크립트 디자인, 크로스 브라우저 개발의 복잡성을 다루는 방법 등을 다룬다.",
        "tableOfContentsContent": "\n1부훈련 준비 \r 1.닌자 입문 \r1.1 살펴볼 자바스크립트 라이브러리들 \r1.2 자바스크립트 언어 이해하기 \r1.3 크로스 브라우저 고려하기\r1.4 현재의 훌륭한 실천법들 \r__훌륭한 실천법: 테스팅 \r__훌륭한 실천법: 성능 분석 \r1.5 정리 \r 2.테스팅과 디버깅 갖추기 \r2.1 코드 디버깅 \r2.2 테스트 생성 \r2.3 테스트 프레임워크 \r2.4 테스트 스위트의 기본 \r2.5 정리 \r 2부견습 훈련 \r 3.함수가 핵심이다 \r3.1 함수형 언어는 무엇이 다른가\r__자바스크립트의 함수형 언어 특징이 왜 중요한가\r__비교자를 사용하여 정렬하기 \r3.2 함수 선언 \r3.3 호출 \r__인자(argument)에서 함수의 매개변수(parameter)까지 \r__함수로 호출 \r__메서드로 호출 \r__생성자로 호출 \r__apply() 메서드와 call() 메서드를 사용한 호출 \r3.4 정리 \r 4 .함수를 자유자재로 휘두르기 \r4.1 익명 함수 \r4.2 재귀 \r__이름을 가진 함수 내에서의 재귀\r__메서드를 이용한 재귀 \r__참조가 사라지는 문제 \r__이름을 가진 인라인 함수 \r__callee 프로퍼티 \r4.3 함수 객체 가지고 놀기 \r__함수 저장하기 \r__연산 결과를 기억하는 함수 \r__배열 메서드를 속이기 \r4.4 가변인자 목록 \r__apply() 메서드를 이용해서 가변 길이의 인자를 전달하기 \r__함수 오버로딩 \r4.5 함수인지 확인하기 \r4.6 정리 \r 5.클로저와 가까워지기 \r5.1 클로저는 어떻게 동작하는가\r5.2 클로저로 작업하기 \r__Private 변수 \r__콜백과 타이머 \r5.3 함수 콘텍스트 바인딩하기 \r5.4 부분 적용 함수 \r5.5 함수 동작 오버라이딩 \r__메모이제이션 \r__함수 래핑 \r5.6 즉시실행함수(Immediate function) \r__임시 유효 범위와 private 변수 \r__루프 \r__라이브러리 래핑 \r5.7 요약 \r 6.객체 지향과 프로토타입 \r6.1 인스턴스 생성과 프로토타입 \r__객체 인스턴스 생성 \r__생성자와 객체 타입 \r__상속과 프로토타입 체인 \r__HTML DOM 프로토타입 \r6.2 실수하기 쉬운 것들! \r__객체 확장하기 \r__Number 객체 확장하기 \r__네이티브 객체의 하위 클래스 만들기 \r__인스턴스 생성 이슈 \r6.3 보다 클래스다운 코드 작성하기 \r__함수 직렬화 검사 \r__하위 클래스의 인스턴스 만들기 \r__상위 메서드 보존하기 \r6.4 정리\r 7.정규 표현식에 대한 논의\r7.1 정규 표현식이 멋진 이유 \r7.2 정규 표현식 다시 살펴보기\r7.3 정규 표현식 컴파일하기 \r7.4 매치된 부분을 캡처하기\r__간단한 캡처 실행해 보기\r__전역 정규 표현식을 이용해서 일치하는 부분을 찾기\r__캡처 참조하기\r__캡처되지 않는 그룹\r7.5 함수를 이용해서 치환하기\r7.6 정규 표현식을 이용해서 일상적인 문제를 해결하기\r__문자열의 공백 제거하기\r__개행 문자 찾기\r__유니코드\r__이스케이프 문자\r7.7 정리\r 8.스레드와 타이머 다루기\r8.1 타이머와 스레드는 어떻게 동작하는가\r__타이머 생성과 제거하기\r__실행 중인 스레드 내에서의 타이머 실행\r__타임아웃과 인터벌의 차이점\r8.2 최소 타이머 지연시간과 신뢰성\r8.3 비싼 연산 처리 다루기\r8.4 중앙 타이머 관리\r8.5 비동기 테스팅\r8.6 요약\r 3부닌자 훈련\r 9.닌자 비술: 런타임 코드 평가\r9.1 코드 평가 메커니즘 \r__eval() 메서드를 사용한 평가\r__Function 생성자를 사용한 평가\r__타이머와 평가\r__전역 유효 범위에서 평가하기 \r__안전한 코드 평가\r9.2 함수 “디컴파일”\r9.3 코드 평가를 실제로 활용하기\r__JSON 변환\r__네임스페이스에 속한 코드를 가져오기\r__자바스크립트 압축과 난독화 \r__동적으로 코드를 다시 작성하기\r__관점-지향 스크립트 태그 \r__메타언어와 DSL\r9.4 정리\r 10.With 문\r10.1 “with”를 사용한다는 것은 무슨 의미일까 \r__with 유효 범위 내에서 프로퍼티 참조하기 \r__with 내에서 할당하기 \r__성능에 대한 고려\r10.2 실제 예제\r10.3 네임스페이스에 속한 코드를 가져오기\r10.4 테스팅\r10.5 with를 활용해 템플릿 기능 제공하기\r10.6 정리\r 11. 크로스 브라우저 전략 수립하기\r11.1 지원할 브라우저 선택하기\r11.2 다섯 가지 주요 개발 고민 사항\r__브라우저 버그와 브라우저 간의 차이점\r__브라우저 버그 수정\r__외부 코드 그리고 마크업과 공존하기 \r__누락된 기능 \r__리그레이션\r11.3 구현 전략\r__안전한 크로스 브라우저 수정 \r__객체 탐지 \r__기능 시뮬레이션\r__테스트 할 수 없는 브라우저 문제\r11.4 가정(assumptions) 줄이기\r11.5 정리\r 12. 속성, 프로퍼티, CSS를 단칼에 베어버리자\r12.1 DOM 속성과 프로퍼티\r__크로스 브라우저 이름 문제\r__이름 제약사항\r__XML과 HTML의 차이점\r__사용자 정의 속성의 작동 방식\r__성능 고려 사항\r12.2 크로스 브라우저 속성 이슈\r__DOM id/name 확대\r__URL 정규화\r__style 속성\r__type 속성\r__탭 인덱스 문제\r__노드 이름\r12.3 스타일 속성과 관련한 골칫거리들\r__내 스타일은 어디에 있지\r__스타일 프로퍼티 이름\r__float 스타일 프로퍼티\r__픽셀 값 변환 \r__높이와 너비 측정하기\r__불투명도를 꿰뚫어 보기 \r__알록달록한 바퀴를 가진 자전거 타기\r12.4 평가된 스타일 얻기\r12.5 정리\r 4부달인이 되기 위한 훈련\r 13. 이벤트 처리 지뢰밭에서 살아남기\r13.1 이벤트 핸들러를 설정하고 해제하기\r13.2 이벤트 객체\r13.3 이벤트 핸들러 관리\r13.4 이벤트 발생시키기\r13.5 버블링과 위임(delegation)\r__이벤트를 상위 엘리먼트(acenstor)에 위임하기\r__브라우저의 결함 우회하기\r13.6 document ready 이벤트\r13.7 정리\r 14. DOM 다루기\r14.1 DOM에 HTML 주입하기\r__HTML을 DOM으로 변환하기\r__문서에 삽입하기\r__스크립트 실행\r14.2 엘리먼트 복제하기\r14.3 엘리먼트 제거하기\r14.4 텍스트 콘텐츠\r14.5 정리\r 15. CSS 셀렉터 엔진\r15.1 W3C 셀렉터 API\r15.2 엘리먼트를 찾기 위해 XPath 사용하기\r15.3 순수 DOM 구현\r__셀렉터 문자열 파싱 \r__엘리먼트 찾기\r__찾은 엘리먼트를 필터링하기\r__재귀적으로 결과 합치기\r__상향식 셀렉터 엔진\r15.4 정리\n",
        "isbn10": "8966261078",
        "isbn13": "9788966261079"
    },
    {
        "title": "동형 자바스크립트 웹 개발 (리액트와 Node. js를 활용한 동형 웹 앱 구현 기법)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13798139",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/981/13798139.jpg?type=m1&udate=20180802",
        "author": "토마스 알라베스|콘스탄틴 타르쿠스",
        "price": "25000",
        "discount": "22500",
        "publisher": "에이콘출판",
        "pubdate": "20180731",
        "isbn": "1161751939 9791161751931",
        "description": "리액트(REACT)와 NODE.JS, 그 밖의 다양한 플러그인을 활용해, 서버와 클라이언트에서 동일한 코드를 사용할 수 있는 동형(ISOMORPHIC) 웹 앱 구현 기법을 소개한다. 쉬운 예제를 제공하며, 개발 경험이 많지 않더라도 쉽게 이해 할 수 있다.",
        "authorIntroContent": "\n토마스 알라베스\n저자 : 토마스 알라베스저자 토마스 알라베스실리콘 밸리(SILICON VALLEY)의 오라클(ORACLE)에서 클라우드(CLOUDS)를 구축하는 시니어 소프트웨어 엔지니어다. 풀 스택 엔지니어로 7년 이상 일하고 있으며, 열렬한 블로거이자 열정적인 학습자다. 항상 스스로를 발전시키기 위한 방법을 찾고, 자신의 지식을 공유한다.저자 : 콘스탄틴 타르쿠스저자 콘스탄틴 타르쿠스기술 신생 기업을 위한 맞춤형 웹과 클라우드 애플리케이션 개발을 전문으로 하는 노련한 소프트웨어 엔지니어다. 14년 이상의 PHP, MYSQL, 애저(AZURE), SQL 서버, 닷넷(.NET), C#, NODE.JS, 자바스크립트 같은 광범위한 기술 스택 경력을 갖추고 있다. 아주 유명한 리액트 앱 보일러플레이트인 리액트 스타터 키트(REACT STARTER KIT)를 만들었으며, 그 밖에도 깃허브(GITHUB)에서 다양한 오픈소스 프로젝트를 진행하고 있다.역자 : 양정열역자 양정열국내 TELCO SI/SM SOFTWARE 개발자로 시작해 현재는 프로젝트 매니저로 일하고 있다. 독립 IT 기술자 저술 강연 상호부조 네트워크 GODEV(WWW.GODEV.KR)의 멤버다.\n",
        "bookIntroContent": "리액트(REACT)와 NODE.JS, 그 밖의 다양한 플러그인을 활용해, 서버와 클라이언트에서 동일한 코드를 사용할 수 있는 동형(ISOMORPHIC) 웹 앱 구현 기법을 소개한다. 쉬운 예제를 제공하며, 개발 경험이 많지 않더라도 쉽게 이해 할 수 있다.",
        "tableOfContentsContent": "\n1장. 동형 웹 앱 시작하기\r 동형 앱이란 무엇인가?\r동형 자바스크립트 코드는 어떻게 작성하는가?\rReact.js 소개\r예제 앱 설명\r시작하기 위해 필요한 것\r프로젝트 의존성 설치하기\r기본 프로젝트 구조\r첫 번째 리액트 컴포넌트 만들기\r클라이언트와 서버에서 리액트 앱 렌더링하기\r앱을 로컬에서 실행하고 테스트하기\r요약\r 2장. 리액트 웹 UI 만들기\r 컴포넌트 기반 UI 개발\r상태저장과 상태비저장 리액트 컴포넌트\r프로젝트에서 UI 컴포넌트 그룹화\rUI를 컴포넌트 계층구조로 분해하기\r리액트로 정적 버전 만들기\r기본 동형 라우터 구현하기\r요약\r 3장. CSS와 미디어 자산으로 작업하기\r 리액트 컴포넌트의 인라인 스타일\rCSS Modules 시작하기\rPostCSS 시작하기\r웹팩 로더 시작하기\r이미지와 CSS용 웹팩 설정하기\r여러 CSS 파일에서 공통 설정 공유하기\r요약\r 4장. 브라우저싱크와 HMR로 작업하기\r 브라우저싱크 시작하기\r설치 방법\rHMR 시작하기\r요약\r 5장. 서버에서 리액트 컴포넌트 렌더링하기\r 서버 측 렌더링의 핵심 개념\r트러블슈팅\r서버에서 클라이언트로 컴포넌트 상태 전달하기\r리액트 컨텍스트로 작업하기\r페이지 타이틀과 메타 태그 설정 방법\r타사 라이브러리로 작업하기\r서버 데이터 가져오기\r요약\r 6장. GraphQL 데이터 API 만들기\r GraphQL의 기초\rGraphQL 쿼리\rGraphQL 타입 체계\rNode.js로 GraphQL 서버 구현하기\rGraphQL 서버에서 SQL 데이터 저장소 사용하기\r배치와 캐시하기\r요약\r 7장. 라우팅과 내비게이션 구현하기\r 서버 라우팅\r익스프레스 라우팅\r클라이언트 라우팅\r해시와 히스토리 API\r리액트 라우팅\r리액트 서버 렌더링\r뷰 렌더링\r애플리케이션에 상태 전달하기\r초기 상태\rreact-router-config 사용하기\rRedux 사용하기\r요약\r 8장. 인증 및 권한 부여\r 토큰 기반 인증과 쿠키\r쿠키\r토큰 기반 인증\rJWT\rjwt-simple 사용하기\r서버 인증\r가입하기\rJWT 토큰 클레임\rJWT 토큰 암호\r로그인\r라우팅 리다이렉션\r상위 컴포넌트(HoC) 인증하기\r서버측 인증 확인\r로그아웃\r요약\r 9장. 애플리케이션 테스트와 배포\r 테스트와 배포\r테스트\rMocha, Sinon, Chai, jsdom, Enzyme으로 리액트 단위 테스트하기\rMocha\rChai\rSinon\r테스트\rEnzyme\rNightwatch로 통합 테스트하기\r배포\r상용 환경의 모범 사례\r코드에서 해야 할 작업\r환경/설정에서 할 작업\r클라우드 플랫폼에 배포하기\r헤로쿠\r요약\r\n",
        "isbn10": "1161751939",
        "isbn13": "9791161751931"
    },
    {
        "title": "HTML CSS 자바스크립트 무작정따라하기 (동영상과 280개 예제로 배우는, 무작정 따라하기 183)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=4634010",
        "image": "https://bookthumb-phinf.pstatic.net/cover/046/340/04634010.jpg?type=m1&udate=20170301",
        "author": "고경희",
        "price": "23800",
        "discount": "",
        "publisher": "길벗",
        "pubdate": "20080623",
        "isbn": "8975607542 9788975607547",
        "description": "실무 예제 및 동영상으로 배우는 HTML, CSS, 자바스크립트 입문서!\n\n이 책은 HTML, CSS, 자바스크립트를 컴퓨터 사용자가 혼자서도 학습할 수 있도록 따라하기 형식으로 구성한 안내서이다. HTML로 토대를 만들고 CSS로 디자인을 완성하고 자바스크립트로 동적인 효과를 살리는 과정을 설명한다. 본문은 새로이... ",
        "authorIntroContent": "\n고경희\n홍익대학교 공과대학에서 전자계산학과를 졸업한 뒤 컴퓨터와 더 가까워지고 싶어 같은 대학원에서 인공 지능을 전공했다. 캠퍼스21(www.campus21.co.kr)과 배움나라(www.estudy.or.kr) 등에서 온라인 강의를 진행하며 『PC사랑』과 『월간 웹』 등 여러 컴퓨터 잡지에 글을 기고하고, 한국디지털대학교 웹 기초(HTML) 분야 강사로 활동했다. \r 드림위버 1.2 시절부터 웹에 관심을 가지기 시작해 이후 HTML과 DHTML(Dynamic HTML), CSS, 자바스크립트 등 웹 관련 기술들을 활용하는데 관심을 두고 웹 디자인 및 프로그래밍 분야에 걸쳐 여러 권의 웹 관련 서적을 집필했다. 2010년에는 국내 저자로는 처음으로 HTML5 버전을 소개한 도서인 『Do it! HTML5+CSS3』를 출간하였으며, 이번 책 『Do it! HTML5+CSS3 웹 표준의 정석』에서는 HTML5와 CSS3의 모든 태그를 집대성하여 출간하였다. 현재 한국전자정보통신산업진흥회에서 ‘HTML5와 CSS3의 모든 것’이라는 주제로 강의 중이다. 마이크로소프트 공인 최고기술전문가(Most Valualble Professional)와 마이크로소프트 HTML5 정보를 제공하는 UserAgents에서 웹 전문가로도 활동 중이다.\r 저서로는 『드림위버 MX 2004 무작정 따라하기』(길벗, 2002), 『회사에서 바로 통하는 파워포인트 2003』(한빛미디어, 2005), 『테마가 있는 HTML 무작정 따라하기』, 『HTML+CSS+자바스크립트 무작정 따라하기』, 『인터넷 무작정 따라하기』, 『윈도우 XP 무작정 따라하기』(길벗, 2005), 『드림위버 8 무작정 따라하기』, 『제로보드 무작정 따라하기』『드림위버 CS4 무작정 따라하기』『엑셀과 파워포인트 2007 실무와 활용』『윈도우 7 무작정 따라하기』 ,『HTML 5 + CSS 3』,『Do it! HTML5 + CSS3』(이지스퍼블리싱, 2010), 『Do it! HTML5 + CSS3 웹 표준의 정석』(이지스퍼블리싱, 2013)등이 있다. 지금도 꾸준히 책과 기사를 쓰면서 컴퓨터 강의를 진행하고 있다. 또 마이크로소프트 사에서 공인한 최고 기술 전문가(Microsoft MVP)로 국내외에서 활동 중이다.\n",
        "bookIntroContent": "실무 예제 및 동영상으로 배우는 HTML, CSS, 자바스크립트 입문서!이 책은 HTML, CSS, 자바스크립트를 컴퓨터 사용자가 혼자서도 학습할 수 있도록 따라하기 형식으로 구성한 안내서이다. HTML로 토대를 만들고 CSS로 디자인을 완성하고 자바스크립트로 동적인 효과를 살리는 과정을 설명한다. 본문은 새로이 배우게 되는 웹 프로그래밍의 기초 이론을 표와 그림을 통해 해설한다.그런 다음 본문 내용에서 꼭 알아야 하는 부분을 무작정 따라해 볼 수 있도록 하여 웹 프로그래밍에 무난하게 접근하도록 해준다. 또한 공부한 내용을 직접 응용해 볼 수 있는 예제를 수록하였다. 부록 CD에서 이에 대한 해답을 찾을 수 있다. 부록 CD에는 예제 파일 및 동영상 강의 파일, 각종 웹 프로그래밍 관련 유틸리티가 수록되어 있다.그리고 본문에는 학습의 흐름을 이어주면서 본문 내용의 길잡이 역할을 해주는 '가정교사', 알고 있으면 유익한 상식이나 참고하면 좋은 홈페이지 제작 배경 지식들을 제시하는 '잠깐만요', 입문자에서 중급 이상의 사용자가 되는 데 꼭 필요한 심화 이론을 소개한 '한걸음 더' 등 다양한 코너를 통해 추가의 팁을 제공한다.▶ 이 책의 구매 포인트!매뉴얼과 같은 나열식이 아닌 예제 중심으로 구성했으며, 배우기 쉬운 내용부터 정리하였다. 다양한 예제를 재미있게 따라 하면서 HTML, CSS, 자바스크립트를 자유자재로 실무에 적용할 수 있는 응용력을 키울 수 있다.",
        "tableOfContentsContent": "\n| 첫째마당 | HTML과 CSS  01 웹 문서를 논리적이고 깔끔하게 만드는 HTML과 CSS HTML이란?\rHTML을 배우는 이유\r전문 HTML 통역사, 웹 브라우저\r인터넷 익스플로러\r파이어폭스\r오페라\r브라우저에서 HTML을 읽는 방법\r[잠깐만요] HTML과 표준 규약\rHTML 편집 프로그램\r메모장\rHTML 전용 편집기\r위지윅 편집기\rHTML과 관련된 웹 언어\rXHTML\r자바스크립트\r서버 스크립트 언어\r[잠깐만요] HTML 파일을 저장할 때 주의하세요.\r스타일 시트란\r스타일 시트를 사용해야 하는 이유\r스타일 시트의 사용방법\r스타일의 종류\r태그 스타일\r클래스 스타일\rID 스타일\r스타일의 적용 규칙\r상속\r스타일의 우선순위\r[잠깐만요] 웹 표준이란?\r무작정 따라하기 실습 파일 설치하기\r무작정 따라하기 나의 첫 번째 HTML 문서 만들기\r무작정 따라하기 윈도우 탐색기에서 파일 확장자 표시하기\r 02 웹 문서의 형태를 결정하는 기본 구조와 배경 다루기 HTML 문서의 기본 구조\rHTML 태그의 특징\r여는 태그와 닫는 태그의 구분\r대소문자를 구별하지 않고 사용\r들여쓰기가 적용되지 않음\r[잠깐만요] html 태그나 body 태그가 빠진 이유\r글자와 글자 사이는 한 칸만 인식\r태그 안에 속성 정의가 가능\r비추천 태그와 속성이 존재\r문서 정보 지정하기 - meta 태그\r문자셋 지정하기\r키워드와 요약 정보 제공하기\r웹 문서 제작 프로그램과 제작자 지정하기\r[잠깐만요] 문서 유형을 알려주는 DOCTYPE\r일정 시간 후 자동으로 다른 홈페이지 연결하기\r문서 제목 지정하기 - title 태그\r단락 제목 지정하기 - hn 태그\r수평선 삽입하기 - hr 태그\r주석 삽입하기 - !-- --\r 글자색 바꾸기 - color 속성\r색상 표시 방법\r[잠깐만요] 스타일 속성 표를 읽는 방법\r웹 문서의 배경 다루기 - background 속성\r문서 배경색 바꾸기 - background-color 속성\r배경 이미지의 경로 지정하기 - background-image 속성\r배경 이미지 반복하기 - background-repeat 속성\r배경 이미지 고정하기 background-attachment 속성\r배경 이미지의 위치 지정하기 - background-position 속성\r모든 속성을 한꺼번에 지정하기 - background 속성\r무작정 따라하기 자주 사용하는 메모장 프로그램의 바로 가기 만들기\r무작정 따라하기 오른쪽 아래에 고정된 배경 이미지 삽입하기\r무작정 따라하기 중요한 내용을 형광펜으로 색칠하기\r실전예제\r 03 웹 문서에 내용을 채우는 글자와 단락 다루기 단락 구분하기 - p 태그\r줄 바꾸기 - br 태그\r[잠깐만요] p 태그를 줄바꿈 태그로 사용하지 마세요.\r다양한 텍스트 관련 태그들\r사용자의 입력 형식을 그대로 보여주기 - pre 태그\r인용한 내용을 구별하기 - blockquote 태그\r기타 텍스트 태그들\r순서 목록 만들기 - ol / li 태그\r순서없는 목록 만들기 - ul / li 태그\r정의 목록 만들기 - dl / dt / dd 태그\r글꼴 다루기 - font 속성\r글꼴 지정하기 - font-family\r글자 크기 지정하기 - font-size\r이탤릭체 지정하기 - font-style\r글꼴 굵기 지정하기 - font-weight\r작은 대문자 표시하기 - font-variant\r줄 간격 지정하기 - line-height 속성\r글자 간격과 단어 간격 지정하기 - letter-spacing / word-spacing 속성\r단락 다루기 - text 속성\r단락의 첫 글자 들여쓰기 - text-indent 속성\r텍스트 정렬하기 - text-align 속성\r글자에 효과주기 - text-decoration 속성\r무작정 따라하기 웹 문서에 텍스트 입력하기\r무작정 따라하기 순서 없는 목록으로 항목 나열하기\r무작정 따라하기 정의 목록을 이용하여 항목 나열하기\r무작정 따라하기 글자를 보기 좋게 정리하기\r무작정 따라하기 웹 문서의 텍스트 단락 구분하기\r무작정 따라하기 스타일 시트를 이용한 텍스트 조절하기\r 04 여백과 테두리를 잡아주는 박스 모델 스타일 시트 다루기 박스(box) 형태의 텍스트 단락\r바깥 여백 지정하기 - margin 속성\r안 여백 지정하기 - padding 속성\r테두리 지정하기 - border 속성\r테두리 두께 지정하기 - border-width 속성\r테두리 색상 지정하기 - border-color 속성\r테두리 스타일 지정하기 - border-style 속성\r목록 스타일 지정하기 - list-style 속성\r목록의 불릿 유형 지정하기 - list-style-type 속성\r불릿 위치 지정하기 - list-style-position 속성\r불릿을 이미지로 바꾸기 - list-style-image 속성\r목록을 메뉴로 활용하기\r세로형 메뉴 ①\r세로형 메뉴 ②\r가로형 메뉴\r무작정 따라하기 텍스트 단락의 여백과 테두리 조절하기\r한걸음 더 목록을 이용한 다양한 내비게이션 메뉴\r실전 예제 \r 05 홈페이지를 깔끔하게 정리하는 표와 폼 다루기 표 만들기\r표의 시작과 끝 정리하기 - table 태그\r표에 제목 붙이기 - caption 태그\r열과 행, 제목 지정하기 - tr, td, th 태그\r[잠깐만요] 표와 레이아웃의 분리\r표 안에 표 넣기\r헤더와 푸터, 본문 구분하기 - thead / tfoot / tbody 태그\r폼 삽입하기 - form 태그\r폼의 주요 속성 정의하기 - input 태그\r텍스트 필드 삽입하기 - type=\"text\" 속성\r패스워드 필드 삽입하기 - type=\"password\" 속성 \r라디오 버튼 삽입하기 - type=\"radio\" 속성\r체크박스 삽입하기 - type=\"checkbox\" 속성\r확인/초기화/버튼 만들기 - type=\"submit\" / type=\"reset\" / type=\"button\" 속성\r히든 필드 만들기 - type=\"hidden\" 속성\r파일 첨부 버튼 만들기 - type=\"file\" 속성\r선택 목록 만들기 - select 태그와 option 태그\r선택 목록 정의하기 - select 태그\r선택 항목 지정하기 - option 태그\r텍스트 영역 만들기 - textarea 태그\r셀이 각각 표시되는 테두리 그리기\r일반적인 표 테두리 그리기\r무작정 따라하기 table 태그를 이용한 영양 비교표 만들기\r무작정 따라하기 CSS가 적용된 폼 만들기\r 06 홈페이지의 꽃 하이퍼링크 만들고 꾸미기 하이퍼링크란?\r하이퍼링크의 종류\r이미지 링크\r텍스트 링크\r메뉴 링크\r하이퍼링크 만들기 - a 태그와 href 속성\r텍스트 링크 만들기\r이미지 링크 만들기\r상대 경로와 절대 경로\r앵커 이용하기 - name 속성\r새 창에 링크 열기 - target 속성\r링크 밑줄 다루기\r밑줄 없애기 - text-decoration:none\r밑줄을 점선으로 표시하기 - border-bottom:dotted\r링크와 관련된 스타일\r마우스 포인터를 링크 위에 올려놓는 상황 - a:hover 스타일\r링크를 클릭하는 상황 - a:active 스타일\r한번 방문했던 링크에 적용- a:visited 스타일\r링크 관련 스타일의 적용 순위\r무작정 따라하기 각 문서로 연결하는 링크 만들기\r 07 홈페이지를 더 멋지게 만드는 이미지와 멀티미디어 파일 삽입하기 이미지 삽입하기 - img 태그\r웹 문서와 이미지\r이미지를 대신하는 텍스트 만들기 - alt 속성\r이미지를 설명하는 텍스트 만들기 - title 속성\ralt 속성을 사용하지 않는 경우\r[잠깐만요] 다른 홈페이지에 있는 이미지 삽입하기\r내 컴퓨터의 이미지를 게시판에 올리기\r 멀티미디어 파일 삽입하기 - embed / object 태그\rembed 태그 사용하기\r[잠깐만요] 웹앨범 서비스를 제공하는 구글의 피카사\robject 태그 사용하기\r웹 서버에 있는 동영상 삽입하기\r[잠깐만요] 사용자 컴퓨터에서 액티브엑스(ActiveX) 실행하기\r무작정 따라하기 웹 문서에 이미지 삽입하기\r무작정 따라하기 인터넷 동영상 퍼오기\r한걸음 더 컨트롤을 활성화하지 않고 멀티미디어 파일 재생하기\r 08 스타일 시트로 홈페이지의 레이아웃 디자인하기 레이아웃 시안 그리기\r각각의 요소를 알맞은 그릇에 넣기 - div 태그\r요소들을 원하는 위치에 배치하기 - position 속성\r동등한 위치에 배치하기 - static 속성값\r상대적인 위치에 배치하기 - relative 속성값\r절대적인 위치에 배치하기 - absolute 속성값\r요소의 좌우 위치를 지정하기 - float 속성\rfloat 속성을 취소하기 - clear 속성\r무작정 따라하기 스타일 시트로 내용 배치하기\r무작정 따라하기 스타일 시트 숨겨 두기\r | 둘째마당 | 자바스크립트  09 움직이는 홈페이지 자바스크립트 자바스크립트란?\rHTML과 자바스크립트의 관계\r자바스크립트의 탄생\r[잠깐만요] 자바스크립트와 자바는 다른 언어입니다.\r자바스크립트의 동작 원리\r자바스크립트 소스 작성 요령\r자바스크립트의 선언 방법\r내부 스크립트 사용하기\r외부 스크립트 연결하기\r외부 스크립트의 장점과 단점\r코딩을 위해 지켜야 할 규칙\r스크립트 실행하기\rhead 태그와 /head 태그 사이에 자바스크립트 삽입하기\rbody 태그 바로 다음에 자바스크립트 삽입하기\r/body 태그 바로 직전에 자바스크립트 삽입하기\r이벤트 핸들러 이용하기\r무작정 따라하기 HTML 문서에 자바스크립트 삽입하기\r무작정 따라하기 외부 스크립트 연결하기\r 10 기본을 튼튼히 다져주는 자바스크립트 기초 문법 1 자바스크립트 변수\r변수 이름\r변수 선언하기\r변수 영역\r저장 유형\r데이터 유형\r숫자형\r[잠깐만요] 용어 통일은 어려워요!\r[잠깐만요] 색상값 표현은 16진수입니다.\r논리형\r문자열\r[잠깐만요] 특수 문자 사용법\rnull\r연산자\r산술 연산자\r문자열 연산자\r대입 연산자\r비교 연산자\r논리 연산자\r데이터 유형 연산자\r연산자의 우선순위\r대화상자\r경고 창\r확인 창\r프롬프트 창\r조건문\rif 문\relse 문\r중첩된 if-else 문\rswitch 문\r무작정 따라하기 사용자가 입력한 문자 테스트하기\r한걸음 더 2진수와 8진수, 그리고 16진수\r한걸음 더 비트 연산자와 시프트 연산자\r 11 기본을 튼튼히 다져주는 자바스크립트 기초 문법 2 반복문\rfor 문\rwhile 문\rdo … while 문\rbreak 문\r[잠깐만요] for 문, while 문, do...while 문의 삼각관계\rcontinue 문\r함수\r함수와 매개변수\r함수와 인수\r기본 인수가 필요한 함수의 사용법\r[잠깐만요] script 태그 위치에 따른 실행 순서 차이\rreturn 문\r이벤트와 이벤트 핸들러\r이벤트\r이벤트 핸들러\r[잠깐만요] 이벤트 핸들러가 대소문자를 인식하는 방법\r인라인 이벤트 핸들러\r함수와 함께 이벤트 핸들러 사용하기\r객체\r프로퍼티\r메서드\r인스턴스 객체 만들기\r한걸음 더 오류를 줄이기 위한 소스 작성 방법\r 12 어디에서든 활용하는 기본 내장 객체 내장 객체의 구조\r내장 객체의 종류\rHTML 태그와 자바스크립트 객체의 관계\r배열 다루기 - Array 객체\r배열 선언\r배열 길이 알아내기 - length 프로퍼티\r다차원 배열\r메서드\r날짜와 시간 정보 조절하기 - Date 객체\r인스턴스 객체 만들기\r메서드\r문자열을 다양하게 활용하기 - String 객체\r문자열 길이 구하기 - length 프로퍼티\r글꼴 관련 메서드\r링크 관련 메서드\r문자열 위치 관련 메서드\r문자열 추출 관련 메서드\r수학적 계산 실행하기 - Math 객체\r프로퍼티\r메서드\r함수를 객체로 정의하기 - Function 객체\r최대/최소/무한대 다루기 - Number 객체\r화면 정보 가져오기 - Screen 객체\r무작정 따라하기 하루를 시작하는 메시지 표시하기\r 13 브라우저를 움직이는 window 객체 window 객체\rwindow 객체 프로퍼티\r[잠깐만요] body 태그에서 프로퍼티 지정하기\rwindow 객체 메서드\r새 브라우저 창 열기 - open() 메서드\r[잠깐만요] 팝업 창의 위치를 원하는 곳으로 지정하기\r브라우저 창 닫기 - close() 메서드\r창의 위치 조절하기 - moveBy() / moveTo() 메서드\r창의 크기 조절하기 - resizeBy() / resizeTo() 메서드\r시간과 관련된 동작 지정하기 - setTimeout() / clearTimeout() 메서드\r무작정 따라하기 이벤트 핸들러를 이용한 팝업 창 열기\r실전예제\r 14 브라우저의 정보를 다루는 location / history / navigator 객체 웹 문서 주소 정보 다루기 - location 객체\r프로퍼티\r메서드\r브라우저 주소 목록 저장하기 - history 객체\r프로퍼티\r메서드\r[잠깐만요] 인터넷 익스플로러 브라우저를 구별하는 방법\r브라우저 정보 보여주기 - navigator 객체\r프로퍼티\r메서드\r무작정 따라하기 현재 웹 문서에 위치 고정하기\r 15 내용을 돋보이게 하는 document 객체 문서 내용 다루기 - document 객체\r프로퍼티\r문서 정보와 관련된 프로퍼티\r메서드\r문서에 내용 입력하기 - write() / writeln() 메서드\r문서 안의 앵커 정보 이용하기 - anchor 객체\r문서 안 앵커 개수 확인하기 - length 프로퍼티\r웹 문서의 링크 정보 이용하기 - link 객체\r프로퍼티\r웹 문서의 이미지 정보 이용하기 - image 객체\r프로퍼티\r무작정 따라하기 이미지 슬라이드 쇼 만들기\r 16 완벽한 회원 가입 양식을 만드는 form 객체 폼과 자바스크립트\rform 객체\rform 객체의 하위 객체\rform 태그와 관련된 프로퍼티\rform 태그와 관련 없는 프로퍼티 - elements / length 프로퍼티\rform 요소를 순서대로 배열하기 - forms 프로퍼티\rform 객체 메서드\r텍스트 필드 관리하기 - text 객체\r프로퍼티\r메서드\r이벤트 핸들러\r패스워드 필드 관리하기 - password 객체\r[잠깐만요] 주소 표시줄에 아이디와 비밀번호가 다 보입니다.\r프로퍼티 / 메서드 / 이벤트 핸들러\r텍스트 영역 관리하기 - textarea 객체\r프로퍼티 / 메서드 / 이벤트 핸들러\r히든 필드 관리하기 - hidden 객체\r프로퍼티\r버튼 관리하기 - button / submit / reset 객체\r프로퍼티\r[잠깐만요] 자바스크립트가 할 수 있는 일과 할 수 없는 일\r이벤트 핸들러\r체크박스 관리하기 - checkbox 객체\r프로퍼티\r메서드\r이벤트 핸들러\r라디오 버튼 관리하기 - radio 객체\r프로퍼티\r메서드\r이벤트 핸들러\r콤보 메뉴 관리하기 - select 객체\r프로퍼티\r메서드\r이벤트 핸들러\roptions 배열 프로퍼티\r생성자를 이용해 Option 객체 만들기\r파일 업로드 관리하기 - fileUpload 객체\r프로퍼티\r메서드\r이벤트 핸들러\r무작정 따라하기 비밀번호가 같은지 확인하기\r 17 홈페이지 정보를 파일로 저장하는 쿠키 쿠키란?\r형식\r동작\r무작정 따라하기 윈도우 비스타에서 쿠키 정보 찾아보기\n",
        "isbn10": "8975607542",
        "isbn13": "9788975607547"
    },
    {
        "title": "유지보수 가능한 코딩의 기술 자바편 (클린 코드의 비결)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11432803",
        "image": "https://bookthumb-phinf.pstatic.net/cover/114/328/11432803.jpg?type=m1&udate=20170803",
        "author": "주스트 뷔서|파스칼 반 에크|롭 반 더 리크|실번 리갈|히시 위즌홀즈",
        "price": "18000",
        "discount": "16200",
        "publisher": "길벗",
        "pubdate": "20161222",
        "isbn": "1160500789 9791160500783",
        "description": "이 책에서는 소프트웨어 개선 그룹(SIG)의 컨설턴트들이 자바로 작성된 JPacman 오픈 소스를 예로 들어 유지보수 가능한 소프트웨어를 만드는 10가지 원칙을 설명한다. 특정 기술에만 해당하는 지표나 변별력이 없는 지표는 제외했다. 팀에서 지키면 최소한 읽을 수 있고, 유지보수가 가능한 코드를 작성할 수 있는... ",
        "authorIntroContent": "\n주스트 뷔서\n저자 : 주스트 뷔서저자 : 주스트 뷔서저자 주스트 뷔서는 SIG 연구소장으로 소프트웨어를 평가하고 마스터하기 위해 SIG가 구축한 방법 및 도구의 기반 기술을 담당한다.저자 : 파스칼 반 에크저자 파스칼 반 에크는 SIG 소프트웨어 품질 담당 컨설턴트이며 IT 보안, 소프트웨어 지표 등의 분야에 80편이 넘는 논문을 썼다.저자 : 롭 반 더 리크저자 롭 반 더 리크는 SIG 소프트웨어 품질 담당 컨설턴트로 SIG 소프트웨어 분석 툴의 개발/유지보수를 담당하는 내부 팀을 이끌고 있다.저자 : 실번 리갈저자 실번 리갈은 SIG 소프트웨어 품질 컨설턴트로 소프트웨어 디자인 및 개발 프로세스 개선에 우선순위를 부여하고 보안을 향상하는 일을 한다.저자 : 히시 위즌홀즈저자 히시 위즌홀즈는 공공 분야 담당 소프트웨어 품질 컨설턴트로 고객사 프로젝트가 잘 관리될 수 있게 개발 프로세스 전반에 대해 컨설팅한다.역자 : 이일웅역자 이일웅은 10년 넘게 국내와 미국 등지에서 대기업/공공기관 프로젝트를 수행한 웹 개발자이자 두 딸의 사랑을 한 몸에 받고 사는 행복한 딸바보다. 자바 기반의 서버 플랫폼 구축, 데이터 연계 그리고 다양한 자바스크립트 프레임워크를 응용한 프런트엔드 화면 개발을 주로 담당해왔다. 시간이 날 땐 피아노를 연주한다* 홈페이지 http://www.bullion.pe.kr\n",
        "bookIntroContent": "누가 코드를 이따위로 짠 거야? 나 일 못 해!다른 사람의 코드를 작업하다가 좌절한 경험이 있는가? 서비스가 성장하면 혼자 작업하던 코드도 여러 명이 작업해야 하고, 코드 규모가 커질수록 쉽게 고칠 수 없는 코드로 변하고 만다. 새로운 기능을 개발하는 시간보다 기존 코드를 읽고 수정하는 시간이 더 오래 걸리고, 코드 수정 비용이 급격하게 증가하게 된다. 프로젝트 마감? 마감은 늘어나라고 있는 거 아닌가?이 책에서는 소프트웨어 개선 그룹(SIG)의 컨설턴트들이 자바로 작성된 JPacman 오픈 소스를 예로 들어 유지보수 가능한 소프트웨어를 만드는 10가지 원칙을 설명한다. 특정 기술에만 해당하는 지표나 변별력이 없는 지표는 제외했다. 팀에서 지키면 최소한 읽을 수 있고, 유지보수가 가능한 코드를 작성할 수 있는, 현실적인 지침을 제시한다. 개발팀의 서가에 이 책은 반드시 꽂혀 있어야 한다.",
        "tableOfContentsContent": "\n1장 들어가며\r__1.1 유지보수성이란?\r____1.1.1 소프트웨어 유지보수의 4대 유형\r__1.2 유지보수의 중요성\r____1.2.1 유지보수는 비즈니스에 지대한 영향을 끼친다\r____1.2.2 유지보수는 다른 품질 특성을 가능하게 한다\r__1.3 유지보수 3대 원칙\r____1.3.1 원리 1: 보통 단순한 가이드라인을 지키기만 해도 유지보수성은 나아진다\r____1.3.2 원리 2: 유지보수성은 나중으로 미룰 문제가 아니라 하나씩 실천하는 자세가 중요하다\r____1.3.3 원리 3: 지키지 않으면 다른 가이드라인들보다 결과가 더 안 좋은 가이드라인이 있다\r__1.4 유지보수성에 관한 오해\r____1.4.1 프로그래밍 언어에 따라 유지보수성이 달라진다\r____1.4.2 오해: 유지보수성은 업계마다 다르다\r____1.4.3 오해: 유지보수성은 곧 버그가 없는 상태나 마찬가지다\r____1.4.4 오해: 유지보수성은 모 아니면 도나 마찬가지다\r__1.5 유지보수성 판정\r__1.6 유지보수성 가이드라인 미리보기\r 2장 코드 단위를 짧게 하라\r__2.1 필요성\r____2.1.1 짧은 단위는 테스트하기 쉽다\r____2.1.2 짧은 단위는 분석하기 쉽다\r____2.1.3 짧은 단위가 재사용하기 쉽다\r__2.2 적용 가이드\r____2.2.1 새 단위를 작성할 경우\r____2.2.2 단위에 새 기능을 넣어 확장할 경우\r____2.2.3 리팩터링 기법으로 가이드라인을 적용\r__2.3 일반적인 반대 의견\r____2.3.1 단위를 많이 두면 성능이 떨어진다\r____2.3.2 코드를 펼치면 더 읽기 어렵다\r____2.3.3 가이드라인대로 하면 코드 형식이 무너진다\r____2.3.4 도저히 단위를 나눌 수 없다\r____2.3.5 단위를 나눈다고 별반 나아질 건 없다\r__2.4 참고\r 3장 코드 단위는 간단하게 짜라\r__3.1 필요성\r____3.1.1 간단한 단위는 수정하기 쉽다\r____3.1.2 간단한 단위는 테스트하기 쉽다\r__3.2 적용 가이드\r____3.2.1 조건문 체인 다루기\r____3.2.2 중첩 다루기\r__3.3 일반적인 반대 의견\r____3.3.1 높은 복잡도는 불가피하다\r____3.3.2 메서드를 나눈다고 복잡도가 줄어들지 않는다\r__3.4 참고\r 4장 코드는 한 번만 작성하라\r____4.0.1 복사 유형\r__4.1 필요성\r____4.1.1 복사한 코드는 분석하기 어렵다\r____4.1.2 복사한 코드는 고치기 어렵다\r__4.2 적용 가이드\r____4.2.1 ‘상위 클래스 추출’ 리팩터링 기법\r__4.3 일반적인 반대 의견\r____4.3.1 다른 코드베이스의 코드를 복사하는 건 괜찮다\r____4.3.2 복사한 뒤 조금씩 고쳐 쓰는 건 어쩔 수 없다\r____4.3.3 이 코드는 절대, 절대로 바뀔 일이 없다\r____4.3.4 전체 파일 복사는 백업으로 봐야 하지 않나요?\r____4.3.5 단위 테스트가 커버해준다\r____4.3.6 문자열 리터럴 복사는 어쩔 수 없고 해롭지 않다\r__4.4 참고\r 5장 단위 인터페이스를 작게 하라\r__5.1 필요성\r____5.1.1 작은 인터페이스가 이해하고 재사용하기 쉽다\r____5.1.2 인터페이스가 작아야 메서드를 수정하기 쉽다\r__5.2 적용 가이드\r__5.3 일반적인 반대 의견\r____5.3.1 인터페이스가 큰 파라미터 객체\r____5.3.2 큰 인터페이스를 리팩터링한다고 나아질 게 없다\r____5.3.3 원래 프레임워크, 라이브러리 인터페이스의 파라미터가 많다\r__5.4 참고\r 6장 관심사를 모듈로 분리하라\r__6.1 필요성\r____6.1.1 작고 느슨하게 결합된 모듈 덕분에 개발자들이 코드베이스를 나누어 독립적으로 작업할 수 있다\r____6.1.2 작고 느슨하게 결합된 모듈 덕분에 코드베이스를 따라가기 쉽다\r____6.1.3 작고 느슨하게 결합된 모듈 덕분에 새로 입사한 개발자들의 금기 영역을 없앨 수 있다\r__6.2 적용 가이드\r____6.2.1 클래스를 나누어 관심사를 분리한다\r____6.2.2 특정 구현부는 인터페이스 안에 숨긴다\r____6.2.3 커스텀 코드를 서드파티 라이브러리/프레임워크로 대체한다\r__6.3 일반적인 반대 의견\r____6.3.1 느슨한 결합은 코드 재사용과 상충된다\r____6.3.2 자바 인터페이스가 느슨한 결합에 쓰라고 만든 건 아니다\r____6.3.3 유틸리티 클래스를 자주 끌어 쓰는 건 어쩔 수 없다\r____6.3.4 느슨하게 결합한다고 유지보수성이 나아지지 않는다\r 7장 아키텍처 컴포넌트를 느슨하게 결합하라\r__7.1 필요성\r____7.1.1 컴포넌트 의존성이 낮아야 분리해서 유지보수할 수 있다\r____7.1.2 컴포넌트 의존성이 낮아야 유지보수 책임을 분담할 수 있다\r____7.1.3 컴포넌트 의존성이 낮아야 테스트하기 쉽다\r__7.2 적용 가이드\r____7.2.1 추상 팩토리 디자인 패턴\r__7.3 일반적인 반대 의견\r____7.3.1 컴포넌트가 하도 얽혀 있어서 의존성을 바로잡을 길이 없다\r____7.3.2 고칠 시간이 없다\r____7.3.3 스루풋 자체가 요건이다\r__7.4 참고\r 8장 아키텍처 컴포넌트의 균형을 잡아라\r__8.1 필요성\r____8.1.1 균형이 잘 잡힌 컴포넌트 덕분에 코드를 찾고 분석하기 쉽다\r____8.1.2 균형이 잘 잡힌 컴포넌트 덕분에 유지보수 효과를 분리할 수 있다\r____8.1.3 균형이 잘 잡힌 컴포넌트 덕분에 유지보수 책임을 분담할 수 있다\r__8.2 적용 가이드\r____8.2.1 컴포넌트로 기능을 묶는 기준이 되는 올바른 개념 수준\r____8.2.2 시스템 도메인을 명확히 하고 일관되게 적용하라\r__8.3 일반적인 반대 의견\r____8.3.1 컴포넌트 균형은 좀 안 맞아도 괜찮다\r____8.3.2 너무 꼬여 있어서 컴포넌트 균형이 깨진 상태다\r__8.4 참고\r 9장 코드베이스를 작게 하라\r__9.1 필요성\r____9.1.1 대규모 코드베이스 구축을 목표로 시작한 프로젝트는 실패할 가능성이 높다\r____9.1.2 대규모 코드베이스는 유지보수하기 힘들다\r____9.1.3 대규모 시스템은 결함 밀도가 높다\r__9.2 적용 가이드\r____9.2.1 기능적 조치\r____9.2.2 기술적 조치\r__9.3 일반적인 반대 의견\r____9.3.1 코드베이스 크기를 줄이면 생산성이 떨어지는 것으로 나타난다\r____9.3.2 프로그래밍 언어 때문에 코드베이스 크기를 줄일 수가 없다\r____9.3.3 시스템이 복잡해서 어쩔 수 없이 코드 복사를 하고 있다\r____9.3.4 플랫폼 아키텍처 상 코드베이스를 분리할 수 없다\r____9.3.5 코드베이스를 나누면 코드가 중복된다\r____9.3.6 결합도가 너무 높아 코드베이스를 나누는 건 불가능하다\r 10장 테스트를 자동화하라\r__10.1 필요성\r____10.1.1 테스트를 자동화하면 반복 테스트가 가능하다\r____10.1.2 테스트를 자동화하면 효율적으로 개발할 수 있다\r____10.1.3 테스트를 자동화하면 예측 가능한 코드를 만든다\r____10.1.4 테스트할 코드를 문서화한다\r____10.1.5 테스트를 작성하면 더 나은 코드를 짤 수 있다\r__10.2 적용 가이드\r____10.2.1 제이유닛 테스트 길들이기\r____10.2.2 단위 테스트를 올바르게 작성하기 위한 일반 원칙\r____10.2.3 테스트가 충분한지 여부를 판단하기 위한 커버리지 측정\r__10.3 일반적인 반대 의견\r____10.3.1 그래도 수동 테스트는 필요하다\r____10.3.2 단위 테스트를 작성하지 못하게 한다\r____10.3.3 커버리지가 낮은 상태에서 단위 테스트에 투자할 이유가 있을까?\r__10.4 기타\r 11장 클린 코드를 작성하라\r__11.1 흔적을 남기지 말라\r__11.2 적용 가이드\r____11.2.1 규칙 1: 단위 수준의 코드 악취를 남기지 말라\r____11.2.2 규칙 2: 나쁜 주석을 남기지 말라\r____11.2.3 규칙 3: 주석 안에 코드를 남기지 말라\r____11.2.4 규칙 4: 죽은 코드를 남기지 말라\r____11.2.5 규칙 5: 긴 식별자 이름을 남기지 말라\r____11.2.6 규칙 6: 매직 상수를 남기지 말라 193\r____11.2.7 규칙 7: 제대로 처리 안 한 예외를 남기지 말라\r__11.3 일반적인 반대 의견\r____11.3.1 주석은 곧 문서화다\r____11.3.2 예외 처리를 하면 코드가 늘어난다\r____11.3.3 코딩 가이드라인이 이것뿐인가?\r 12장 다음 단계\r__12.1 가이드라인을 실천하라\r__12.2 고수준(컴포넌트) 가이드라인보다 저수준(단위) 가이드라인이 우선한다\r__12.3 커밋 하나하나가 중요함을 기억하라\r__12.4 개발 프로세스에 관한 베스트 프랙티스는 다음 책에서\r 부록 A SIG의 유지보수성 판정법\n",
        "isbn10": "1160500789",
        "isbn13": "9791160500783"
    },
    {
        "title": "자바 정복",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=14254954",
        "image": "https://bookthumb-phinf.pstatic.net/cover/142/549/14254954.jpg?type=m1&udate=20181123",
        "author": "김상형",
        "price": "22000",
        "discount": "19800",
        "publisher": "소엔",
        "pubdate": "20181120",
        "isbn": "1196524602 9791196524609",
        "description": "『자바 정복』은 자바8의 람다, 스트림과 자바 9의 모듈화를 포괄하여 최신 JDK 11을 기준으로 자바 문법을 총정리한 도서다. 순서대로 읽을 수 있도록 자습서 형식으로 구성하였으며 짧고 핵심적인 예제 480개로 자바 문법을 체계적으로 소개한다. 각장 마지막에는 문법 응용을 위한 연습문제를 제공하며 한... ",
        "authorIntroContent": "\n김상형\n언제나 최신 IT 기술에 관심이 많아 다양한 프로젝트에 참여하고 있는 현직 프로그래머이다. 개발중에 습득한 이론을 글로 정리하여 출판 및 강좌로 올리고 있으며 예비 개발자를 위해 강사로도 활동한다. 초보 개발자를 위한 프로그래밍 연구 사이트인 소엔(www.soen.kr)을 20여년간 운영하고 있다.\r 주요 프로젝트로는 영한사전, 백과사전, PassFinder, 온라인 테스트 솔루션 NeoTest, 조선일보 TEPS, 국순당 차림표 시스템, ePost, 당근 텍스트 편집기, iLark 워드 편집기, 아너림 자판, 윈도우 모바일 LifeDiary 등이 있다. 2009년부터 안드로이드 프로젝트를 하고 있으며 Communities, HelloTweet, FingerMemo, 갤럭시S 카메라, 갤럭시S2 SNote 등의 프로젝트에 참여하였다.\r 저서로는 『델파이 정복(가남사)』, 『윈도우즈 API 정복(가남사, 한빛미디어)』, 『안드로이드 프로그래밍 정복(한빛 미디어)』, 『혼자 연구하는 C/C++(와우북스)』, 『파이썬 정복(한빛미디어)』, 『닷넷 정복(가메)』 등 30여권이 있으며 앞으로도 계속 집필에 매진할 계획이다.\n",
        "bookIntroContent": "『자바 정복』은 자바8의 람다, 스트림과 자바 9의 모듈화를 포괄하여 최신 JDK 11을 기준으로 자바 문법을 총정리한 도서다. 순서대로 읽을 수 있도록 자습서 형식으로 구성하였으며 짧고 핵심적인 예제 480개로 자바 문법을 체계적으로 소개한다. 각장 마지막에는 문법 응용을 위한 연습문제를 제공하며 한 학기 강의에 적합하도록 구성하였다.",
        "tableOfContentsContent": "\n제1장 자바\r제2장 개발환경\r제3장 변수\r제4장 조건문\r제5장 반복문\r제6장 연산자\r제7장 배열\r제8장 메서드\r제9장 클래스\r제10장 캡슐화\r제11장 상속\r제12장 다형성\r제13장 인터페이스\r제14장 패키지\r제15장 시스템 라이브러리\r제16장 유틸리티 클래스\r제17장 컬렉션\r제18장 제네릭\r제19장 예외 처리\r제20장 스레드\r제21장 스트림 입출력\r제22장 클래스의 중첩\r제23장 람다\r제24장 스트림\r제25장 열거형\r제26장 JDBC\r부록 찾아보기\r\n",
        "isbn10": "1196524602",
        "isbn13": "9791196524609"
    },
    {
        "title": "자바로 배우는 쉬운 자료구조",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=7278662",
        "image": "https://bookthumb-phinf.pstatic.net/cover/072/786/07278662.jpg?type=m1&udate=20180619",
        "author": "이지영",
        "price": "24800",
        "discount": "22320",
        "publisher": "한빛아카데미",
        "pubdate": "20130730",
        "isbn": "8998756420 9788998756420",
        "description": "『자바로 배우는 쉬운 자료구조』은 알고리즘에 대해 C와 자바 프로그래밍으로 구체화 시키는 방법을 다룬다. 자료구조와 알고리즘을 어렵고 추상적인 이론으로만 다루지 않고 쉽게 이해할 수 있도록 다양한 그림을 통해 풀어 설명하고 자바 프로그래밍을 통하여 실제적으로 사용할 수 있도록 하였다.",
        "authorIntroContent": "\n이지영\n저자 : 이지영저자 이지영은 서경대학교 컴퓨터과학과를 졸업하고 동대학원에서 소프트웨어공학을 전공하였다. 현재 프로젝트 관리 기술사(PMP)로 근무 중이며, 서경대학교 컴퓨터과학과 겸임교수로 재직 중이다. 저서로는 『C로 배우는 쉬운 자료구조(개정판)』(한빛미디어, 2010)과 『최신 인터넷의 이해』(청람, 2004)가 있다. 주요 관심 연구 분야는 소프트웨어 프로세스, 알고리즘이다. 현재는 자료구조, C, JAVA, 디지털 논리 설계 등을 강의하고 있다.\n",
        "bookIntroContent": "『자바로 배우는 쉬운 자료구조』은 알고리즘에 대해 C와 자바 프로그래밍으로 구체화 시키는 방법을 다룬다. 자료구조와 알고리즘을 어렵고 추상적인 이론으로만 다루지 않고 쉽게 이해할 수 있도록 다양한 그림을 통해 풀어 설명하고 자바 프로그래밍을 통하여 실제적으로 사용할 수 있도록 하였다.",
        "tableOfContentsContent": "\nPart 1 | 자료구조 시작하기 Chapter 1 자료구조 개요\r01_ 자료구조 개요\r02_ 자료구조의 분류\r03_ 자료의 표현\r요약\r연습문제\r Chapter 2 소프트웨어와 자료구조\r01_ 소프트웨어 생명주기\r02_ 추상 데이터 타입\r03_ 알고리즘\r04_ 성능분석\r요약\r연습문제\r Chapter 3 자바 프로그래밍\r01_ 자바의 기본 익히기\r02_ 자바 식별자\r03_ 자바의 데이터 타입\r04_ 제어문\r05_ 메소드 호출\r06_ try 문\r요약\r연습문제\r Chapter 4 객체지향 프로그래밍\r01_ 객체지향 프로그래밍의 이해\r02_ 객체지향 언어 : 자바\r요약\r연습문제\r Part 2 | 자료구조의 기본 표현 방식 Chapter 5 순차 자료구조 방식\r01_ 선형 리스트\r02_ 선형 리스트의 구현\r03_ 다항식의 순차 자료구조 표현\r04_ 행렬의 순차 자료구조 표현\r요약\r연습문제\r Chapter 6 연결 자료구조 표현 방식\r01_ 연결 자료구조 방식\r02_ 단순 연결 리스트\r03_ 원형 연결 리스트\r04_ 이중 연결 리스트\r05_ 다항식의 연결 자료구조 표현\r요약\r연습문제\r Part 3 | 응용 자료구조 Chapter 7 스택\r01_ 스택\r02_ 스택의 추상 자료형\r03_ 스택의 구현\r04_ 스택의 응용\r요약\r연습문제\r Chapter 8 큐\r01_ 큐\r02_ 큐의 구현\r03_ 큐의 응용\r요약\r연습문제\r Chapter 9 트리\r01_ 트리\r02_ 이진 트리\r03_ 이진 트리의 구현\r04_ 이진 트리의 순회\r05_ 이진 탐색 트리\r06_ 힙\r요약\r연습문제\r Chapter 10 그래프\r01_ 그래프의 구조\r02_ 그래프의 구현\r03_ 그래프 순회\r04_ 신장 트리와 최소 비용 신장 트리\r요약\r연습문제\r Part 4 | 자료의 정렬과 검색 Chapter 11 정렬\r01_ 정렬\r02_ 선택 정렬\r03_ 버블 정렬\r04_ 퀵 정렬\r05_ 삽입 정렬\r06_ 셸 정렬\r07_ 병합 정렬\r08_ 기수 정렬\r09_ 힙 정렬\r10_ 트리 정렬\r요약\r연습문제\r Chapter 12 검색\r01_ 검색\r02_ 순차 검색\r03_ 이진 검색\r04_ 이진 트리 검색\r05_ 해싱\r요약\r연습문제\n",
        "isbn10": "8998756420",
        "isbn13": "9788998756420"
    },
    {
        "title": "자바스크립트 기초의 모든 것, 웹 코딩 이야기!",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13776205",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/762/13776205.jpg?type=m1&udate=20180726",
        "author": "이용학|황현숙",
        "price": "15000",
        "discount": "13500",
        "publisher": "교학사",
        "pubdate": "20180730",
        "isbn": "890920768X 9788909207683",
        "description": "이 책은 웹 디자이너를 위한 자바스크립트(Javascript) 입문서입니다. 프로그래밍 경험이 전혀 없다는 가정 하에 초보자의 눈높이에 맞춰 자바스크립트 코딩을 설명하고 있습니다.\n자바스크립트는 객체를 기반으로 프로그래밍 하는 객체 지향 언어입니다. 그래서 객체를 이해하고 객체를 잘 활용할 줄 아는 것이... ",
        "authorIntroContent": "\n이용학\n약력)\r- 1998년 동국대학교 컴퓨터공학 박사\r- 1998~2002년 김포대학교 컴퓨터 계열 교수\r- 2001~2013년 백상정보통신 연구소장\r- 2013~ 하비 대표\r 저서)\r- 인문계 코딩 교육을 위한 C 이야기\r- 비주얼베이직 데이터베이스 솔루션\r- HTML@자바스크립트 쉽고 빠르게\r- ASP 3.0 프로그래밍|||약력)\r- 동원대학교 스마트IT콘텐츠과 교수\r- 지식경제부 기술혁신 평가단 평가위원\r- 조달청 평가위원\r- 경기도 광주시 광고물 관리 및 디자인 심의위원\r- 경기도 이천시 광고물 관리 및 디자인 심의위원\r- 남한산성 청소년 영상제 심사위원장\r- 사단법인 한국 브랜드 디자인 학회 이사\r 저서)\r- 코딩정복 with 파이썬\r- 엑셀 2013 시작하기\r- 파워포인트 2013 시작하기\r- 엑셀과 파워포인트 2007 HOWTO\n",
        "bookIntroContent": "이 책은 웹 디자이너를 위한 자바스크립트(Javascript) 입문서입니다. 프로그래밍 경험이 전혀 없다는 가정 하에 초보자의 눈높이에 맞춰 자바스크립트 코딩을 설명하고 있습니다.자바스크립트는 객체를 기반으로 프로그래밍 하는 객체 지향 언어입니다. 그래서 객체를 이해하고 객체를 잘 활용할 줄 아는 것이 중요합니다. 하지만 초보자는 객체 이전에 변수나 상수, 조건문, 반복문, 배열, 함수 등 일반적인 프로그래밍 문법과 규칙을 먼저 익혀야 합니다. 그래서 이 책은 다음과 같이 2개의 파트로 구성하여 프로그래밍 기초와 자바스트립트를 모두 효율적으로 학습할 수 있도록 하였습니다. 1장 - 5장 : 객체의 개념을 쏙 빼고 일반적인 프로그래밍 문법을 설명합니다.6장 - 8장 : 앞 파트의 지식을 바탕으로 객체를 설명합니다.점진적으로 개념을 쌓아가면서 학습하여 이해도를 높이는데 초점을 두었습니다. 뿐만 아니라 각 장마다 당장 필요한 프로그래밍 개념과 자바스크립트에 집중 학습할 수 있습니다.",
        "tableOfContentsContent": "\nChapter 1 기본적으로 알아야 할 것들\r1. 처음 보는 자바스크립트\r2. 자바스크립트 소스 코드의 기술 위치\r◆ [head]와 [/head] 사이에 작성하기 \r◆ 외부 파일에 작성하기\r3. 소스를 기술하는 코딩 규칙\r◆ 세미콜론(;) 사용하기 \r◆ 들여쓰기\r◆ 주석과 공백 라인 사용하기 \r◆ 대문자와 소문자 구분하기\r4. 소스 코드 간단히 디버깅하기\r5. 변수와 상수 이야기\r◆ 변수와 상수에 대한 질의 응답\r6. 변수 이름을 만드는 규칙\r7. 자바스크립트에서 사용하는 데이터 종류◆ 동적 데이터 형이란? \r◆ 숫자 사용하기 \r◆ Infinity와 NaN \r◆ 문자열 사용하기 \r◆ 이스케이프 시퀀스(escape sequence) 사용하기\r Chapter 2 연산자 사용하기\r1. 산술 연산자(Arithmetic Operators)\r2. 할당 연산자(Assignment Operators)\r3. 비교 연산자(Comparison Operators)\r4. 논리 연산자(Logical Operators)\r5. 비트 연산자(Bitwise Operators)\r6. 3항 연산자(Ternary Operator)\r7. 문자열 연산자(String Operators)\r8. 연산의 우선 순위(Operator Precedence)\r Chapter 3 조건문 사용하기\r1. 단순 if 문 사용하기\r2. if ... else 문 사용하기\r3. if ... else if 문 사용하기\r4. switch 문 사용하기\r Chapter 4 반복문과 배열 사용하기\r1. for 문 사용하기\r◆ 중첩 for 문 사용하기\r2. while 문 사용하기\r◆ 중첩 while 문 사용하기\r3. do...while 문 사용하기\r◆ 중첩 do...while 문 사용하기\r4. break 문과 continue 문 사용하기\r5. 배열 사용하기\r◆ for...in 문 사용하기 \r◆ 가변 크기의 배열 사용하기\r Chapter 5 함수 사용하기\r1. 함수 개념 잡기\r2. 인수를 사용하는 함수\r3. 결과 값을 반환하는 함수\r4. 자바스크립트 내장 함수 사용하기\r5. 전역 변수와 지역 변수 사용하기\r Chapter 6 기본적으로 알아야 할 것들\r1. 객체 개념 잡기\r2. 문자열 객체 사용하기\r3. 숫자 객체 사용하기\r4. 배열 객체 사용하기\r5. Math 객체 사용하기\r6. Date 객체 사용하기\r◆ Date 객체의 생성 형식 \r◆ Date 객체의 메소드 사용하기\r7. 나만의 객체 만들기\r◆ 프로퍼티만 있는 객체 만들기 \r◆ for...in 문 사용하기\r◆ 메소드가 있는 객체 만들기 \r◆ 객체 원형(prototype) 사용하기\r◆ this의 의미\r Chapter 7 BOM 사용하기\r1. BOM 개념 잡기\r2. 이벤트 사용하기\r3. window 객체 사용하기\r◆ 알림, 확인, 입력 상자 사용하기 \r◆ 윈도우 크기 알아보기\r◆ 프레임 변경하기 \r◆ 일정시간 간격으로 실행하기\r◆ 일정시간 경과 후 실행하기 \r◆ 새로운 윈도우 열기\r◆ 윈도우 크기 조절하기 \r◆ 윈도우를 다른 위치로 이동하기\r◆ 페이지를 조금씩 이동하기\r4. screen 객체 사용하기\r5. navigator 객체 사용하기\r6. history 객체 사용하기\r7. location 객체 사용하기\r Chapter 8 DOM 사용하기\r1. DOM 개념 잡기\r2. id로 요소 찾기\r◆ id로 요소 찾아 스타일 변경하기 \r3. 태그 이름으로 요소 찾기\r◆ 태그 이름으로 특정 범위 내의 요소 찾기 \r◆ 태그 이름으로 복수 요소의 스타일 변경하기\r4. 클래스 이름으로 요소 찾기\r5. querySelectorAll( ) 메소드로 요소 찾기6. 속성 값 변경하기\r7. DOM 이벤트 사용하기\r◆ 이벤트에 this 사용하기\r8. DOM으로 이벤트 할당하기\r9. DOM 노드의 계층 구조 살펴보기\r10. 새로운 노드 만들고 추가하기\r11. 요소 삽입하기\r12. 요소 삭제하기\r13. 요소 바꾸기\r14. 자식 노드 찾기\r15. 모든 자식 노드 찾기\r16. 첫 번째 자식 노드와 마지막 자식 노드 찾기\r17. 부모 노드 찾기\r18. 다음 노드와 이전 노드 찾기\n",
        "isbn10": "890920768X",
        "isbn13": "9788909207683"
    },
    {
        "title": "자바스크립트 프로젝트북 (실무에 적합한 9가지 프로젝트로 배우는 웹 프로그래밍, Functional Reactive Programming)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=12285042",
        "image": "https://bookthumb-phinf.pstatic.net/cover/122/850/12285042.jpg?type=m1&udate=20170925",
        "author": "권대용",
        "price": "28000",
        "discount": "25200",
        "publisher": "한빛미디어",
        "pubdate": "20170801",
        "isbn": "896848340X 9788968483400",
        "description": "이 책에서는 실무와 밀접한 내용을 다양한 유형의 웹 애플리케이션이나 UI 요소로 익힐 수 있도록 9가지 프로젝트를 구성했다. 프로젝트 주요 부분에 자바스크립트와 제이쿼리 소스를 함께 수록하여, 자바스크립트와 제이쿼리를 함께 이해하고 실무 능력을 키울 수 있게 했다.",
        "authorIntroContent": "\n권대용\n저자 : 권대용저자 권대용은 개발자이기보다는 자유를 추구하는 크리에이터. 한 분야에만 머물지 않고 게임과 멀티미디어 웹 분야에서 기획과 개발을 주도하며 현업에서 다양한 상용 작품을 런칭했다. 대학에서 디지털 미디어와 영상학을 전공했으며 현재는 웹 디자인과 개발에 관련된 실무 교육과 미디어 교육 특강을 진행하면서 집필을 병행하고 있다.\n",
        "bookIntroContent": "실무 개발자를 위한 웹 프로그래밍 레시피!프로그래밍 언어를 공부할 때는 실무에서 많이 사용하는 코드를 조금씩 구현해보면서 익히는 것이 좋다. 이 책에서는 실무와 밀접한 내용을 다양한 유형의 웹 애플리케이션이나 UI 요소로 익힐 수 있도록 9가지 프로젝트를 구성했다. 프로젝트 주요 부분에 자바스크립트와 제이쿼리 소스를 함께 수록하여, 자바스크립트와 제이쿼리를 함께 이해하고 실무 능력을 키울 수 있게 했다.",
        "tableOfContentsContent": "\nPart 1 자바스크립트 기초 다지기\r CHAPTER 1 시작하기 전에 \r1.1 개발 환경 설정 \r1.2 자바스크립트 바로 알기 \r1.3 마치며 \r CHAPTER 2 놓치기 쉬운 자바스크립트 문법 \r2.1 변수와 타입 \r2.2 제어문 \r2.3 함수와 유효 범위 \r2.4 배열과 객체 \r2.5 마치며 \r CHAPTER 3 문서를 동적으로 다루는 방법: DOM \r3.1 하나의 문서 객체를 선택하는 메서드\r3.2 여러 문서 객체를 선택하는 메서드\r3.3 텍스트 조작과 DOM 속성 다루기\r3.4 마치며 \r CHAPTER 4 이벤트 제어\r4.1 인라인 이벤트 \r4.2 이벤트 핸들러 \r4.3 이벤트 리스너 \r4.4 두 가지 이벤트 속성으로 hover 처리\r4.5 submit 이벤트와 기본 동작 방지 \r4.6 터치 이벤트\r4.7 드래그 앤 드롭 구현\r4.8 연습 문제\r4.9 마치며 \r Part 2 실전 프로젝트\r CHAPTER 5 워밍업: 프로그래밍 도전하기\r5.1 구구단 출력 애플리케이션\r5.2 작업 목록 애플리케이션\r5.3 마치며 \r CHAPTER 6 프로젝트 1: 계산기\r6.1 개요\r6.2 사전 학습: form 요소\r6.3 구현하기\r6.4 기능 개선하기: 예외 처리하기\r6.5 jQuery 코드로 변환하기\r6.6 연습 문제\r6.7 마치며 \r CHAPTER 7 프로젝트 2: 라이트 박스\r7.1 개요 \r7.2 구현하기\r7.3 jQuery 코드로 변환하기\r7.4 연습 문제\r7.5 마치며\r CHAPTER 8 프로젝트 3: 달력\r8.1 개요 \r8.2 사전 학습: Date 객체\r8.3 구현하기\r8.4 기능 개선하기: 조회 기능 추가하기\r8.5 jQuery 코드로 변환하기\r8.6 연습 문제\r8.7 마치며\r CHAPTER 9 프로젝트 4: 3D 페이지\r9.1 개요\r9.2 구현하기\r9.3 자바스크립트 전체 코드 보기\r9.4 연습 문제\r9.5 마치며\r CHAPTER 10 프로젝트 5: 다이내믹 배너\r10.1 개요\r10.2 구현하기\r10.3 jQuery 코드로 변환하기\r10.4 연습 문제\r10.5 마치며\r CHAPTER 11 프로젝트 6: 지도\r11.1 개요\r11.2 사전 학습: AJAX\r11.3 구현하기\r11.4 기능 개선하기: 스타일 지정하기\r11.5 연습 문제\r11.6 마치며\r CHAPTER 12 프로젝트 7: 날씨 위젯\r12.1 개요\r12.2 사전 학습: openweather API\r12.3 구현하기\r12.4 자바스크립트 전체 코드 보기\r12.5 연습 문제\r12.6 마치며 \r CHAPTER 13 프로젝트 8: 퀴즈 게임\r13.1 개요 \r13.2 사전 학습: 객체 지향 프로그래밍\r13.3 구현하기\r13.4 jQuery 코드로 변환하기\r13.5 연습 문제\r13.6 마치며\r CHAPTER 14 프로젝트 9: 스티키 메모장\r14.1 개요\r14.2 사전 학습: 스토리지\r14.3 구현하기\r14.4 연습 문제\r14.5 마치며\r Part 3 더 알아보기\r CHAPTER 15 jQuery 라이브러리\r15.1 jQuery 실행 환경\r15.2 jQuery 객체와 메서드\r15.3 jQuery 선택자\r15.4 문서 조작\r15.5 jQuery 애니메이션\r15.6 jQuery 이벤트\r CHAPTER 16 ECMAScript 6\r16.1 ECMAScript 6 소개\r16.2 ES6 실행 환경\r16.3 변수와 상수\r16.4 화살표 함수\r16.5 파라미터 핸들링\r16.6 객체 표현식\r16.7 for ~ of 문\r16.8 템플릿 표현식\r16.9 배열과 객체의 비구조화\r16.10 클래스\r\n",
        "isbn10": "896848340X",
        "isbn13": "9788968483400"
    },
    {
        "title": "자바 네트워크 프로그래밍 (자바 8과 함께하는 네트워크 애플리케이션 개발)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11472767",
        "image": "https://bookthumb-phinf.pstatic.net/cover/114/727/11472767.jpg?type=m1&udate=20170104",
        "author": "리차드 리스",
        "price": "30000",
        "discount": "27000",
        "publisher": "에이콘출판",
        "pubdate": "20170102",
        "isbn": "8960779563 9788960779563",
        "description": "『자바 네트워크 프로그래밍』은 자바를 이용하여 네트워크 애플리케이션을 개발하는 데 필요한 기술을 배우고, 이를 실제로 활용할 수 있도록... 및 암호화 등 네트워크에 대한 기본 개념과 활용 예제를 살펴본다. 또한 자바 8 이전 버전과 자바 8을 비교해 독자들이 빠르게 학습할 수 있도록 도와준다.",
        "authorIntroContent": "\n리차드 리스\n저자 : 리차드 리스저자 리차드 리스(RICHARD M REESE)는 산업과 학계 모두에서 근무했다. 17년 동안 통신 및 항공 산업에서 근무했고, 연구 및 개발, 소프트웨어 개발, 감독, 교육을 비롯한 분야에서 다양한 능력을 제공했다. 현재 산업에서의 다년간 경험을 가르침에 적용할 수 있는 기회를 준 탈튼 주립대학교(TARLETON STATE UNIVERSITY)에서 학생들을 가르치고 있다.다수의 자바 책과 C 포인터 책을 출간했다. 가까운 주제에 대해 간결하고 쉬운 접근 방식을 사용한다. EJB 3.1, 자바 7과 자바 8로 업데이트, 인증, 함수형 프로그래밍 JMONKEYENGINE, 자연어 처리 등 다양한 자바 관련 도서를 저술했다.역자 : 유연재역자 유연재는 동국대학교 재학 중이던 2002년부터 다수의 회사에서 개발을 시작해 현재 더케이손해보험에서 일반 보험 시스템 개발을 담당하고 있다. 과거에는 신기술에 관심이 많아 새로운 기술을 공부해 적용하는 것을 즐겼으나, 요즘은 비즈니스 프로세스에 중점을 두고 이를 효율적으로 개발에 적용하는 방법을 고민 중인 삼십 대 중반 프로그래머다.\n",
        "bookIntroContent": "『자바 네트워크 프로그래밍』은 자바를 이용하여 네트워크 애플리케이션을 개발하는 데 필요한 기술을 배우고, 이를 실제로 활용할 수 있도록 하는 지침서다. 네트워크 주소(IPV4/IPV6), TCP/UDP, 클라이언트/서버, P2P, 보안 및 암호화 등 네트워크에 대한 기본 개념과 활용 예제를 살펴본다. 또한 자바 8 이전 버전과 자바 8을 비교해 독자들이 빠르게 학습할 수 있도록 도와준다.",
        "tableOfContentsContent": "\n1장. 네트워크 프로그래밍 시작\r__InetAddress 클래스를 사용한 네트워크 주소\r__NIO 지원\r____URLConnection 클래스 사용\r____버퍼와 채널을 이용한 URLConnection 클래스 사용\r__클라이언트/서버 아키텍처\r__간단한 에코 서버 생성\r____간단한 에코 클라이언트 생성\r____자바 8을 사용한 에코 서버와 클라이언트 지원\r__UDP와 멀티캐스팅\r____멀티캐스트 서버 생성\r____멀티캐스트 클라이언트 생성\r__확장성\r____스레드 서버 생성\r____스레드 서버 사용\r__보안\r____SSL 서버 생성\r____SSL 클라이언트 생성\r____보안 키 생성\r__요약\r  2장. 네트워크 주소\r__네트워크 기본\r____네트워크 기본 이해\r________네트워크 아키텍처와 프로토콜\r__NetworkInterface 클래스 사용\r____Mac 주소 획득\r________특별한 Mac 주소 획득\r________다중 MAC 주소 획득\r__네트워크 주소 개념\r____URL/URI/URN\r____URI 클래스 사용\r________URI 인스턴스 생성\r________URI 부분 분리\r____URL 클래스 사용\r________URL 인스턴스 생성\r________URL 부분 분리\r____IP 주소와 InetAddress 클래스\r________주소 정보 획득\r________주소 범위 문제\r________도달 가능성 테스트\r____Inet4Address 소개\r________IPv4의 사설 주소\r________IPv4 주소 타입\r________Inet4Address 클래스\r________특별한 IPv4 주소\r____Inet6Address 클래스 소개\r________IPv6의 사설 주소\r________Inet6Address 클래스\r________특별한 IPv6 주소\r____IP 주소 타입 테스트\r________IPv4 호환 IPv6 주소 사용\r__네트워크 속성 제어\r__요약\r  3장. 네트워크 NIO 지원\r__자바 NIO\r__버퍼 소개\r__채널을 사용한 타임 서버\r____타임 서버 생성\r____타임 클라이언트 생성\r__채팅 서버/클라이언트 애플리케이션\r____채팅 서버\r____채팅 클라이언트\r____서버/클라이언트 상호작용\r____HelperMethods 클래스\r________가변 길이 메시지 처리\r____채팅 서버/클라이언트 애플리케이션 실행\r__다중 클라이언트 처리\r____부품 서버\r____부품 클라이언트 핸들러\r____부품 클라이언트\r____부품 클라이언트/서버 실행\r__비동기 소켓 채널\r____비동기 서버 소켓 채널 서버 생성\r____비동기 소켓 채널 클라이언트 생성\r__기타 버퍼 작업\r____대량 데이터 전송\r____뷰 사용\r____읽기 전용 버퍼 사용\r__소켓 옵션 제어\r__요약\r  4장. 클라이언트/서버 개발\r__HTTP 프로토콜 구조\r__HTTP 메시지의 특성\r____요청 초기 라인 형식\r____헤더 라인\r____메시지 몸체\r____클라이언트/서버 상호작용 예제\r__HTTP 클라이언트/서버 애플리케이션에서 자바 소켓 지원\r____간단한 HTTP 서버 구축\r____간단한 HTTP 클라이언트 구축\r__표준 자바 클래스를 사용한 클라이언트/서버 개발\r____HttpURLConnection 클래스 사용\r________URL 인코딩\r____HTTPServer 클래스 사용\r________간단한 HttpServer 클래스 구현\r________응답 헤더 관리\r__오픈소스 자바 HTTP 서버\r__서버 구성\r__쿠키 처리\r__요약\r  5장. P2P 네트워크\r__P2P 기능/특성\r__애플리케이션 기반 P2P 네트워크\r__P2P 애플리케이션용 자바 지원\r__분산 해시 테이블\r____DHT 컴포넌트\r____DHT 구현\r____JDHT 사용\r__FreePastry 사용\r____FreePastry 예제\r________FreePastryExample 클래스의 이해\r________FreePastryApplication 클래스의 이해\r________특정 노드에게 메시지 전송\r__요약\r  6장. UDP와 멀티캐스팅\r__UDP에 대한 자바 지원\r__TCP와 UDP\r__UDP 클라이언트/서버\r____UDP 서버 애플리케이션\r____UDP 클라이언트 애플리케이션\r____작동하는 UDP 클라이언트/서버\r__UDP를 위한 채널 지원\r____UDP 에코 서버 애플리케이션\r____UDP 에코 클라이언트 애플리케이션\r____작동하는 UDP 에코 클라이언트/서버\r__UDP 멀티캐스팅\r____UDP 멀티캐스트 서버\r____UDP 멀티캐스트 클라이언트\r____작동하는 UDP 멀티캐스트 클라이언트/서버\r__채널에 의한 UDP 멀티캐스팅\r____UDP 채널 멀티캐스트 서버\r____UDP 채널 멀티캐스트 클라이언트\r____작동하는 UDP 채널 멀티캐스트 클라이언트/서버\r__UDP 스트리밍\r____UDP 오디오 서버 구현\r____UDP 오디오 클라이언트 구현\r__요약\r  7장. 네트워크 확장성\r__멀티스레드 서버 개요\r__thread-per-request 접근법\r____thread-per-request 서버\r____thread-per-request 클라이언트\r____작동하는 thread-per-request 애플리케이션\r__Thread-per-connection 접근법\r____thread-per-connection 서버\r____thread-per-connection 클라이언트\r____작동하는 thread-per-connection 애플리케이션\r__스레드 풀\r____ThreadPoolExecutor 클래스 특성\r____간단한 스레드 풀 서버\r____간단한 스레드 풀 클라이언트\r____작동하는 스레드 풀 클라이언트/서버\r____Callable와 스레드 풀\r________Callable 사용\r________Future 사용\r__HttpServer 실행기 사용\r__셀렉터 사용\r____셀렉터 생성\r____채널 등록\r____타임 클라이언트/서버를 지원하는 셀렉터 사용\r________채널 타임 서버\r________날짜와 시간 클라이언트 애플리케이션\r________작동하는 날짜와 시간 서버/클라이언트\r__네트워크 타임아웃 처리\r__요약\r  8장. 네트워크 보안\r__보안\r____보안 통신 용어\r__암호화 기본\r____대칭 암호화 기법\r________키 생성\r________대칭 키를 이용한 암호화 텍스트\r________복호화 텍스트\r____비대칭 암호화 기법\r________비대칭 키 생성과 저장\r________비대칭 키를 사용한 암호화/복호화 텍스트\r________비대칭 키 파일 저장\r__키스토어 생성\r____keytool을 사용한 키스토어 생성과 유지\r____Keytool 커맨드라인 인자\r____자바를 사용한 키스토어 생성과 유지\r__대칭 암호화 클라이언트/서버\r____대칭 서버 애플리케이션\r____대칭 클라이언트 애플리케이션\r____작동하는 대칭 클라이언트/서버\r__비대칭 암호화 클라이언트/서버\r____비대칭 서버 애플리케이션\r____비대칭 클라이언트 애플리케이션\r____작동하는 비대칭 클라이언트/서버\r__TLS/SSL\r____SSL 서버\r____SSL 클라이언트\r____작동하는 SSL 클라이언트/서버\r__보안 해시 함수\r__요약\r  9장. 네트워크 상호운용성\r__자바 바이트 순서\r__기타 언어와의 인터페이스\r____JVM 기반 언어와 인터페이스\r____비JVM 언어와 인터페이스\r__간단한 소켓을 이용한 통신\r____자바 서버\r____C# 클라이언트\r____작동하는 클라이언트/서버\r__미들웨어를 통한 상호운용성\r____RESTful 서비스 생성\r____RESTful 서비스 테스트\r____RESTful 클라이언트 생성\r__요약\n",
        "isbn10": "8960779563",
        "isbn13": "9788960779563"
    },
    {
        "title": "자바 성능 튜닝 (자바 성능 향상을 위한 완벽 가이드)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=10362169",
        "image": "https://bookthumb-phinf.pstatic.net/cover/103/621/10362169.jpg?type=m1&udate=20171009",
        "author": "스캇 오크스",
        "price": "34000",
        "discount": "30600",
        "publisher": "비제이퍼블릭",
        "pubdate": "20160329",
        "isbn": "118669713X 9791186697139",
        "description": "자바 전문가인 스캇 오크스가 JVM에서 코드가 동작하는 방법뿐만 아니라 튜닝을 통해 성능이 개선되는 방법도 함께, 자바로 작업하는 이라면 누구나 이해할 수 있게끔 설명하고 있는 책이다. 책은 여러 상황에 대한 경험과 직관을 갖도록 해주는 것보다는 시간이 흐르면서 훌륭한 자바 성능 엔지니어에게 필요한... ",
        "authorIntroContent": "\n스캇 오크스\n저자 : 스캇 오크스저자 스캇 오크스는 오라클(ORACLE CORPORATION)의 아키텍터이며 오라클의 미들웨어 소프트웨어의 성능을 맡고 있다. 오라클에서 일하기 전에는 선 마이크로시스템스(SUN MICROSYSTEMS)에서 몇 년간 SUNOS 커널의 네트워크 프로그래밍과 RPC, 윈도우 시스템과 OPEN LOOK 가상 윈도우 관리자 등 기술 전문가로 일했다. 1996년에는 선에서 자바 에반젤리스트(JAVA EVANGELIST)가 되었고, 2001년에 그의 주요 관심사가 된 자바 성능 그룹에 들어갔다. 저서로는 『JAVA SECURITY』, 『JAVA THREADS』, 『JXTA IN A NUTSHELL』, 『JINI IN A NUTSHELL』이 있다.역자 : 최가인역자 최가인은 다양한 글로벌 프로젝트와 SI 프로젝트를 거쳐 지금은 네이버에 둥지를 틀고 소소하게 개발과 번역을 하며 지내고 있다. 개발도 재미있지만 프로젝트뿐만 아니라 대부분의 업무가 이해 관계자들과의 협업을 통해 이뤄지므로 즐겁고 효과적일 수 있도록 도와주는 요소들에 관심이 많다. 주로 프로젝트 산출물 및 제안서를 번역하면서 번역 삼매경에 빠졌다. 역서로는 『플랫폼 비즈니스의 최전선』, 『시스템 설계의 수수께끼를 풀다』, 『애자일 UX 디자인』이 있다.\n",
        "bookIntroContent": "자바 전문가인 스캇 오크스가 JVM에서 코드가 동작하는 방법뿐만 아니라 튜닝을 통해 성능이 개선되는 방법도 함께, 자바로 작업하는 이라면 누구나 이해할 수 있게끔 설명하고 있는 책이다. 책은 여러 상황에 대한 경험과 직관을 갖도록 해주는 것보다는 시간이 흐르면서 훌륭한 자바 성능 엔지니어에게 필요한 기술을 개발하는 데 도움될 지식을 주는 것을 목표로 한다. 책은 크게 두 개의 카테고리로 나눠 자바 가상 머신(JVM) 자체의 성능과 자바 플랫폼의 특성이 성능에 어떻게 영향을 미치는지 이해하는 것으로 이루어져 있다.",
        "tableOfContentsContent": "\n1장. 서문\r- 개요\r- 플랫폼과 규약\r- 완벽한 성능 이야기\r- 요약\r 2장. 성능 테스트 접근법\r- 실제 애플리케이션을 테스트하자\r- 처리율 및 배치와 응답 시간 이해하기\r- 변동성 이해하기\r- 빠르게 자주 테스트하자\r- 요약\r 3장. 자바 성능 도구 상자\r- 운영체제 도구와 분석\r- 자바 모니터링 도구\r- 프로파일링 도구\r- 자바 미션 컨트롤\r- 요약\r 4장. JIT 컴파일러로 작업하기\r- 저스트 인 타임 컴파일러: 개요\r- 기본 튜닝: 서버나 클라이언트(또는 둘 다)\r- 자바와 JIT 컴파일러 버전\r- 컴파일러를 위한 중급 튜닝\r- 고급 컴파일러 튜닝\r- 역최적화\r- 티어드 컴파일 레벨\r- 요약\r 5장. 가비지 컬렉션 입문\r- 가비지 컬렉션 개요\r- 기본 GC 튜닝\r- GC 도구\r- 요약\r 6장. 가비지 컬렉션 알고리즘\r- 처리율 컬렉터 이해하기\r- CMS 컬렉터 이해하기\r- G1 컬렉터 이해하기\r- 고급 튜닝\r- 요약\r 7장. 힙 메모리 베스트 프랙티스\r- 힙 분석\r- 메모리 적게 사용하기\r- 객체 생명 주기 관리\r- 요약\r 8장. 네이티브 메모리 베스트 프랙티스\r- 차지 공간\r- 운영체제를 위한 JVM 튜닝 \r- 요약\r 9장. 스레딩과 동기화 성능\r- 스레드 풀과 ThreadPoolExecutors\r- ForkJoinPool\r- 스레드 동기화\r- JVM 스레드 튜닝\r- 스레드와 락 모니터링하기\r- 요약\r 10장. 자바 엔터프라이즈 에디션 성능\r- 기본 웹 컨테이너 성능\r- 스레드 풀\r- 엔터프라이즈 자바 세션 빈\r- XML과 SJON 처리\r- 객체 직렬화\r- 자바 EE 네트워킹 API\r- 요약\r 11장. 데이터베이스 성능 베스트 프랙티스\r- JDBC\r- JPA\r- 요약\r 12장. 자바 SE API 팁\r- 버퍼에 의한 입출력\r- 클래스로딩\r- 난수\r- 자바 네이티브 인터페이스\r- 예외 처리\r- 문자열 성능\r- 로깅\r- 자바 컬렉션 API\r- AggressiveOpts\r- 람다와 익명 클래스\r- 스트림과 필터 성능\r- 요약\r 부록 A. 튜닝 플래그 요약\n",
        "isbn10": "118669713X",
        "isbn13": "9791186697139"
    },
    {
        "title": "처음 만나는 자바스크립트",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=11662983",
        "image": "https://bookthumb-phinf.pstatic.net/cover/116/629/11662983.jpg?type=m1&udate=20190216",
        "author": "가노 스케하루",
        "price": "24000",
        "discount": "21600",
        "publisher": "제이펍",
        "pubdate": "20170224",
        "isbn": "1185890777 9791185890777",
        "description": "『처음 만나는 자바스크립트』는 자바스크립트의 기본을 탄탄한 이론과 상세한 해설, 실용적 예제로 재미있게 구성되어 있다. 또한, 자바스크립트의 기본 기능 소개는 물론 프로그래밍할 때 필요한 사고방식에도 중점을 두고 설명하고 있으며, 설명하는 기능들이 어디서 어떻게 사용되는지도 쉽게 알 수... ",
        "authorIntroContent": "\n가노 스케하루\n저자 : 가노 스케하루저자 가노 스케하루(狩野祐東)는 웹/애플리케이션 UI 디자이너, 엔지니어, 기술 서적 저술가.와세다 대학교 졸업 후 미국 샌프란시스코로 건너가 UI 디자인 이론을 배웠다. 귀국 후 직장 생활을 하다 지금은 프리랜서로 활동 중이다. 웹사이트 및 애플리케이션의 인터페이스 디자인, 인터랙티브 콘텐츠 개발 등을 하고 있으며, 각종 세미나와 강좌에서 강사로 활동 중이다. 주요 저서로는 《쉽게 이해하는 HTML&CSS의 기본》, 《쉽게 이해하는 CSS 디자인의 기본》, 《만들면서 배우는 JQUERY 디자인 교과서》 등이 있다.역자 : 김완섭역자 김완섭은 네덜란드 ITC에서 GEOINFORMATION FOR DISASTER RISK MANAGEMENT 석사 학위를 취득했다. 약 9년간 일본 및 한국 대기업에서 IT 및 GIS/LBS 분야 업무를 담당했으며, 일본에서는 세콤(SECOM) 계열사인 파스코(PASCO)에서 일본 외무성, 국토지리정보원과 같은 일본 정부 기관을 대상으로 한 시스템 통합(SI) 업무를 담당했다. 이후 야후 재팬으로 직장을 옮겨 야후 맵 개발 담당 시니어 엔지니어로 근무했으며, 한국으로 돌아와 SK에서 내비게이션(T맵 등) 지도 데이터 담당 매니저로 근무했다. 현재는 싱가포르의 한 국제 연구 기관에서 TECHNICAL SPECIALIST로 근무 중이다. 저서로는 《나는 도쿄 롯폰기로 출근한다》가 있으며, 역서로는 《그림으로 공부하는 IT 인프라 구조》, 《C# 코딩의 기술 기본편》, 《코딩을 지탱하는 기술》, 《그레이들 철저 입문》, 《클린 코드를 위한 테스트 주도 개발》 등 20여 권이 있다. 블로그를 통해 IT 번역 관련 얘기와 싱가포르 직장 생활을 소개하고 있다.\n",
        "bookIntroContent": "『처음 만나는 자바스크립트』는 자바스크립트의 기본을 탄탄한 이론과 상세한 해설, 실용적 예제로 재미있게 구성되어 있다. 또한, 자바스크립트의 기본 기능 소개는 물론 프로그래밍할 때 필요한 사고방식에도 중점을 두고 설명하고 있으며, 설명하는 기능들이 어디서 어떻게 사용되는지도 쉽게 알 수 있도록 실제 사용 환경과 유사한 예제를 다루고 있다. 인스타그램 형태의 앨범, 슬라이드쇼 페이지와 같은 예제 코드를 따라 하며 익혀 보는 것만으로도 자바스크립트, JQUERY, AJAX의 기본을 습득하도록 하였으며, 책에서 배운 기본 지식이 이후 실제 업무에도 활용될 수 있도록 한 것이 이 책의 특징이다.",
        "tableOfContentsContent": "\n1장 자바스크립트 소개\r1-1 자바스크립트를 배우려는 여러분에게 _ 2\r1-2 자바스크립트의 정체는? _ 6\r1-3 자바스크립트 ‘프로그래밍’과 동작 구조 _ 15\r1-4 각 장의 개요 _ 19\r1-5 도구 준비하기 _ 23\r1-6 예제 데이터 다운로드 _ 26\r1-7 템플릿을 준비한 후 출발! _ 28\r 2장 출력의 기본\r2-1 콘솔에 출력하기 _ 36\r개발 도구를 사용해 보자!\rstep 1 개발 도구 열기, 닫기 _ 36\rstep 2 콘솔을 사용해 보자! _ 40\rstep 3 콘솔 응용하기 _ 43\r2-2 자바스크립트는 어디에 작성하는가? _ 49\r〈script〉 태그와 자바스크립트 작성 위치\rstep 1 HTML에 자바스크립트를 직접 기술한다 _ 49\rstep 2 자바스크립트 파일 읽기 _ 52\r2-3 다이얼로그 박스 표시 _ 56\rwindow.alert()\rstep 1 경고 다이얼로그 박스 표시하기 _ 56\r2-4 HTML 변경하기 _ 59\r요소 취득 및 콘텐츠 변경\rstep 1 요소 가져오기 _ 59\rstep 2 가져온 요소의 콘텐츠 변경하기 _ 62\r 3장 자바스크립트 문법과 기본 기능\r3-1 확인 다이얼로그 박스 표시하기 _ 68\r조건 분기(if)\rstep 1 확인 다이얼로그 박스를 사용해 보자 _ 68\rstep 2 클릭한 버튼에 따라 메시지 변경 _ 71\r3-2 입력 내용에 따라 동작 변경하기 _ 75\r변수\rstep 1 클릭한 버튼의 결과를 변수에 저장한다 _ 75\rstep 2 변수에 저장된 내용으로 동작을 바꾼다 _ 84\r3-3 동작의 범위를 넓히자 _ 87\r조건 분기(else if)\rstep 1 no인지 판단하기 _ 87\r3-4 숫자 맞히기 게임 _ 90\r비교 연산자, 데이터형\rstep 1 다양한 비교 연산자 사용하기 _ 90\r3-5 시간에 따라 다른 메시지 표시하기 _ 97\r논리 연산자\rstep 1 두 가지 이상의 조건식을 이용해서 하나의 조건 만들기 _ 97\r3-6 1장, 2장, 3장…이라고 출력 _ 102\r개발 도구를 사용해 보자!\rstep 1 반복을 사용해 보자 _ 102\rstep 2 문자열 연결하기 _ 106\r3-7 콘솔로 몬스터를 물리치자 _ 110\r반복(while)\rstep 1 while을 사용해 보자 _ 110\rstep 2 반복 횟수 카운트하기 _ 114\r3-8 세금 포함 가격 계산하기 _ 118\r함수\rstep 1 함수 만들기 및 호출하기 _ 118\rstep 2 HTML에 출력하기 _ 124\r3-9 FizzBuzz _ 128\r사칙연산자\rstep 1 처리 흐름을 생각해서 함수 만들기 _ 128\rstep 2 30까지의 숫자로 피즈버즈 _ 131\r3-10 항목을 리스트로 표시하기 _ 133\r배열\rstep 1 배열 작성하기 _ 133\rstep 2 배열의 모든 항목 읽어 오기 _ 137\rstep 3 항목 추가하기 _ 139\rstep 4 항목을 HTML에 출력하기 _ 140\r3-11 아이템 가격과 재고 표시하기 _ 144\r객체\rstep 1 책 데이터 등록하기 _ 144\rstep 2 모든 프로퍼티 읽어 오기 _ 151\rstep 3 HTML에 출력하기\r 4장 입력과 데이터 가공\r4-1 폼의 입력 내용 가져오기 _ 160\r입력 내용 가져오기 및 이벤트\rstep 1 우선은 이벤트 테스트 _ 160\rstep 2 입력 내용을 읽어서 출력하기 _ 164\r4-2 알기 쉽게 날짜/시간 표시하기 _ 170\rDate 객체\rstep 1 연/월/일과 시간 표시하기 _ 170\rstep 2 12시간 표기법으로 변경 _ 177\r4-3 ‘0’을 붙여서 자릿수 맞추기 _ 180\r숫자를 문자열로 변환\rstep 1 함수 작성하기 _ 180\rstep 2 곡목 리스트에 번호 붙이기 _ 185\r4-4 소수점 자릿수 버리기 _ 189\rMath 객체\rstep 1 사칙연산 이외의 계산\r 5장 실전 기술\r5-1 카운트다운 타이머 _ 198\r시간 계산과 타이머\rstep 1 남은 시간을 계산하는 함수 _ 198\rstep 2 1초 간격으로 재계산하기 _ 205\rstep 3 응용편: 표시 방법을 바꾸어 보자 _ 210\r5-2 풀다운 메뉴로 페이지 이동하기 _ 213\rURL 조작 및 불(bool) 속성 설정\rstep 1 선택한 시점에 페이지 이동하기 _ 213\rstep 2 처음 선택 항목 설정하기 _ 217\r5-3 설문지 응답은 한 번만! _ 226\r쿠키\rstep 1 쿠키 읽기, 쓰기, 삭제 _ 226\r5-4 사진 변경하기 _ 234\r5-5 슬라이드쇼 _ 242\r섬네일 클릭으로 사진 변경\rstep 1 새로운 HTML 속성 사용하기 _ 234\rstep 2 사진 변경하기 _ 240\r 6장 제이쿼리 입문\r6-1 열렸다 닫혔다 하는 내비게이션 메뉴 _ 254\r요소 가져오기와 class 속성 추가 및 삭제\rstep 1 제이쿼리의 기본 _ 254\r6-2 박스 열고 닫기 _ 266\r애니메이션 효과\rstep 1 애니메이션 기능 사용 _ 266\r6-3 공석 상황 확인 _ 272\rAjax와 JSON\rstep 1 Ajax와 데이터 활용\r 7장 외부 데이터를 활용하는 애플리케이션 만들기\r7-1 최신 기사를 목록으로 표시하기 _ 286\rRSS 피드 불러오기와 해석\rstep 1 RSS 피드 불러오기 _ 286\rstep 2 기사 제목 표시하기 _ 293\rstep 3 업데이트 날짜 표시하기 _ 298\r7-2 웹 API를 사용해 보자 _ 301\r인스타그램 API를 이용한 포토갤러리\rstep 1 사전 준비 _ 302\rstep 2 데이터 다운로드하기 _ 308\rstep 3 사진 표시하기 _ 313\rstep 4 페이지 매김 구현하기 _ 323\n",
        "isbn10": "1185890777",
        "isbn13": "9791185890777"
    },
    {
        "title": "자바 마스터 북 (기초부터 실무 응용까지)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13366498",
        "image": "https://bookthumb-phinf.pstatic.net/cover/133/664/13366498.jpg?type=m1&udate=20180322",
        "author": "타니모토 신|사카모토 유이치로|오카다 타쿠야|아키바 마코토|무라타 켄이치로",
        "price": "28000",
        "discount": "25200",
        "publisher": "제이펍",
        "pubdate": "20180307",
        "isbn": "1188621181 9791188621187",
        "description": "기초 문법은 물론, 완벽한 현장 대응을 위한 맞춤 안내서!이 책은 시스템 개발의 핵심 분야에서 자바를 사용해 온 ACROQUEST TECHNOLOGY의 개발자들이 20여 년의 개발 경험과 문제 해결 노하우를 토대로 집필한 책이다. 자바의 기초부터 실전까지 체계적으로 설명하고 있으며, 특히 자바 프로그래밍에서의... ",
        "authorIntroContent": "\n타니모토 신\n저자 : 타니모토 신문제 해결 및 플랫폼 개발에 종사하고 있다. 자바 커뮤니티 활동에 적극적이어서 간사이 자바 엔지니어 모임을 주최하고, 일본 자바 사용자 그룹(JJUG)의 총무를 겸하고 있다. 샌프란시스코에서 개최된 JAVAONE 2013, 2015에서 문제 해결에 관해 강연도 하였다. 좋아하는 자바 API는 JAVAX.MANAGEMENT이다.저자 : 사카모토 유이치로BCI를 이용하여 자바 코어 부분을 다루며 스프링부트를 이용한 웹 시스템 개발, 하둡/스파크를 이용한 실시간 추천 시스템 개발에 이르기까지 다양한 개발 경험을 갖고 있다. 최근에는 IOT 기반의 플랫폼 개발 프로젝트 리더를 맡고 있다. 좋아하는 자바 API는 JAVA.NIO이다.저자 : 오카다 타쿠야개발 관리 및 OSS 제품의 조사/검증을 수행하였다. 엔지니어로 일하면서 10년 동안 모교인 도쿄공업대학에서 무료 자바 세미나를 개최하는 등 IT 엔지니어의 저변 확대를 위해 활동하고 있다. 2014년부터 미얀마 지사의 ACROQUEST MYANMAR TECHNOLOGY를 운영하면서 기술 지도에 힘쓰고 있다. 특히, 현지 엔지니어가 최신 기술을 공부할 수 있도록 커뮤니티 활성화를 위해 고군분투하는 중이다. 좋아하는 자바 API는 JAVA.TIME이다.저자 : 아키바 마코토자바를 사용한 미션크리티컬 집중 감시 시스템의 프레임워크 개발부터 데이터베이스, 네트워크 등을 다루면서 인프라 방면에 관심을 갖게 되었다. 현재는 환경 구축부터 운용, DEVOPS에 이르는 ‘개발 능력이 있는 인프라 엔지니어’를 꿈꾸며 활동하고 있다. 좋아하는 자바 API는 JAVAX.SQL이다.저자 : 무라타 켄이치로자바를 사용한 미션크리티컬 집중 감시 시스템의 프레임워크 개발부터 시스템 개발에 오랫동안 종사하였다. 주된 관심은 비동기 처리 메시징 분야다. 최근에는 자연어 처리를 활용한 프로젝트를 관리하고 있으며, 자연어 처리를 실제로 활용하는 데 빠져 있다. 좋아하는 자바 API는 JAVA.UTIL.CONCURRENT이다.역자 : 정인식숭실대학교에서 전자계산학을 전공하였다. 사회 초년생 시절 자바에 심취해 현대정보기술에서 웹 애플리케이션을 개발하였고, 그 후 이동통신 단말기 분야로 전직하여 휴대전화 단말기의 부가서비스 개발 업무를 담당하였다. 일본 키스코 모바일사업부 팀장이었으며, 일본 교세라의 북미향 휴대전화기 개발에 참여하였다. 지금은 일본의 주요 이동통신사에서 업무 프로세스 개선을 위한 IT 컨설팅 및 데이터 분석 관련 툴을 개발하고 있다. 옮긴 책으로는 《자바스크립트 마스터 북(제2판)》, 《처음 만나는 알고리즘》을 비롯해 10여 종이 있다.\n",
        "bookIntroContent": "기초 문법은 물론, 완벽한 현장 대응을 위한 맞춤 안내서!이 책은 시스템 개발의 핵심 분야에서 자바를 사용해 온 ACROQUEST TECHNOLOGY의 개발자들이 20여 년의 개발 경험과 문제 해결 노하우를 토대로 집필한 책이다. 자바의 기초부터 실전까지 체계적으로 설명하고 있으며, 특히 자바 프로그래밍에서의 유지보수, 견고성, 성능, 개발 효율 등을 고려해 한층 더 실전에 활용할 수 있는 내용으로 구성하였다.",
        "tableOfContentsContent": "\nCHAPTER 1 자바의 기본 이해하기 1\r1.1 자바란? 2\r1.1.1 자바의 특징 2\r1.1.2 자바의 세 가지 에디션과 두 가지 환경 3\r1.1.3 Java VM의 종류 4\r1.1.4 자바가 실행되는 순서 4\r1.2 ‘ Hello Java World!’를 표시해 보자 6\r1.2.1 자바 설치하기 6\r1.2.2 이클립스 설치하기 9\r1.2.3 ‘Hello Java World!’ 프로그램을 만들어 보자 13\r1.2.4 프로그램 실행하기 16\r CHAPTER 2 기본적인 작성법 익히기 17\r2.1 자바의 기본적인 표기법 18\r2.1.1 문장과 블록 18\r2.1.2 주석 19\r2.1.3 변수, 타입, 리터럴 19\r2.1.4 연산자 20\r2.1.5 제어 구문 26\r2.2 클래스와 메서드 34\r2.2.1 클래스 선언하기 34\r2.2.2 메서드 선언하기 34\r2.2.3 수식자 36\r2.2.4 메서드 오버로딩 38\r2.2.5 main 메서드 39\r2.2.6 인스턴스 39\r2.2.7 this를 사용할 때의 주의점 41\r2.2.8 생성자 42\r2.3 정보 공유를 위해 알아둘 기능 45\r2.3.1 Javadoc 45\r2.3.2 애노테이션 46\r2.4 명명 규칙 48\r2.4.1 클래스와 변수는 카멜 케이스로, 상수는 스네이크 케이스로 한다 48\r2.4.2 변수명 뒤에는 ‘_’를 붙이지 않는다 49\r2.4.3 변수는 명사, 메서드는 동사로 명명한다 49\r2.4.4 ‘불길한 냄새’가 나는 이름에 주의하자 50\r CHAPTER 3 타입 공략하기 51\r3.1 기본형과 참조형 52\r3.1.1 자바는 정적 타입 언어 52\r3.1.2 기본형 53\r3.1.3 참조형 57\r3.1.4 래퍼 클래스 58\r3.1.5 오토박싱과 언박싱 62\r3.2 클래스 작성하기 64\r3.2.1 클래스 정의하기 64\r3.2.2 패키지 65\r3.2.3 접근 제한자 66\r3.2.4 그 외의 자주 이용하는 수식자 68\r3.2.5 계승 71\r3.2.6 추상 클래스 72\r3.2.7 인터페이스 74\r3.2.8 익명 클래스 75\r3.3 타입 판정과 객체의 등가성 77\r3.3.1 instanceof 연산자 77\r3.3.2 객체의 등가성 78\r3.4 타입에 관련된 문제 예방하기 88\r3.4.1 열거형(enum) 88\r3.4.2 제네릭스(Generics) 91\r CHAPTER 4 배열과 컬렉션 공략하기 97\r4.1 배열로 여러 데이터 처리하기 98\r4.1.1 배열이란? 98\r4.1.2 배열 초기화하기 100\r4.1.3 배열의 대입과 취득 102\r4.1.4 배열의 사이즈 변경하기 104\r4.1.5 Arrays 클래스를 이용하여 배열 조작하기 105\r4.1.6 가변 길이 인수로 메서드 정의하기 111\r4.2 컬렉션 프레임워크로 여러 데이터 처리하기 113\r4.2.1 배열의 한계와 컬렉션의 특징 113\r4.2.2 대표적인 컬렉션과 구분 기준 113\r4.3 배열과 비슷한 방법으로 여러 요소 처리하기 ? List 인터페이스 115\r4.3.1 List 인터페이스의 기본 115\r4.3.2 List 작성하기 117\r4.3.3 List의 대표적인 메서드 118\r4.3.4 List 정렬하기 120\r4.3.5 List 검색하기 121\r4.3.6 List의 반복자 122\r4.3.7 List의 세 가지 구현 클래스 이해하기 124\r4.3.8 List의 구현 클래스를 어떻게 분류해서 사용할까? 127\r4.4 키와 값의 조합으로 값 처리하기 ? Map 인터페이스 128\r4.4.1 Map 작성하기 129\r4.4.2 Map 사용법 130\r4.4.3 Map의 세 가지 구현 클래스 이해하기 132\r4.4.4 Map의 구현 클래스를 어떻게 분류해서 사용할까? 134\r4.5 값의 집합 처리하기 ? Set 인터페이스 135\r4.5.1 Set 초기화 136\r4.5.2 Set 사용법 137\r4.5.3 Set의 세 가지 구현 클래스 이해하기 139\r4.6 그 외의 인터페이스 142\r4.6.1 값 을 추가한 순서와 동일한 순서로 값 취득하기 ― Queue 인터페이스 142\r4.6.2 양방향 Queue 사용하기 ― Deque 인터페이스 143\r CHAPTER 5 스트림 처리 제대로 사용하기 ? 람다식과 Stream API 145\r5.1 Stream API를 사용하기 위한 기본 146\r5.1.1 Stream API로 컬렉션의 조작은 어떻게 변하는가? 146\r5.1.2 람다식 작성법 마스터하기 148\r5.1.3 메서드 참조 152\r5.2 Stream 작성하기 154\r5.2.1 List나 Set으로부터 Stream 작성하기 154\r5.2.2 배열로부터 Stream 작성하기 155\r5.2.3 Map으로부터 Stream 작성하기 155\r5.2.4 숫자 범위로부터 Stream 작성하기 156\r5.3 Stream에 대한 ‘중간 작업’ 158\r5.3.1 요소를 치환하는 중간 작업 158\r5.3.2 요소를 걸러내는 중간 작업 162\r5.3.4 요소를 정렬하는 중간 작업 163\r5.4 Stream에 대한 ‘종료 작업’ 165\r5.4.1 반복 처리를 실시하는 종료 작업 165\r5.4.2 결과를 정리해서 추출하는 종료 작업 165\r5.4.3 결과를 하나만 추출하는 종료 작업 167\r5.4.4 집계 처리를 실시하는 종료 작업 168\r5.5 Stream API를 사용하기 위한 포인트 169\r5.5.1 왕도는 map, filter, collect 169\r5.5.2 n번 반복하는 IntStream 169\r5.5.3 List나 Map에 대한 효율적인 처리 실시하기 171\r5.6 Stream API를 사용하여 List 초기화하기 174\r5.6.1 Stream을 이용해 열거한 값으로 List 작성하기 174\r5.6.2 Stream을 이용해 값의 범위로부터 List 작성하기 174\r5.6.3 Stream을 이용해 배열 작성하기 175\r CHAPTER 6 예외 공략하기 177\r6.1 예외의 기본 178\r6.1.1 예외의 세 가지 종류 178\r6.1.2 예외를 나타내는 세 가지 클래스 179\r6.1.3 예외 처리의 세 가지 구문 제대로 사용하기 181\r6.2 예외 처리에서 혼란에 빠지지 않기 위한 포인트 187\r6.2.1 오류 코드를 return하지 않기 187\r6.2.2 예외를 제거하지 않기 188\r6.2.3 공포의 throws Exception 감염 192\r6.2.4 어느 계층에서 예외를 포착해서 처리해야 하는가? 195\r6.2.5 독자적인 예외 작성하기 195\r6.2.6 예외의 트렌드 198\r CHAPTER 7 문자열 조작 공략하기 203\r7.1 문자열 조작의 기본 204\r7.1.1 String 클래스의 특징 204\r7.1.2 문자열을 결합하는 세 가지 방법 205\r7.1.3 문자열 분할하기 208\r7.1.4 여러 문자열 결합하기 210\r7.1.5 문자열 치환하기 211\r7.1.6 문자열 검색하기 211\r7.2 정규 표현으로 문자열 유연하게 지정하기 213\r7.2.1 문자열이 정규 표현 패턴에 적합한지 체크하기 213\r7.2.2 정규 표현을 사용하여 문자열 분할하기 214\r7.2.3 정규 표현을 사용하여 문자열 치환하기 215\r7.2.4 String 클래스의 메서드로 정규 표현 사용하기 216\r7.3 문자열의 포맷과 출력 218\r7.3.1 문자열 출력하기 218\r7.3.2 MessageFormat에 대해서 219\r7.4 문자 코드 변환하기 221\r7.4.1 자바는 어떻게 문자 코드를 이용하는가? 221\r7.4.2 자바 문자에서 임의의 문자 코드로 변환하기 222\r7.4.3 임의의 문자 코드로부터 자바 문자로 변환하기 223\r7.4.4 문자 깨짐의 원인과 대책 223\r7.4.5 String 클래스의 intern 메서드로 같은 문자열 찾기 225\r CHAPTER 8 파일 조작 공략하기 227\r8.1 파일 조작의 기본 228\r8.1.1 File 클래스로 초기화하기 228\r8.1.2 Path 클래스로 초기화하기 230\r8.2 파일 읽고 쓰기 234\r8.2.1 바이너리 파일 읽어들이기 234\r8.2.2 바이너리 파일 기록하기 237\r8.2.3 텍스트 파일 읽어들이기 239\r8.2.4 텍스트 파일 기록하기 241\r8.2.5 Stream API를 사용해서 파일 읽어들이기 242\r8.3 파일 조작하기 244\r8.3.1 파일 복사하기 244\r8.3.2 파일 삭제하기 246\r8.3.3 파일 작성하기 247\r8.3.4 디렉터리 작성하기 248\r8.3.5 임시 파일 작성하기 250\r8.4 다양한 파일 취급하기 253\r8.4.1 속성 파일 253\r8.4.2 CSV 파일 257\r8.4.3 XML 파일 257\r8.4.4 JSON 파일 272\r CHAPTER 9 날짜 처리 공략하기 275\r9.1 Date와 Calendar 구분하여 사용하기 276\r9.1.1 Date 클래스 이용하기 276\r9.1.2 Calendar 클래스 이용하기 277\r9.1.3 Date 클래스와 Calendar 클래스의 상호 교환 실시하기 281\r9.2 Date and Time API 사용하기 283\r9.2.1 Date and Time API의 장점 283\r9.2.2 날짜, 시간, 일시를 각각 별도의 클래스로 취급한다 284\r9.2.3 연, 월, 일 등을 지정하여 인스턴스를 생성할 수 있다 285\r9.2.4 연, 월, 일의 각 필드값을 개별로 취득할 수 있다 288\r9.2.5 연, 월, 일을 계산할 수 있다 289\r9.3 날짜 클래스와 문자열 상호 교환하기 292\r9.3.1 날짜 클래스를 임의의 형식으로 문자열 출력하기 292\r9.3.2 문자열로 표현된 날짜를 Date 클래스로 변환하기 293\r9.3.3 SimpleDateFormat 클래스는 스레드 세이프가 아니다 294\r9.4 Date and Time API로 날짜/시간 클래스와 문자열 상호 교환하기 295\r9.4.1 날짜/시간 클래스를 임의의 형식으로 문자열 출력하기 295\r9.4.2 문자열로 표현된 날짜를 날짜/시간 클래스로 변환하기 296\r9.4.3 DateTimeFormatter 클래스는 스레드 세이프다 296\r CHAPTER 10 객체지향 즐기기 299\r10.1 기본형과 참조형의 값 전달하기 300\r10.1.1 기본형과 참조형의 값 전달 방법 300\r10.1.2 조작해도 값이 변하지 않는 불변 객체 클래스 302\r10.1.3 조작하면 값이 변경되는 변경 가능 클래스 304\r10.1.4 변경 가능한 클래스의 장점과 단점 305\r10.2 가시성을 적절히 설정하여 버그가 적은 프로그램 만들기 307\r10.2.1 자바가 사용할 수 있는 가시성 307\r10.2.2 가시성의 좋은 사례 308\r10.3 객체의 라이프 사이클 파악하기 311\r10.3.1 세 종류의 라이프 사이클 311\r10.3.2 라이프 사이클의 좋은 사례 312\r10.4 인터페이스와 추상 클래스를 활용하여 설계하기 316\r10.4.1 다형성을 실현하기 위한 메커니즘 316\r10.4.2 인터페이스와 추상 클래스 317\r10.4.3 인터페이스의 디폴트 구현 322\r10.4.4 인터페이스의 static 메서드 323\r CHAPTER 11 스레드 세이프 즐기기 329\r11.1 멀티 스레드의 기본 330\r11.1.1 멀티 스레드란? 330\r11.1.2 멀티 스레드의 장점 331\r11.1.3 멀티 스레드의 단점 334\r11.1.4 동시에 작업하는 경우에 일어나는 문제 335\r11.1.5 멀티 스레드 문제에 대응하기 어려운 이유 339\r11.2 스레드 세이프 구현하기 340\r11.2.1 스레드 세이프란? 340\r11.2.2 상태를 유지하지 않게(Stateless) 한다 349\r11.2.3 ‘메서드 단위’가 아니라 최소한의 ‘일련의 처리’에 대해 동기화한다 352\r CHAPTER 12 디자인 패턴 즐기기 357\r12.1 디자인 패턴의 기본 358\r12.1.1 디자인 패턴이란? 358\r12.1.2 디자인 패턴을 사용하면 좋은 점 359\r12.2 생성에 관한 패턴 360\r12.2.1 AbstractFactory 패턴 ― 일련의 인스턴스군을 모아서 생성하기 360\r12.2.2 Builder 패턴 ― 복합화된 인스턴스의 생성 과정을 은폐한다 364\r12.2.3 Singleton 패턴 ― 특정 클래스에 대해 인스턴스가 하나임을 보장한다 367\r12.3 구조에 관한 패턴 369\r12.3.1 Adapter 패턴 ― 인터페이스에 호환성이 없는 클래스들을 조합시키기 369\r12.3.2 Composite 패턴 ― 재귀적 구조 쉽게 처리하기 373\r12.4 행동에 관한 패턴 377\r12.4.1 Command 패턴 ― ‘명령’을 인스턴스로 취급하여 처리 조합을 쉽게 한다 377\r12.4.2 Strategy 패턴 ― 전략을 간단히 전환할 수 있는 구조를 제공한다 380\r12.4.3 Iterator 패턴 ― 보유한 인스턴스의 각 요소에 순차적으로 액세스하는 방법을 제공한다 383\r12.4.4 Observer 패턴 ― 어떤 인스턴스의 상태가 변화할 때 그 인스턴스 자신이 상태의 변화를 통지하는 구조를 제공한다 385\r CHAPTER 13 주변 도구로 품질 높이기 389\r13.1 Maven으로 빌드하기 390\r13.1.1 빌드란? 390\r13.1.2 Maven의 기본적인 이용 방법 391\r13.1.3 Maven에 플러그인 도입하기 396\r13.2 Javadoc으로 문서화 주석 작성하기 398\r13.2.1 왜 Javadoc 주석을 작성하는가? 398\r13.2.2 Javadoc의 기본적인 작성 방법 399\r13.2.3 알아두면 편리한 작성 방법 401\r13.2.4 API 문서 작성하기 405\r13.3 Checkstyle로 포맷 체크하기 406\r13.3.1 Checkstyle이란? 406\r13.3.2 이클립스에 의한 포맷 체크 407\r13.3.3 Maven에 의한 포맷 체크 409\r13.4 FindBugs로 버그 체크하기 410\r13.4.1 이클립스에 의한 버그 체크 410\r13.4.2 Maven에 의한 버그 체크 412\r13.5 JUnit으로 테스트하기 413\r13.5.1 왜 테스트용 프로그램을 만들어서 테스트할까? 413\r13.5.2 테스트 코드 구현하기 414\r13.5.3 테스트 실행하기 416\r13.6 Jenkins로 품질 보고서 작성하기 418\r13.6.1 지속적인 통합과 Jenkins 418\r13.6.2 Jenkins 환경 준비하기 418\r13.6.3 Jenkins에서 빌드 실행하기 422\r13.6.4 Jenkins에서 보고서 생성하기 424\r CHAPTER 14 라이브러리로 효율 높이기 429\r14.1 재사용 가능한 컴포넌트를 모은 Apache Commons 430\r14.1.1 Commons Lang 430\r14.1.2 Commons BeanUtils 433\r14.1.3 단순 복사와 딥 복사 434\r14.2 CSV로 여러 데이터 보관하기 437\r14.2.1 CSV란? 437\r14.2.2 Super CSV로 CSV 변환을 효율적으로 실시하기 437\r14.2.3 CSV 데이터 읽어들이기 438\r14.2.4 CSV 데이터 쓰기 439\r14.3 JSON으로 구조적인 데이터를 간단하게 하기 441\r14.3.1 JSON이란? 441\r14.3.2 Jackson으로 JSON 취급하기 441\r14.3.3 JSON 데이터 분석하기 442\r14.3.4 JSON 데이터 생성하기 443\r14.4 Logger로 애플리케이션 로그 보관하기 445\r14.4.1 로그와 레벨 445\r14.4.2 SLF4J+Logback으로 로깅 실시하기 446\r14.4.3 SLF4J+Logback의 기본적인 사용법 447\r14.4.4 파일에 출력하기 449\r14.4.5 변수 출력하기 450\r14.4.6 패키지별로 출력 로그 레벨 변경하기 451\r14.4.7 동적으로 설정 변경하기 451\r 감사의 글 453\r찾아보기 455\r  \n",
        "isbn10": "1188621181",
        "isbn13": "9791188621187"
    },
    {
        "title": "자바 9 모듈화 (Java 9에서 모듈형 애플리케이션을 작성하는 데 필요한 패턴과 사례를 설명)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13985969",
        "image": "https://bookthumb-phinf.pstatic.net/cover/139/859/13985969.jpg?type=m1&udate=20180918",
        "author": "샌더 맥|폴 베이커",
        "price": "25000",
        "discount": "22500",
        "publisher": "터닝포인트",
        "pubdate": "20180917",
        "isbn": "1161340297 9791161340296",
        "description": "JAVA 9에서 모듈형 애플리케이션을 만드는데 필요한 패턴과 사례이 책은 애플리케이션의 설계와 구조를 개선하려는 JAVA 개발자를 위한 책이다. JAVA 모듈시스템은 JAVA 애플리케이션을 설계하고 빌드하는 방법을 개선한다.\n모듈을 즉시 사용하지않더라도 JDK 자체의 모듈화를 이해하는 것이 중요한... ",
        "authorIntroContent": "\n샌더 맥\n저자 : 샌더 맥저자 샌더 맥네덜란드의 LUMINIS에서 FELLOW로 일하고 있으며, 주로 JVM에서 모듈형 및 확장 가능한 소프트웨어를 개발하지만 필요한 경우 TYPESCRIPT를 사용하고 있다.열정적인 연사이며 블로그 HTTP://BRANCHANDBOUND.NET와 PLURALSIGHT 강사로서 지식을 공유하는 것을 좋아한다.저자 : 폴 베이커저자 폴 베이커NETFLIX의 선임 소프트웨어 엔지니어로 EDGE DEVELOPER EXPERIENCE 팀에서 주로 회사 내에서 개발자 생산성 향상을 위한 도구 작업을 하고 있다. 코드 작성 외에도 지식 공유에 대해 열정을 가지고 있다.이 책은 MODULAR CLOUD APPS와OSGI (O'REILLY)를 공동 저작한 후 두 번째 저서이다. 모듈성, 컨테이너 기술 및 기타 여러 주제에 관한 회의에서 자주 연설한다.역자 : 김성태역자 김성태삼성 SDS에 입사하여 삼성전자 SMARTTV 개발(C++, JAVASCRIPT) 관련 프로젝트 수행과 솔루션 개발(JAVA)을 하였으며, 현재는 스타트업에서 NODE.JS, REACT 등을 활용하여 서비스 개발을 하고 있다.\"뿌리가 튼튼한 JSP\"(2002년 공동저술), \"J2EE DESIGN PATTERNS APPLIED\"(2003년 공동 번역), \"웹 애플리케이션 개발을 위한 자바스크립트와 JQUERY 기초가이드\"(2016년 공동 저술) 작업을 하였다역자 : 임재봉역자 김성태삼성 SDS에 입사하여 삼성전자 SMARTTV 개발(C++, JAVASCRIPT) 관련 프로젝트 수행과 솔루션 개발(JAVA)을 하였으며, 현재는 스타트업에서 NODE.JS, REACT 등을 활용하여 서비스 개발을 하고 있다.\"뿌리가 튼튼한 JSP\"(2002년 공동저술), \"J2EE DESIGN PATTERNS APPLIED\"(2003년 공동 번역), \"웹 애플리케이션 개발을 위한 자바스크립트와 JQUERY 기초가이드\"(2016년 공동 저술) 작업을 하였다\n",
        "bookIntroContent": "JAVA 9에서 모듈형 애플리케이션을 만드는데 필요한 패턴과 사례이 책은 애플리케이션의 설계와 구조를 개선하려는 JAVA 개발자를 위한 책이다. JAVA 모듈시스템은 JAVA 애플리케이션을 설계하고 빌드하는 방법을 개선한다.모듈을 즉시 사용하지않더라도 JDK 자체의 모듈화를 이해하는 것이 중요한 첫걸음이다. 책의 첫 번째 파트에서모듈을 이해하고나면, 다음 파트의 마이그레이션에 대한 설명을 접하게 된다.이 책은 JAVA에 대한 일반적인 소개를 하지 않는다. 비교적 큰 규모의 JAVA 애플리케이션을 개발한 경험이 있다고 가정하고 설명을 한다. 대규모의 애플리케이션을 개발하는 경우 모듈화가 점점 중요해지고 있다.경험 많은 JAVA 개발자는 클래스패스로 인해 발생하는 문제점을 인식하고 있으며 이는 모듈시스템과 모듈의 기능을 이해하는데 도움이 될 것이다.이 책은 세 파트로 나누어져 있다.   1. JAVA 모듈시스템 소개  2. 마이그레이션  3. 모듈형 개발 도구 첫 번째 파트에서는 모듈시스템 사용방법을 설명한다. 모듈형 JDK를 시작으로, 사용자 고유의 모듈을 생성한다. 다음으로는 모듈의 디커플링을 가능하게 하는 서비스에 대해 설명한다. 첫 번째 파트는 모듈화 패턴에 대한 논의와 어떻게 모듈을 사용하여 유지보수성과 확장성을 극대화할 수 있는지에 대하여 설명한다. 두 번째 파트는 마이그레이션에 관한 것이다. 대부분의 경우 모듈시스템용으로 설계되지 않은 JAVA 라이브러리를 사용하는 기존 JAVA 코드가 남아있을 것이다. 이 파트에서는 기존 코드를 모듈로 마이그레이션하는 방법과 아직 모듈로 변환되지 않은 기존 라이브러리를 사용하는 방법을 배우게된다.라이브러리의 작성자 또는 유지관리자인 경우, 라이브러리에모듈을 지원할 수 있도록 수정하는 방법을 설명한다. 세 번째 파트는 도구들에 관한 것이다. 이 파트에서는 IDE 및 빌드 도구의 현재 상황에 대해 알아본다. 또한 모듈을 테스트하는 방법도 배우게 될 것이다. 모듈은 새로운 도전 과제를 제공할 뿐 아니라 (테스트)단위 테스트 기회이기도 하다.마지막으로 모듈 시스템의 또 다른 흥미로운 기능인 “링크(LINKING)”에 대해서도 알아 볼 것이다. 이 기능을 사용하면최적화된 사용자정의 런타임 이미지를 만들 수 있으므로 모듈을 사용하여 JAVA 애플리케이션을 제공하는 방법을 변경할 수 있다.",
        "tableOfContentsContent": "\n파트 1. Java 모듈 시스템 소개\r1장. 모듈화 관련 이슈들\r모듈화는 무엇인가?\rJava 9 이전 버전 살펴보기\rJAR가 모듈로 사용될 수 있을까? \r클래스패스 지옥\rJava 9 모듈\r 2장. 모듈과 모듈형 JDK\r모듈형 JDK\r모듈 디스크립터(Module Descriptor)\r가독성(Readability)\r접근성 \r묵시적 가독성\r제한적인 익스포트(qualified exports)\r모듈 해석(resolution)과 모듈패스\r모듈화 되지 않은 코드에서 모듈형 JDK 사용하기\r 3장. 모듈 개발하기\r첫 번째 모듈 만들기\r모듈 구조\r모듈 이름 정하기 \r컴파일하기\r패키징하기\r모듈 실행하기\r모듈패스\r모듈 연결하기 \r혼자 동작하는 모듈은 없다\rEasyText 예제 알아보기\r두 개의 모듈\r플랫폼 모듈을 사용하여 동작하기\r적합한 플랫폼 모듈 찾기\rGUI 모듈 만들기\r캡슐화의 한계\r인터페이스와 인스턴스화\r 4장. 서비스\r팩토리 패턴 \r구현을 숨기기 위한 서비스\r서비스 제공하기 \r서비스 사용하기\r서비스 라이프 사이클\r서비스 Provider 메소드\r팩토리 패턴 재검토\r디폴트 서비스 구현\r서비스 구현 선택\r서비스 타입 검사 및 게으른 인스턴스화\r서비스 바인딩을 사용한 모듈 해석\r서비스 및 연결하기\r 5장. 모듈화 패턴\r모듈 바운더리 정하기\r린(lean) 모듈\rAPI 모듈\rAPI 모듈은 어떻게 구성해야 할까?\r묵시적 가독성\r디폴트 구현이 있는 API 모듈\r집합 모듈\r모듈에 Facade 패턴 적용하기\r안전하게 모듈 분리하기\r순환 의존성 피하기\r분할 패키지\r순환 의존성 제거하기\r선택적 의존성\r컴파일 시점 의존성\r서비스를 이용한 선택적 의존성 구현\r모듈 버전 관리\r모듈 해석과 버전\r리소스 캡슐화\r모듈에서 리소스 로딩하기\r모듈 사이의 리소스 로드\rResourceBundles 클래스 사용하기\r 6장. 고급 모듈화 패턴\r강력한 캡슐화 재검토\r딥 리플렉션\r오픈 모듈과 패키지\r의존성 주입\r모듈에 대한 리플렉션\r모듈 읽기\r모듈 수정하기 \r어노테이션\r컨테이너 애플리케이션 패턴\r레이어 및 설정\r레이어에서의 클래스 로딩\r플러그인 아키텍처\r컨테이너 아키텍처\r컨테이너에서 플랫폼 모듈 해석\r 파트 2. 마이그레이션\r7장. 모듈로 변환하지 않고 마이그레이션하기\r클래스 패스는 없어졌지만, 여전히 사용된다\r라이브러리, 강력한 캡슐화 그리고 JDK 9 클래스패스\r컴파일 및 캡슐화된 API\r삭제된 타입\rJAXB 및 기타 Java EE API 사용\rjdk.unsupported 모듈\r기타 변경 사항\r 8장. 모듈로 마이그레이션\r마이그레이션 전략\r간단한 예제 살펴보기\r클래스패스와 모듈패스 같이 사용하기 \r자동 모듈\r오픈 패키지\r오픈 모듈\r캡슐화 해제를 위한 VM인수 \r자동 모듈과 클래스패스\rJdeps 사용하기\r동적 코드 로딩\r분할 패키지\r 9장. 마이그레이션 케이스 스터디: Spring과Hibernate\r애플리케이션에 익숙해지기 \rJava 9에서 클래스패스 기반으로 실행하기 \r모듈 설정하기\r자동 모듈 사용하기\rJava 플랫폼 의존성 및 자동 모듈\r리플렉션을 위해 패키지 오픈하기 \r불법적인 접근 수정하기 \r다중 모듈에 대한 리팩터링\r10장. 라이브러리 마이그레이션\r모듈화 이전 단계\r라이브러리 모듈 이름 선택하기 \r모듈 디스크립터 만들기 \r모듈 디스크립터로 라이브러리 업데이트하기 \rJava 구버전 타겟팅하기\r라이브러리 모듈 의존성 \r내부 의존성\r외부 의존성\r다양한 Java 버전 타겟팅하기\r다중 릴리즈 JAR\r모듈형 다중 릴리즈 JAR\r 파트 3 모듈 개발을 위한 도구\r11장. 빌드 도구와 IDE\rApache Maven \r다중 모듈 프로젝트\rEasyText에 Apache Maven 적용하기\rApache Maven으로 모듈형 애플리케이션실행하기\rGradle \rIDE\r 12장. 모듈 테스트\r블랙박스 테스트\rJunit을 이용한 블랙박스 테스트 \r화이트박스 테스트\r테스트 도구들\r 13장. 사용자 정의 런타임 이미지를 이용한 사이즈 줄이기\r정적 링크와 동적 링크\rjlink 사용하기\r적합한 서비스 Provider 모듈 찾기\r링크 시점의 모듈 해석\r클래스패스 기반의 어플리케이션을 위한 jlink\r사이즈 줄이기\r성능 향상하기\r크로스 타겟팅을 위한 런타임 이미지\r14장. 모듈화의 미래\rOSGi \rJava EE\r마이크로서비스\r\n",
        "isbn10": "1161340297",
        "isbn13": "9791161340296"
    },
    {
        "title": "손안의 자바 (초보자를 위한 자바 프로그래밍의 핵심 + 알파)",
        "link": "http://book.naver.com/bookdb/book_detail.php?bid=13772606",
        "image": "https://bookthumb-phinf.pstatic.net/cover/137/726/13772606.jpg?type=m1&udate=20180719",
        "author": "김지훈|이현우",
        "price": "30000",
        "discount": "27000",
        "publisher": "에이콘출판",
        "pubdate": "20180717",
        "isbn": "1161751831 9791161751832",
        "description": "초보 개발자들에게 실제 프로젝트에서 사용하는 핵심 문법 위주로 자바를 소개하며, 최신 버전의 자바의 기능과 관련해 앞으로 사용될 것 같다고 판단되는 장치들을 포함시켰다. 많은 자바 입문자가 이 책을 읽고 효율적인 길을 걸을 수 있기를 바란다.\n\n★ 이 책에서 다루는 내용 ★\n\n- 초보자를 위한 자바 문법... ",
        "authorIntroContent": "\n김지훈\n저자 : 김지훈저자 김지훈동국대학교 컴퓨터공학과를 나왔으며, 홍익대학교 대학원 컴퓨터공학과에서 시스템 프로그래밍을 전공해 석사 학위를 받았다. LG CNS에서 SW 아키텍트를 수행했으며, KT DS에서 연구원을 지냈고 현재는 정보기술감리원에서 감리사로 근무 중이다. 안드로이드, HTML5, 빅데이터, 보안 분야에서 저술과 번역 작업을 수행했으며, 정보시스템 감리에서 주로 수행하는 분야는 시스템 구조 및 보안 분야이다.저자 : 이현우저자 이현우대한민국 공군 장교로 방공전산서버 운영을 하면서 IT 관련 경력을 시작했다. 이후 LG CNS에서 차세대 응용개발 프로그램을 수행했으며, 모바일 개발에 관심을 가지고 KT DS 연구소의 모바일 플랫폼 개발을 수행했다. 이후 정보시스템감리사 자격증을 취득한 후 한국 공공기관의 정보시스템 감리업무를 수행하고 있으며, IBK기업은행, 삼성생명, 산업은행, 한국전력 등의 많은 공공기관의 감리 업무를 수행했다. IT 강의를 하는 것을 좋아하며 시큐어코딩 및 데이터베이스, 자바프로그램에 대한 강의를 한국전력 및 한국소프트웨어 기술진흥협회(KOSTA), 한국ICT융합협동조합 등에서 수행했다. 최근 화제가 되고 있는 워라벨을 중시하며, 매번 어제보다 나은 오늘이 되기 위해서 노력하지만 매번 부족함을 느끼고 있는 개발자이다.\n",
        "bookIntroContent": "정보시스템 감리를 통해 70여 개 이상의 프로젝트 소스 코드를 검사했다. 이 소스코드 검사를 통해 실제 프로젝트에서 사용하는 문법이 무엇이며, 개발자들이 잘 실수하는 것이 무엇인지 알게 됐다.본 책은 이러한 경험을 바탕으로 작성한 책이다. 초보 개발자들에게 실제 프로젝트에서 사용하는 핵심 문법 위주로 자바를 소개하며, 최신 버전의 자바의 기능과 관련해 앞으로 사용될 것 같다고 판단되는 장치들을 포함시켰다. 많은 자바 입문자가 이 책을 읽고 효율적인 길을 걸을 수 있기를 바란다.★ 이 책에서 다루는 내용 ★- 초보자를 위한 자바 문법 핵심 + 알파- 실제 프로젝트에서 사용하는 문법 위주의 자바 프로그래밍- 좋은 프로그램을 위한 기본적인 가이드- 개발자들이 실수하기 쉬운 개념- 정부가 주관하는 수십 개의 프로젝트에서 사용하지 않는 문법 제외",
        "tableOfContentsContent": "\n1부. 자바 기본  1장. 자바를 시작하며  __자바란? __개발 환경 구축하기 __자바에서의 명명 규칙  2장. 변수와 상수  __변수의 이해와 활용 __변수의 타입 __논리형 - boolean __문자형 - char __정수형 - byte, short, int, long __실수형 - float, double __형변환 __상수  3장. 연산자  __연산자 종류와 우선순위 __단항 연산자 ____논리 부정 연산자 ! ____부호 연산자 +, - ____비트 전환 연산자 ~ ____증감 연산자 + + , - -  __산술 연산자 ____나머지 연산자 % ____사칙 연산자 +, -, ?, / ____시프트 연산자 , >>> __비교 연산자 ____대소비교 연산자 , = ____등가비교 연산자 ==, != __논리 연산자  ____논리 연산자 &&, || ____비트 연산자 &, |, ^  4장. 실행흐름의 컨트롤  __조건문 if문, switch문 ____if문 ____switch문  __반복문 for, while, do~while  ____do~while문 ____for문  ____while문  __break와 continue문  ____break문  ____continue문 __변수의 범위  5장. 배열  __배열(array)의 필요성 __배열의 선언과 생성 그리고 초기화 __배열의 사용 __배열의 복사 __다차원 배열 __가변 배열  __배열을 벗어난 인덱스 __System.arraycopy와 매뉴얼 복사 중 누가 빠른가? __Arrays - 배열을 위한 유틸 클래스  6장. 객체 지향 프로그래밍의 개념  __객체 지향 프로그래밍이란? __객체 __객체 간 상호작용  __캡슐화 __객체와 클래스 그리고 객체 참조자  7장. 클래스, 변수,메소드  __자바 10에서의 지역 변수 타입 추론 __클래스 선언 __클래스 사용 __클래스 구성 요소 __필드(멤버 변수) __필드 선언 __필드 사용 __메소드 ____Void __메소드 오버로딩 __생성자  8장. 패키지와 임포트  __패키지 __임포트(import)  9장. 상속과 오버라이딩 그리고 다형성  __상속의 개념 __상속  __오버라이딩 __다형성 __상속과 생성자 __상속관계에서의 메소드 호출 순서  10장. 제어자  __접근 제어자 ____Private ____Protected ____Public __프로그래밍 가이드 - 접근 제어자의 엄격한 적용 __프로그래밍 가이드 - 멤버변수에 대한 직접 접근을 막아라 __static 제어자 __정적 메소드의 재정의 불가 __final 제어자  11장. 추상 클래스와 인터페이스  __추상 클래스 __인터페이스 __인터페이스를 사용한 다중상속 __자바 8 이후의 인터페이스 변화 ____인터페이스 private 메소드와 인터페이스 private 정적 메소드 ____인터페이스 디폴트(default) 메소드 ____인터페이스 정적(static) 메소드 __자바 8 이후의 인터페이스를 사용한 다중상속 __자바8 이후의 ::를 사용한 메소드 참조 그리고 함수형 인터페이스 ____빌트인 함수형 인터페이스 ____함수형 인터페이스  12장. 중첩 클래스  __중첩 클래스 사용 이유 __중첩 클래스 분류 __내부 클래스  __정적 내부 클래스 __메소드 로컬 내부 클래스 __익명 내부 클래스 __유사 중첩 클래스  13장. 오류 처리  __오류 처리 소개 __오류 클래스 구조 및 기본 동작 방식 __예외 캐치 처리 순서 __비즈니스 예외 __실 프로젝트에서 많이 사용되는 예외 처리 방안 __finally 문장 __try-with-resources 문장 __인터페이스나 추상 클래스에서의 예외 쓰로우 선언  14장. 자주 사용하는 자바 기본 API  __Object 클래스 ____clone() ____toEquals() ____toString() ____프로그래밍 가이드 - Object의 toString()을 재정의하라 __String 클래스 __Math 클래스 __래퍼 클래스 __Random 클래스 __java.util.regex 패키지 __BigInteger __BigDecimal __Calendar와 Date 그리고 DateFormat __자바 8부터 지원하는 새로운 날짜 지원 API ____날짜 및 시간 객체에서 정보 조회하기 ____날짜 및 시간 알아내기 ____날짜와 시간 더하거나 빼기 __날짜와 시간 변경하기 __특정 날짜 계산하기 ____Duration을 사용한 초, 나노초 기반 차이 ____Period를 사용한 날짜 기반 차이 ____날짜 및 시간 비교 ____날짜 및 시간 차이 계산 ____날짜 포맷팅 __ZonedDateTime으로 세계시 다루기  15장. 제네릭  __들어가면서 __제네릭의 필요성 __제네릭을 이용한 첫번째 클래스 작성하기 __제네릭 동작 방식 __제네릭 기본 문법 ____구체화 타입의 자식 타입 사용 가능 ____정적 요소에 제네릭 타입 사용 불가 ____제네릭 클래스의 new 불가 ____제네릭 타입 구체화 시 배열 불가 ____제네릭 타입에 제약 조건 두기 __제네릭 인터페이스 __제네릭 메소드 __제네릭 와일드카드 __좀 더 복잡한 제네릭 메소드와 와일드카드의 예 ____파라미터에는 와일드카드가 없는 경우 ____파라미터에 와일드카드가 두개 있는 경우 ____파라미터에 와일드카드가 한개 있는 경우 __다이아몬드 연산자  16장. 컬렉션 프레임워크  __HashSet __ArrayList __Vector __HashMap과 Hashtable __Iterator __리스트 대 배열 __Comparator를 사용한 목록 정렬하기 __목록에 요소 추가 및 삭제하기 ____foreach문에서의 추가 및 삭제 시 예외발생 ____Iterator를 사용한 요소 삭제 ____인덱스를 사용한 for문에서의 삭제 시 정합성 문제 ____인덱스를 사용한 요소 삭제 및 추가  17장. 열거형(Enum 타입)  __들어가면서 __처음 만나는 열거형 __열거형에 데이터 연결하기 __여러 형태의 열거형 정의 방법 __열거형에 관한 유용한 메소드  18장. 어노테이션  __들어가면서 __어노테이션 맛보기 __JDK가 제공하는 표준 어노테이션 __커스텀 어노테이션 작성을 위한 기초 지식 ____@Documented ____@Inherited ____@Repeatable ____@Retention ____@Target __커스텀 어노테이션 작성하기 __프로그래밍 가이드 - 네이밍 규칙보다는 어노테이션을 사용해 식별하라  19장. 람다식  __들어가면서 __람다식 개념 __람다식 활용 예 __함수형 인터페이스 ____람다식을 조합하기 위한 빌트인 함수형 인터페이스의 장치 ____람다 캡처링  20장. 자바 8의 스트림  __들어가면서 ____스트림을 왜 사용하는가? __스트림 동작 방식 ____Stream의 인스턴스 메소드 collect() ____Stream의 인스턴스 메소드 filter() ____Stream의 인스턴스 메소드 map() ____Stream의 인스턴스 메소드 sorted() __스트림 예제 분석하기 __스트림 좀더 알아보기 __다양한 스트림 메소드 ____Collectors.groupingBy() 메소드 ____Finding과 Matching 메소드 ____foreach 메소드 ____Stream의 mapToInt(), mapToLong(), mapToDouble() 메소드 ____Stream의 Reduce() 메소드 ____병렬처리를 위한 parallelStream ____복합객체의 스트림을 세부 객체의 스트림으로 분해하는 flatMap() 메소드 ____중복 요소를 제거하는 메소드 - distinct() ____최대 요소의 개수를 제한하는 메소드 - limit() ____특정 개수를 건너띄는 메소드 - skip() ____필터 기능을 제공하는 메소드 - filter(), distinct(), limit(), skip()  21장. 스레드  __들어가면서 __스레드란? __동시성와 병렬성 __첫 번째 스레드 프로그램 __다양한 스레드 생성 방법 __스레드 세이프 __동기화 메소드 및 동기화 블록 __멀티스레드 프로그래밍의 일반적인 패턴 - 스레드 풀 __서버(Was)의 스레드 프로그래밍 모델  __스레드 로컬 __결과 값이 있는 동시 수행 __Fork/Join 프레임워크의 필요성 __ForkJoin을 사용한 동시 처리  22장. I/O 스트림 및 파일  __들어가면서 __I/O 스트림 개념 __다양한 I/O 스트림 __FileInputStream __FileOutputStream __ByteArrayInputStream /ByteArrayOutputStream __버퍼링 개념 __BufferedInputStream/BufferedOutputStream __파일 다루기 ____File 생성자 ____I/O 스트림 등에서 파일이름 문자열 대신 File 사용하기 ____기존 파일에 스트링 덧붙이기 ____디렉터리 생성하기 ____마지막 수정 날짜 변경하기  ____마지막으로 수정된 날짜 구하기 ____이름 변경하기 ____파일/디렉터리 존재 여부 확인 ____파일 사이즈 구하기 ____파일 삭제하기 ____파일 생성하기  23장. 네트워크 프로그래밍  __들어가면서 __네트워크 환경 이해 ____MAC ____라우터 ____방화벽 ____스위치 __도메인 __TCP/IP 4 계층 __소켓 서버 기본 구조 이해하기 __소켓 클라이언트 프로그램 기본 구조 이해하기 __개선된 소켓 서버 프로그램 __UDP 소개 및 예제  24장. Java NIO  __들어가면서 __NIO 이유 __채널과 버퍼 그리고 셀렉터 개념 알아보기 __버퍼 좀더 알아보기 ____버퍼 생성 ____버퍼 위치 속성 __채널과 버퍼 사용 패턴 __NIO 소켓 서버 프로그램 __IO vs NIO 선택  2부. 자바 확장  1장. 생성자 관련  __들어가면서 __프로그래밍 가이드 - 생성자 대신 정적 팩토리 메소드 사용을 검토하라 __프로그래밍 가이드 - 생성자 대신 빌더 사용을 검토하라 __프로그래밍 가이드 - 유틸리티 클래스 생성자를 private로 하라  2장. 가비지 컬렉션  __들어가면서 __프로그래밍 가이드 - 쓸모없는 객체참조를 제거하라 __프로그래밍 가이드 - 종결자를 중요 작업에 사용하지 않아야 한다  3장. 객체 복사하기   __들어가면서 __클론을 이용한 복사 ____복사 생성자나 복사 정적 팩토리 메소드 사용한 복사방법을 고려하라  4장. 클래스 설계 가이드  __들어가면서 __프로그래밍 가이드 - 가능한 불변 클래스로 설계하라 __프로그래밍 가이드 - 상속보다는 컴포지션을 사용하라  5장. 그 밖의 기타 사항  __클래스패스를 고려한 클래스 실행 __java로 클래스 실행 시 인수 전달하기 __라이브러리란? __Maven 환경 소개 \n",
        "isbn10": "1161751831",
        "isbn13": "9791161751832"
    }
]